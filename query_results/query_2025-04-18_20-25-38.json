{
  "metadata": {
    "timestamp": "2025-04-18_20-25-38",
    "query_id": "query_2025-04-18_20-25-38",
    "original_query": "Show all active network connections in TCP and UDP",
    "optimized_query": "List all active network connections associated with web server processes, specifying both TCP and UDP protocols. Include the process ID, protocol, local address, remote address, and connection state for each connection.",
    "query_intent": "Identify and display all currently established network connections used by web servers, filtered for both TCP and UDP protocols.",
    "keywords": [
      "active connections",
      "web connections",
      "TCP",
      "UDP",
      "network connections",
      "established connections"
    ],
    "optimization_metrics": {
      "precision": 1.0,
      "recall": 0,
      "f1_score": 0,
      "retrieval_time": 0.018789291381835938,
      "command_count": 4,
      "diverse_categories": 0,
      "query_specificity": 0.6,
      "overall_score": 0.5790605354309082
    }
  },
  "retrieved_commands": [
    {
      "command": "pcp-netstat",
      "description": "the\npcp-netstat\ncommand is used for viewing the different kinds of\n       statistics related to the network protocols and the network\n       interfaces. this tool is useful for checking the status of your\n       network interfaces, network connections and for troubleshooting\n       network issues.  this tool can also be used to analyze network\n       statistics for all available protocols, including tcp, udp, icmp,\n       and ip protocols.\n\n       by default\npcp-netstat\nreports live data for the local host. it\n       has the capabilities to analyze the data on the archives as well.",
      "examples": "",
      "options": ""
    },
    {
      "command": "nping",
      "description": "nping is an open-source tool for network packet generation,\n       response analysis and response time measurement. nping allows\n       users to generate network packets of a wide range of protocols,\n       letting them tune virtually any field of the protocol headers.\n       while nping can be used as a simple ping utility to detect active\n       hosts, it can also be used as a raw packet generator for network\n       stack stress tests, arp poisoning, denial of service attacks,\n       route tracing, and other purposes.\n\n       additionally, nping offers a special mode of operation called the\n       \"echo mode\", that lets users see how the generated probes change\n       in transit, revealing the differences between the transmitted\n       packets and the packets received at the other end. see section\n       \"echo mode\" for details.\n\n       the output from nping is a list of the packets that are being sent\n       and received. the level of detail depends on the options used.\n\n       a typical nping execution is shown in example 1. the only nping\n       arguments used in this example are\n-c\n, to specify the number of\n       times to target each host,\n--tcp\nto specify tcp probe mode,\n-p\n80,433\nto specify the target ports; and then the two target\n       hostnames.\nexample 1. a representative nping execution\n#\nnping -c 1 --tcp -p 80,433 scanme.nmap.org google.com\nstarting nping (\nhttps://nmap.org/nping\n)\n           sent (0.0120s) tcp 96.16.226.135:50091 > 64.13.134.52:80 s ttl=64 id=52072 iplen=40  seq=1077657388 win=1480\n           rcvd (0.1810s) tcp 64.13.134.52:80 > 96.16.226.135:50091 sa ttl=53 id=0 iplen=44  seq=4158134847 win=5840 <mss 1460>\n           sent (1.0140s) tcp 96.16.226.135:50091 > 74.125.45.100:80 s ttl=64 id=13932 iplen=40  seq=1077657388 win=1480\n           rcvd (1.1370s) tcp 74.125.45.100:80 > 96.16.226.135:50091 sa ttl=52 id=52913 iplen=44  seq=2650443864 win=5720 <mss 1430>\n           sent (2.0140s) tcp 96.16.226.135:50091 > 64.13.134.52:433 s ttl=64 id=8373 iplen=40  seq=1077657388 win=1480\n           sent (3.0140s) tcp 96.16.226.135:50091 > 74.125.45.100:433 s ttl=64 id=23624 iplen=40  seq=1077657388 win=1480\n\n           statistics for host scanme.nmap.org (64.13.134.52):\n            |  probes sent: 2 | rcvd: 1 | lost: 1  (50.00%)\n            |_ max rtt: 169.720ms | min rtt: 169.720ms | avg rtt: 169.720ms\n           statistics for host google.com (74.125.45.100):\n            |  probes sent: 2 | rcvd: 1 | lost: 1  (50.00%)\n            |_ max rtt: 122.686ms | min rtt: 122.686ms | avg rtt: 122.686ms\n           raw packets sent: 4 (160b) | rcvd: 2 (92b) | lost: 2 (50.00%)\n           tx time: 3.00296s | tx bytes/s: 53.28 | tx pkts/s: 1.33\n           rx time: 3.00296s | rx bytes/s: 30.64 | rx pkts/s: 0.67\n           nping done: 2 ip addresses pinged in 4.01 seconds\n\n       the newest version of nping can be obtained with nmap at\nhttps://nmap.org\n. the newest version of this man page is available\n       at\nhttps://nmap.org/book/nping-man.html\n.\n\n       -->\n         .sh \"options summary\"\n\n       this options summary is printed when nping is run with no\n       arguments. it helps people remember the most common options, but\n       is no substitute for the in-depth documentation in the rest of\n       this manual. some obscure options aren't even included here.\n\n           nping 0.7.92svn (\nhttps://nmap.org/nping\n)\n           usage: nping [probe mode] [options] {target specification}\n\n           target specification:\n             targets may be specified as hostnames, ip addresses, networks, etc.\n             ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.*.1-24\n           probe modes:\n             --tcp-connect                    : unprivileged tcp connect probe mode.\n             --tcp                            : tcp probe mode.\n             --udp                            : udp probe mode.\n             --icmp                           : icmp probe mode.\n             --arp                            : arp/rarp probe mode.\n             --tr, --traceroute               : traceroute mode (can only be used with\n                                                tcp/udp/icmp modes).\n           tcp connect mode:\n              -p, --dest-port <port spec>     : set destination port(s).\n              -g, --source-port <portnumber>  : try to use a custom source port.\n           tcp probe mode:\n              -g, --source-port <portnumber>  : set source port.\n              -p, --dest-port <port spec>     : set destination port(s).\n              --seq <seqnumber>               : set sequence number.\n              --flags <flag list>             : set tcp flags (ack,psh,rst,syn,fin...)\n              --ack <acknumber>               : set ack number.\n              --win <size>                    : set window size.\n              --badsum                        : use a random invalid checksum.\n           udp probe mode:\n              -g, --source-port <portnumber>  : set source port.\n              -p, --dest-port <port spec>     : set destination port(s).\n              --badsum                        : use a random invalid checksum.\n           icmp probe mode:\n             --icmp-type <type>               : icmp type.\n             --icmp-code <code>               : icmp code.\n             --icmp-id <id>                   : set identifier.\n             --icmp-seq <n>                   : set sequence number.\n             --icmp-redirect-addr <addr>      : set redirect address.\n             --icmp-param-pointer <pnt>       : set parameter problem pointer.\n             --icmp-advert-lifetime <time>    : set router advertisement lifetime.\n             --icmp-advert-entry <ip,pref>    : add router advertisement entry.\n             --icmp-orig-time  <timestamp>    : set originate timestamp.\n             --icmp-recv-time  <timestamp>    : set receive timestamp.\n             --icmp-trans-time <timestamp>    : set transmit timestamp.\n           arp/rarp probe mode:\n             --arp-type <type>                : type: arp, arp-reply, rarp, rarp-reply.\n             --arp-sender-mac <mac>           : set sender mac address.\n             --arp-sender-ip  <addr>          : set sender ip address.\n             --arp-target-mac <mac>           : set target mac address.\n             --arp-target-ip  <addr>          : set target ip address.\n           ipv4 options:\n             -s, --source-ip                  : set source ip address.\n             --dest-ip <addr>                 : set destination ip address (used as an\n                                                alternative to {target specification} ).\n             --tos <tos>                      : set type of service field (8bits).\n             --id  <id>                       : set identification field (16 bits).\n             --df                             : set don't fragment flag.\n             --mf                             : set more fragments flag.\n             --evil                           : set reserved / evil flag.\n             --ttl <hops>                     : set time to live [0-255].\n             --badsum-ip                      : use a random invalid checksum.\n             --ip-options <s|r [route]|l [route]|t|u ...> : set ip options\n             --ip-options <hex string>                    : set ip options\n             --mtu <size>                     : set mtu. packets get fragmented if mtu is\n                                                small enough.\n           ipv6 options:\n             -6, --ipv6                       : use ip version 6.\n             --dest-ip                        : set destination ip address (used as an\n                                                alternative to {target specification}).\n             --hop-limit                      : set hop limit (same as ipv4 ttl).\n             --traffic-class <class> :        : set traffic class.\n             --flow <label>                   : set flow label.\n           ethernet options:\n             --dest-mac <mac>                 : set destination mac address. (disables\n                                                arp resolution)\n             --source-mac <mac>               : set source mac address.\n             --ether-type <type>              : set ethertype value.\n           payload options:\n             --data <hex string>              : include a custom payload.\n             --data-string <text>             : include a custom ascii text.\n             --data-length <len>              : include len random bytes as payload.\n           echo client/server:\n             --echo-client <passphrase>       : run nping in client mode.\n             --echo-server <passphrase>       : run nping in server mode.\n             --echo-port <port>               : use custom <port> to listen or connect.\n             --no-crypto                      : disable encryption and authentication.\n             --once                           : stop the server after one connection.\n             --safe-payloads                  : erase application data in echoed packets.\n           timing and performance:\n             options which take <time> are in seconds, or append 'ms' (milliseconds),\n             's' (seconds), 'm' (minutes), or 'h' (hours) to the value (e.g. 30m, 0.25h).\n             --delay <time>                   : adjust delay between probes.\n             --rate  <rate>                   : send num packets per second.\n           misc:\n             -h, --help                       : display help information.\n             -v, --version                    : display current version number.\n             -c, --count <n>                  : stop after <n> rounds.\n             -e, --interface <name>           : use supplied network interface.\n             -h, --hide-sent                  : do not display sent packets.\n             -n, --no-capture                 : do not try to capture replies.\n             --privileged                     : assume user is fully privileged.\n             --unprivileged                   : assume user lacks raw socket privileges.\n             --send-eth                       : send packets at the raw ethernet layer.\n             --send-ip                        : send packets using raw ip sockets.\n             --bpf-filter <filter spec>       : specify custom bpf filter.\n           output:\n             -v                               : increment verbosity level by one.\n             -v[level]                        : set verbosity level. e.g: -v4\n             -d                               : increment debugging level by one.\n             -d[level]                        : set debugging level. e.g: -d3\n             -q                               : decrease verbosity level by one.\n             -q[n]                            : decrease verbosity level n times\n             --quiet                          : set verbosity and debug level to minimum.\n             --debug                          : set verbosity and debug to the max level.\n           examples:\n             nping scanme.nmap.org\n             nping --tcp -p 80 --flags rst --ttl 2 192.168.1.1\n             nping --icmp --icmp-type time --delay 500ms 192.168.254.254\n             nping --echo-server \"public\" -e wlan0 -vvv\n             nping --echo-client \"public\" echo.nmap.org --tcp -p1-1024 --flags ack\n\n           see the man page for many more options, descriptions, and examples",
      "examples": "",
      "options": ""
    },
    {
      "command": "pcp-atopsar",
      "description": "the\npcp-atopsar\nprogram can be used to report statistics at the\n       system level.\n\n       in the first synopsis line (no sampling interval specified),\npcp-\natopsar\nextracts data from a raw logfile that has been recorded\n       previously by\npmlogger(1)\n(or via the\n-w\noption of the\npcp-atop\nprogram).\n       you can specify the name of the logfile with the\n-r\noption of the\npcp-atopsar\nprogram.  when a\npmlogger\ndaily logfile is used, named\n$pcp_log_dir/pmlogger/[host]/yyyymmdd\n(where yyyymmdd reflects the\n       date), the required date of the form yyyymmdd can be specified\n       with the\n-r\noption instead of the filename, or the symbolic name\n       'y' can be used for yesterday's daily logfile (this can be\n       repeated so 'yyyy' indicates the logfile of four days ago).  if\n       the\n-r\noption is not specified at all, today's daily logfile is\n       used by default.\n       by default, the hostname of the localhost will be used when\n       resolving\npmlogger\narchives, however an alternative\nhost\ncan be\n       specified using the\n-h\noption.\n       the starting and ending times of the report can be defined using\n       the options\n-b\nand\n-e\nfollowed by a time argument of the form\n       [yyyymmdd]hh:mm[ss].\n\n       in the second synopsis line,\npcp-atopsar\nreads actual activity\n       counters from the kernel with the specified\ninterval\n(in seconds)\n       and the specified number of\nsamples\n(optionally).  when\npcp-\natopsar\nis activated in this way it immediately sends the output\n       for every requested report to standard output.  if only one type\n       of report is requested, the header is printed once and after every\ninterval\nseconds the statistical counters are shown for that\n       period.  if several reports are requested, a header is printed per\n       sample followed by the statistical counters for that period.\n\n       when invoked via the\npcp(1)\ncommand, the\npcpintro(1)\noptions\n-h\n/\n--host\n,\n-a\n/\n--archive\n,\n-o\n/\n--origin\n,\n-s\n/\n--samples\n,\n-t\n/\n--interval\n,\n-z\n/\n--timezone\nand several other\npcp options\nbecome indirectly\n       available, see\npcpintro(1)\nfor their descriptions.\n\n       some generic flags can be specified to influence the behaviour of\n       the\npcp-atopsar\nprogram:\n-s\nby default the timestamp at the beginning of a line is\n            suppressed if more lines are shown for one interval. with\n            this flag a timestamp is given for every output-line (easier\n            for post-processing).\n-a\nby default certain resources as disks and network interfaces\n            are only shown when they were active during the interval.\n            with this flag all resources of a given type are shown, even\n            if they were inactive during the interval.\n-x\nby default\npcp-atopsar\nonly uses colors if output is directed\n            to a terminal (window).  these colors might indicate that a\n            critical occupation percentage has been reached (red) or has\n            been almost reached (cyan) for a particular resource.  see\n            the man-page of\natop\nfor a detailed description of this\n            feature (section colors).\n            with the flag\n-x\nthe use of colors is suppressed\n            unconditionally.\n-c\nby default\npcp-atopsar\nonly uses colors if output is directed\n            to a terminal (window).  these colors might indicate that a\n            critical occupation percentage has been reached (red) or has\n            been almost reached (cyan) for a particular resource.  see\n            the man-page of\natop\nfor a detailed description of this\n            feature (section colors).\n            with the flag\n-c\ncolors will always be used, even if output\n            is not directed to a terminal.\n-m\nuse markers at the end of a line to indicate that a critical\n            occupation percentage has been reached ('*') or has been\n            almost reached ('+') for particular resources. the marker '*'\n            is similar to the color red and the marker '+' to the color\n            cyan. see the man-page of\natop\nfor a detailed description of\n            these colors (section colors).\n-h\nrepeat the header line within a report for every\nn\ndetail\n            lines. the value of\nn\nis determined dynamically in case of\n            output to a tty/window (depending on the number of lines);\n            for output to a file or pipe this value is 23.\n-r\nsummarize\ncnt\nsamples into one sample. when the logfile\n            contains e.g. samples of 10 minutes, the use of the flag '-r\n            6' shows a report with one sample for every hour.\n\n       other flags are used to define which reports are required:\n-a\nshow all possible reports.\n-c\nreport about cpu utilization (in total and per cpu).\n-g\nreport about gpu utilization (per gpu).\n-p\nreport about processor-related matters, like load-averages\n            and hardware interrupts.\n-p\nreport about processes.\n-m\ncurrent memory- and swap-occupation.\n-s\nreport about paging- and swapping-activity, and\n            overcommitment.\n-b\nreport about pressure stall information (psi).\n-l\nreport about utilization of logical volumes.\n-f\nreport about utilization of multiple devices.\n-d\nreport about utilization of disks.\n-n\nreport about nfs mounted filesystems on nfs client.\n-j\nreport about nfs client activity.\n-j\nreport about nfs server activity.\n-i\nreport about the network interfaces.\n-i\nreport about errors for network-interfaces.\n-w\nreport about ip version 4 network traffic.\n-w\nreport about errors for ip version 4 traffic.\n-y\ngeneral report about icmp version 4 layer activity.\n-y\nper-type report about icmp version 4 layer activity.\n-u\nreport about udp version 4 network traffic.\n-z\nreport about ip version 6 network traffic.\n-z\nreport about errors for ip version 6 traffic.\n-k\ngeneral report about icmp version 6 layer activity.\n-k\nper-type report about icmp version 6 layer activity.\n-u\nreport about udp version 6 network traffic.\n-t\nreport about tcp network traffic.\n-t\nreport about errors for tcp-traffic.\n-h\nreport about infiniband utilization.\n-o\nreport about top-3 processes consuming most processor\n            capacity.  this report is only available when using a log\n            file (not when specifying an interval).\n-g\nreport about top-3 processes consuming most resident memory.\n            this report is only available when using a log file (not when\n            specifying an interval).\n-d\nreport about top-3 processes issuing most disk transfers.\n            this report is only available when using a log file (not when\n            specifying an interval).\n-n\nreport about top-3 processes issuing most ipv4/ipv6 socket\n            transfers.  this report is only available when using a log\n            file (not when specifying an interval).",
      "examples": "",
      "options": ""
    },
    {
      "command": "mariadb-slap",
      "description": "mariadb-slap\nis a diagnostic program designed to emulate client\n       load for a mariadb server and to report the timing of each stage.\n       it works as if multiple clients are accessing the server.\n\n       invoke\nmariadb-slap\nlike this:\n\n           shell>\nmariadb-slap [\noptions\n]\nsome options such as\n--create\nor\n--query\nenable you to specify a\n       string containing an sql statement or a file containing\n       statements. if you specify a file, by default it must contain one\n       statement per line. (that is, the implicit statement delimiter is\n       the newline character.) use the\n--delimiter\noption to specify a\n       different delimiter, which enables you to specify statements that\n       span multiple lines or place multiple statements on a single line.\n       you cannot include comments in a file;\nmariadb-slap\ndoes not\n       understand them.\nmariadb-slap\nruns in three stages:\n\n        1. create schema, table, and optionally any stored programs or\n           data you want to using for the test. this stage uses a single\n           client connection.\n\n        2. run the load test. this stage can use many client connections.\n\n        3. clean up (disconnect, drop table if specified). this stage\n           uses a single client connection.\n\n       examples:\n\n       supply your own create and query sql statements, with 50 clients\n       querying and 200 selects for each:\n\n           mariadb-slap --delimiter=\";\" \\\n             --create=\"create table a (b int);insert into a values (23)\" \\\n             --query=\"select * from a\" --concurrency=50 --iterations=200\n\n       let\nmariadb-slap\nbuild the query sql statement with a table of two\n       int columns and three varchar columns. use five clients querying\n       20 times each. do not create the table or insert the data (that\n       is, use the previous test's schema and data):\n\n           mariadb-slap --concurrency=5 --iterations=20 \\\n             --number-int-cols=2 --number-char-cols=3 \\\n             --auto-generate-sql\n\n       tell the program to load the create, insert, and query sql\n       statements from the specified files, where the create.sql file has\n       multiple table creation statements delimited by ';' and multiple\n       insert statements delimited by ';'. the\n--query\nfile will have\n       multiple queries delimited by ';'. run all the load statements,\n       then run all the queries in the query file with five clients (five\n       times each):\n\n           mariadb-slap --concurrency=5 \\\n             --iterations=5 --query=query.sql --create=create.sql \\\n             --delimiter=\";\"\nmariadb-slap\nsupports the following options, which can be\n       specified on the command line or in the [mariadb-slap] and\n       [client] option file groups.\nmariadb-slap\nalso supports the\n       options for processing option files.\n\n       \u00e2\u0080\u00a2\n--help\n,\n-?\ndisplay a help message and exit.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql\n,\n-a\ngenerate sql statements automatically when they are not\n           supplied in files or via command options.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-add-autoincrement\nadd an auto_increment column to automatically generated\n           tables.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-execute-number=\nn\nspecify how many queries to generate automatically.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-guid-primary\nadd a guid-based primary key to automatically generated\n           tables.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-load-type=\ntype\nspecify the test load type. the allowable values are read\n           (scan tables), write (insert into tables), key (read primary\n           keys), update (update primary keys), or mixed (half inserts,\n           half scanning selects). the default is mixed.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-secondary-indexes=\nn\nspecify how many secondary indexes to add to automatically\n           generated tables. by default, none are added.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-unique-query-number=\nn\nhow many different queries to generate for automatic tests.\n           for example, if you run a key test that performs 1000 selects,\n           you can use this option with a value of 1000 to run 1000\n           unique queries, or with a value of 50 to perform 50 different\n           selects. the default is 10.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-unique-write-number=\nn\nhow many different queries to generate for\n--auto-generate-sql-write-number\n. the default is 10.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-write-number=\nn\nhow many row inserts to perform on each thread. the default is\n           100.\n\n       \u00e2\u0080\u00a2\n--commit=\nn\nhow many statements to execute before committing. the default\n           is 0 (no commits are done).\n\n       \u00e2\u0080\u00a2\n--compress\n,\n-c\ncompress all information sent between the client and the\n           server if both support compression.\n\n       \u00e2\u0080\u00a2\n--concurrency=\nn\n,\n-c\nn\nthe number of clients to simulate when issuing the select\n           statement.\n\n       \u00e2\u0080\u00a2\n--create=\nvalue\nthe file or string containing the statement to use for\n           creating the table.\n\n       \u00e2\u0080\u00a2\n--create-schema=\nvalue\nthe schema in which to run the tests.\n\n       \u00e2\u0080\u00a2\n--csv[=\nfile_name\n]\ngenerate output in comma-separated values format. the output\n           goes to the named file, or to the standard output if no file\n           is given.\n\n       \u00e2\u0080\u00a2\n--debug[=\ndebug_options\n]\n,\n-# [\ndebug_options\n]\nwrite a debugging log. a typical\ndebug_options\nstring is\n           'd:t:o,\nfile_name\n'. the default is 'd:t:o,/tmp/mariadb-\n           slap.trace'.\n\n       \u00e2\u0080\u00a2\n--debug-check\nprint some debugging information when the program exits.\n\n       \u00e2\u0080\u00a2\n--debug-info\n,\n-t\nprint debugging information and memory and cpu usage\n           statistics when the program exits.\n\n       \u00e2\u0080\u00a2\n--default-auth=\nname\ndefault authentication client-side plugin to use.\n\n       \u00e2\u0080\u00a2\n--defaults-extra-file=\nfilename\nset\nfilename\nas the file to read default options from after\n           the global defaults files has been read.  must be given as\n           first option.\n\n       \u00e2\u0080\u00a2\n--defaults-file=\nfilename\nset\nfilename\nas the file to read default options from,\n           override global defaults files.  must be given as first\n           option.\n\n       \u00e2\u0080\u00a2\n--delimiter=\nstr\n,\n-f\nstr\nthe delimiter to use in sql statements supplied in files or\n           via command options.\n\n       \u00e2\u0080\u00a2\n--detach=\nn\ndetach (close and reopen) each connection after each\nn\nstatements. the default is 0 (connections are not detached).\n\n       \u00e2\u0080\u00a2\n--engine=\nengine_name\n,\n-e\nengine_name\ncomma separated list of storage engines to use for creating\n           the table. the test is run for each engine. you can also\n           specify an option for an engine after a colon, for example\nmemory:max_row=2300\n.\n\n       \u00e2\u0080\u00a2\n--host=\nhost_name\n,\n-h\nhost_name\nconnect to the mariadb server on the given host.\n\n       \u00e2\u0080\u00a2\n--init-command=str\nsql command to execute when connecting to mariadb server. will\n           automatically be re-executed when reconnecting.\n\n       \u00e2\u0080\u00a2\n--iterations=\nn\n,\n-i\nn\nthe number of times to run the tests.\n\n       \u00e2\u0080\u00a2\n--no-defaults\ndo not read default options from any option file. this must be\n           given as the first argument.\n\n       \u00e2\u0080\u00a2\n--no-drop\ndo not drop any schema created during the test after the test\n           is complete.\n\n       \u00e2\u0080\u00a2\n--number-char-cols=\nn\n,\n-x\nn\nthe number of varchar columns to use if\n--auto-generate-sql\nis\n           specified.\n\n       \u00e2\u0080\u00a2\n--number-int-cols=\nn\n,\n-y\nn\nthe number of int columns to use if\n--auto-generate-sql\nis\n           specified.\n\n       \u00e2\u0080\u00a2\n--number-of-queries=\nn\nlimit each client to approximately this many queries. query\n           counting takes into account the statement delimiter. for\n           example, if you invoke\nmariadb-slap\nas follows, the ;\n           delimiter is recognized so that each instance of the query\n           string counts as two queries. as a result, 5 rows (not 10) are\n           inserted.\n\n               shell>\nmariadb-slap --delimiter=\";\" --number-of-queries=10\n--query=\"use test;insert into t values(null)\"\n\u00e2\u0080\u00a2\n--only-print\ndo not connect to databases.\nmariadb-slap\nonly prints what it\n           would have done.\n\n       \u00e2\u0080\u00a2\n--password[=\npassword\n]\n,\n-p[\npassword\n]\nthe password to use when connecting to the server. if you use\n           the short option form (\n-p\n), you\ncannot\nhave a space between\n           the option and the password. if you omit the\npassword\nvalue\n           following the\n--password\nor\n-p\noption on the command line,\nmariadb-slap\nprompts for one.\n\n           specifying a password on the command line should be considered\n           insecure. you can use an option file to avoid giving the\n           password on the command line.\n\n       \u00e2\u0080\u00a2\n--pipe\n,\n-w\non windows, connect to the server via a named pipe. this\n           option applies only if the server supports named-pipe\n           connections.\n\n       \u00e2\u0080\u00a2\n--plugin-dir=\ndir_name\ndirectory for client-side plugins.\n\n       \u00e2\u0080\u00a2\n--port=\nport_num\n,\n-p\nport_num\nthe tcp/ip port number to use for the connection.  forces\n           --protocol=tcp when specified on the command line without\n           other connection properties.\n\n       \u00e2\u0080\u00a2\n--post-query=\nvalue\nthe file or string containing the statement to execute after\n           the tests have completed. this execution is not counted for\n           timing purposes.\n\n       \u00e2\u0080\u00a2\n--post-system=\nstr\nthe string to execute via system() after the tests have\n           completed. this execution is not counted for timing purposes.\n\n       \u00e2\u0080\u00a2\n--pre-query=\nvalue\nthe file or string containing the statement to execute before\n           running the tests. this execution is not counted for timing\n           purposes.\n\n       \u00e2\u0080\u00a2\n--pre-system=\nstr\nthe string to execute via system() before running the tests.\n           this execution is not counted for timing purposes.\n\n       \u00e2\u0080\u00a2\n--print-defaults\nprint the program argument list and exit.  this must be given\n           as the first argument.\n\n       \u00e2\u0080\u00a2\n--protocol={tcp|socket|pipe|memory}\nthe connection protocol to use for connecting to the server.\n           it is useful when the other connection parameters normally\n           would cause a protocol to be used other than the one you want.\n\n       \u00e2\u0080\u00a2\n--query=\nvalue\n,\n-q\nvalue\nthe file or string containing the select statement to use for\n           retrieving data.\n\n       \u00e2\u0080\u00a2\n--shared-memory-base-name=\nname\non windows, the shared-memory name to use, for connections\n           made via shared memory to a local server. this option applies\n           only if the server supports shared-memory connections.\n\n       \u00e2\u0080\u00a2\n--silent\n,\n-s\nsilent mode. no output.\n\n       \u00e2\u0080\u00a2\n--socket=\npath\n,\n-s\npath\nfor connections to localhost, the unix socket file to use, or,\n           on windows, the name of the named pipe to use.  forces\n           --protocol=socket when specified on the command line without\n           other connection properties; on windows, forces\n           --protocol=pipe.\n\n       \u00e2\u0080\u00a2\n--ssl\nenable ssl for connection (automatically enabled with other\n           flags). disable with\n--skip-ssl\n.\n\n       \u00e2\u0080\u00a2\n--ssl-ca=\nname\nca file in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-capath=\nname\nca directory (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-cert=\nname\nx509 cert in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-cipher=\nname\nssl cipher to use (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-key=\nname\nx509 key in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-crl=\nname\ncertificate revocation list (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-crlpath=\nname\ncertificate revocation list path (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-verify-server-cert\nverify server's \"common name\" in its cert against hostname\n           used when connecting. this option is disabled by default.\n\n       \u00e2\u0080\u00a2\n--user=\nuser_name\n,\n-u\nuser_name\nthe mariadb user name to use when connecting to the server.\n\n       \u00e2\u0080\u00a2\n--verbose\n,\n-v\nverbose mode. print more information about what the program\n           does. this option can be used multiple times to increase the\n           amount of information.\n\n       \u00e2\u0080\u00a2\n--version\n,\n-v\ndisplay version information and exit.",
      "examples": "",
      "options": ""
    },
    {
      "command": "mariadb-upgrade",
      "description": "mariadb-upgrade\nexamines all tables in all databases for\n       incompatibilities with the current version of the mariadb server.\nmariadb-upgrade\nalso upgrades the system tables so that you can\n       take advantage of new privileges or capabilities that might have\n       been added.\nmariadb-upgrade\nshould be executed each time you upgrade mariadb.\n\n       if a table is found to have a possible incompatibility,\nmariadb-\nupgrade\nperforms a table check. if any problems are found, a table\n       repair is attempted.\nnote\non windows server 2008 and windows vista, you must run\nmariadb-upgrade\nwith administrator privileges. you can do this\n           by running a command prompt as administrator and running the\n           command. failure to do so may result in the upgrade failing to\n           execute correctly.\ncaution\nyou should always back up your current mariadb installation\nbefore\nperforming an upgrade.\n\n       to use\nmariadb-upgrade\n, make sure that the server is running, and\n       then invoke it like this:\n\n           shell>\nmariadb-upgrade [\noptions\n]\nafter running\nmariadb-upgrade\n, stop the server and restart it so\n       that any changes made to the system tables take effect.\nmariadb-upgrade\nexecutes the following commands to check and\n       repair tables and to upgrade the system tables:\n\n           mariadb-check --all-databases --check-upgrade --auto-repair\n           mariadb <\nfix_priv_tables\nmariadb-check --all-databases --check-upgrade --fix-db-names --fix-table-names\n\n       notes about the preceding commands:\n\n       \u00e2\u0080\u00a2   because\nmariadb-upgrade\ninvokes\nmariadb-check\nwith the\n--all-databases\noption, it processes all tables in all\n           databases, which might take a long time to complete. each\n           table is locked and therefore unavailable to other sessions\n           while it is being processed. check and repair operations can\n           be time-consuming, particularly for large tables.\n\n       \u00e2\u0080\u00a2   for details about what checks the\n--check-upgrade\noption\n           entails, see the description of the for upgrade option of the\n           check table statement.\n\n       \u00e2\u0080\u00a2\nfix_priv_tables\nrepresents a script generated internally by\nmariadb-upgrade\nthat contains sql statements to upgrade the\n           tables in the mysql database.\n\n       all checked and repaired tables are marked with the current\n       mariadb version number. this ensures that next time you run\nmariadb-upgrade\nwith the same version of the server, it can tell\n       whether there is any need to check or repair the table again.\nmariadb-upgrade\nalso saves the mariadb version number in a file\n       named mariadb-upgrade_info in the data directory. this is used to\n       quickly check whether all tables have been checked for this\n       release so that table-checking can be skipped. to ignore this file\n       and perform the check regardless, use the\n--force\noption.\n\n       for this reason,\nmariadb-upgrade\nneeds to be run as a user with\n       write access to the data directory.\n\n       if you install mariadb from rpm packages on linux, you must\n       install the server and client rpms.\nmariadb-upgrade\nis included\n       in the server rpm but requires the client rpm because the latter\n       includes\nmariadb-check\n.\nmariadb-upgrade\nsupports the following options, which can be\n       specified on the command line or in the [mariadb-upgrade] and\n       [client] option file groups. other options are passed to\nmariadb-\ncheck\n. for example, it might be necessary to specify the\n--password[=\npassword\n]\noption.\nmariadb-upgrade\nalso supports the\n       options for processing option files.\n\n       \u00e2\u0080\u00a2\n--help\n,\n-?\ndisplay a short help message and exit.\n\n       \u00e2\u0080\u00a2\n--basedir=\npath\nold option accepted for backward compatibility but ignored.\n\n       \u00e2\u0080\u00a2\n--character-sets-dir=\npath\nold option accepted for backward compatibility but ignored.\n\n       \u00e2\u0080\u00a2\n--check-if-upgrade-is-needed\nexit with a status code indicating if an upgrade is needed.\n           returns 0 if upgrade needed or current version couldn't be\n           determined, 1 when no action required.\n\n       \u00e2\u0080\u00a2\n--datadir=\npath\nold option accepted for backward compatibility but ignored.\n\n       \u00e2\u0080\u00a2\n--debug=\npath\n,\n-#\npath\nfor debug builds, output debug log.\n\n       \u00e2\u0080\u00a2\n--debug-check\nprint some debugging information when the program exits.\n\n       \u00e2\u0080\u00a2\n--debug-info\n,\n-t\nprint debugging information and memory and cpu usage\n           statistics when the program exits.\n\n       \u00e2\u0080\u00a2\n--default-character-set=\nname\nold option accepted for backward compatibility but ignored.\n\n       \u00e2\u0080\u00a2\n--force\nignore the mariadb-upgrade_info file and force execution of\nmariadb-check\neven if\nmariadb-upgrade\nhas already been\n           executed for the current version of mariadb.\n\n       \u00e2\u0080\u00a2\n--host\nconnect to mariadb on the given host.\n\n       \u00e2\u0080\u00a2\n--password[=\npassword\n]\n,\n-p[\npassword\n]\nthe password to use when connecting to the server. if you use\n           the short option form (\n-p\n), you\ncannot\nhave a space between\n           the option and the password. if you omit the\npassword\nvalue\n           following the\n--password\nor\n-p\noption on the command line,\nmariadb-upgrade\nprompts for one.\n\n           specifying a password on the command line should be considered\n           insecure. you can use an option file to avoid giving the\n           password on the command line.\n\n       \u00e2\u0080\u00a2\n--port=\nport_num\n,\n-p\nport_num\nthe tcp/ip port number to use for the connection.\n\n       \u00e2\u0080\u00a2\n--protocol={tcp|socket|pipe|memory}\nthe connection protocol to use for connecting to the server.\n           it is useful when the other connection parameters normally\n           would cause a protocol to be used other than the one you want.\n\n       \u00e2\u0080\u00a2\n--silent\nprint less information.\n\n       \u00e2\u0080\u00a2\n--socket=\npath\n,\n-s\npath\nfor connections to localhost, the unix socket file to use, or,\n           on windows, the name of the named pipe to use.\n\n       \u00e2\u0080\u00a2\n--ssl\nenable ssl for connection (automatically enabled with other\n           flags). disable with\n--skip-ssl\n.\n\n       \u00e2\u0080\u00a2\n--ssl-ca=\nname\nca file in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-capath=\nname\nca directory (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-cert=\nname\nx509 cert in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-cipher=\nname\nssl cipher to use (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-key=\nname\nx509 key in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-crl=\nname\ncertificate revocation list (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-crlpath=\nname\ncertificate revocation list path (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-verify-server-cert\nverify server's \"common name\" in its cert against hostname\n           used when connecting. this option is disabled by default.\n\n       \u00e2\u0080\u00a2\n--tmpdir=\npath\n,\n-t\npath\nthe path name of the directory to use for creating temporary\n           files.\n\n       \u00e2\u0080\u00a2\n--upgrade-system-tables\n,\n-s\nonly upgrade the system tables in the mysql database. tables\n           in other databases are not checked or touched.\n\n       \u00e2\u0080\u00a2\n--user=\nuser_name\n,\n-u\nuser_name\nthe mariadb user name to use when connecting to the server and\n           not using the current login.\n\n       \u00e2\u0080\u00a2\n--verbose\ndisplay more output about the process. using it twice will\n           print connection arguments; using it 3 times will print out\n           all check, rename and alter table commands used during the\n           check phase; using it 4 times (added in mariadb 10.0.14) will\n           also write out all mariadb-check commands used; using it 5\n           times will print all the mariadb commands used and their\n           results while running mariadb-fix-privilege-tables script.\n\n       \u00e2\u0080\u00a2\n--version\n,\n-v\noutput version information and exit.\n\n       \u00e2\u0080\u00a2\n--version-check\n,\n-k\nrun this program only if its 'server version' matches the\n           version of the server to which it's connecting. note: the\n           'server version' of the program is the version of the mariadb\n           server with which it was built/distributed. defaults to on;\n           use\n--skip-version-check\nto disable.\n\n       \u00e2\u0080\u00a2\n--write-binlog\ncause binary logging to be enabled while\nmariadb-upgrade\nruns.",
      "examples": "",
      "options": ""
    }
  ],
  "context": "Retrieved commands:\n\nCommand: pcp-netstat\nDescription: the\npcp-netstat\ncommand is used for viewing the different kinds of\n       statistics related to the network protocols and the network\n       interfaces. this tool is useful for checking the status of your\n       network interfaces, network connections and for troubleshooting\n       network issues.  this tool can also be used to analyze network\n       statistics for all available protocols, including tcp, udp, icmp,\n       and ip protocols.\n\n       by default\npcp-netstat\nreports live data for the local host. it\n       has the capabilities to analyze the data on the archives as well.\nRelevant sections:\n- \n- \n\n---\n\nCommand: nping\nDescription: nping is an open-source tool for network packet generation,\n       response analysis and response time measurement. nping allows\n       users to generate network packets of a wide range of protocols,\n       letting them tune virtually any field of the protocol headers.\n       while nping can be used as a simple ping utility to detect active\n       hosts, it can also be used as a raw packet generator for network\n       stack stress tests, arp poisoning, denial of service attacks,\n       route tracing, and other purposes.\n\n       additionally, nping offers a special mode of operation called the\n       \"echo mode\", that lets users see how the generated probes change\n       in transit, revealing the differences between the transmitted\n       packets and the packets received at the other end. see section\n       \"echo mode\" for details.\n\n       the output from nping is a list of the packets that are being sent\n       and received. the level of detail depends on the options used.\n\n       a typical nping execution is shown in example 1. the only nping\n       arguments used in this example are\n-c\n, to specify the number of\n       times to target each host,\n--tcp\nto specify tcp probe mode,\n-p\n80,433\nto specify the target ports; and then the two target\n       hostnames.\nexample 1. a representative nping execution\n#\nnping -c 1 --tcp -p 80,433 scanme.nmap.org google.com\nstarting nping (\nhttps://nmap.org/nping\n)\n           sent (0.0120s) tcp 96.16.226.135:50091 > 64.13.134.52:80 s ttl=64 id=52072 iplen=40  seq=1077657388 win=1480\n           rcvd (0.1810s) tcp 64.13.134.52:80 > 96.16.226.135:50091 sa ttl=53 id=0 iplen=44  seq=4158134847 win=5840 <mss 1460>\n           sent (1.0140s) tcp 96.16.226.135:50091 > 74.125.45.100:80 s ttl=64 id=13932 iplen=40  seq=1077657388 win=1480\n           rcvd (1.1370s) tcp 74.125.45.100:80 > 96.16.226.135:50091 sa ttl=52 id=52913 iplen=44  seq=2650443864 win=5720 <mss 1430>\n           sent (2.0140s) tcp 96.16.226.135:50091 > 64.13.134.52:433 s ttl=64 id=8373 iplen=40  seq=1077657388 win=1480\n           sent (3.0140s) tcp 96.16.226.135:50091 > 74.125.45.100:433 s ttl=64 id=23624 iplen=40  seq=1077657388 win=1480\n\n           statistics for host scanme.nmap.org (64.13.134.52):\n            |  probes sent: 2 | rcvd: 1 | lost: 1  (50.00%)\n            |_ max rtt: 169.720ms | min rtt: 169.720ms | avg rtt: 169.720ms\n           statistics for host google.com (74.125.45.100):\n            |  probes sent: 2 | rcvd: 1 | lost: 1  (50.00%)\n            |_ max rtt: 122.686ms | min rtt: 122.686ms | avg rtt: 122.686ms\n           raw packets sent: 4 (160b) | rcvd: 2 (92b) | lost: 2 (50.00%)\n           tx time: 3.00296s | tx bytes/s: 53.28 | tx pkts/s: 1.33\n           rx time: 3.00296s | rx bytes/s: 30.64 | rx pkts/s: 0.67\n           nping done: 2 ip addresses pinged in 4.01 seconds\n\n       the newest version of nping can be obtained with nmap at\nhttps://nmap.org\n. the newest version of this man page is available\n       at\nhttps://nmap.org/book/nping-man.html\n.\n\n       -->\n         .sh \"options summary\"\n\n       this options summary is printed when nping is run with no\n       arguments. it helps people remember the most common options, but\n       is no substitute for the in-depth documentation in the rest of\n       this manual. some obscure options aren't even included here.\n\n           nping 0.7.92svn (\nhttps://nmap.org/nping\n)\n           usage: nping [probe mode] [options] {target specification}\n\n           target specification:\n             targets may be specified as hostnames, ip addresses, networks, etc.\n             ex: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.*.1-24\n           probe modes:\n             --tcp-connect                    : unprivileged tcp connect probe mode.\n             --tcp                            : tcp probe mode.\n             --udp                            : udp probe mode.\n             --icmp                           : icmp probe mode.\n             --arp                            : arp/rarp probe mode.\n             --tr, --traceroute               : traceroute mode (can only be used with\n                                                tcp/udp/icmp modes).\n           tcp connect mode:\n              -p, --dest-port <port spec>     : set destination port(s).\n              -g, --source-port <portnumber>  : try to use a custom source port.\n           tcp probe mode:\n              -g, --source-port <portnumber>  : set source port.\n              -p, --dest-port <port spec>     : set destination port(s).\n              --seq <seqnumber>               : set sequence number.\n              --flags <flag list>             : set tcp flags (ack,psh,rst,syn,fin...)\n              --ack <acknumber>               : set ack number.\n              --win <size>                    : set window size.\n              --badsum                        : use a random invalid checksum.\n           udp probe mode:\n              -g, --source-port <portnumber>  : set source port.\n              -p, --dest-port <port spec>     : set destination port(s).\n              --badsum                        : use a random invalid checksum.\n           icmp probe mode:\n             --icmp-type <type>               : icmp type.\n             --icmp-code <code>               : icmp code.\n             --icmp-id <id>                   : set identifier.\n             --icmp-seq <n>                   : set sequence number.\n             --icmp-redirect-addr <addr>      : set redirect address.\n             --icmp-param-pointer <pnt>       : set parameter problem pointer.\n             --icmp-advert-lifetime <time>    : set router advertisement lifetime.\n             --icmp-advert-entry <ip,pref>    : add router advertisement entry.\n             --icmp-orig-time  <timestamp>    : set originate timestamp.\n             --icmp-recv-time  <timestamp>    : set receive timestamp.\n             --icmp-trans-time <timestamp>    : set transmit timestamp.\n           arp/rarp probe mode:\n             --arp-type <type>                : type: arp, arp-reply, rarp, rarp-reply.\n             --arp-sender-mac <mac>           : set sender mac address.\n             --arp-sender-ip  <addr>          : set sender ip address.\n             --arp-target-mac <mac>           : set target mac address.\n             --arp-target-ip  <addr>          : set target ip address.\n           ipv4 options:\n             -s, --source-ip                  : set source ip address.\n             --dest-ip <addr>                 : set destination ip address (used as an\n                                                alternative to {target specification} ).\n             --tos <tos>                      : set type of service field (8bits).\n             --id  <id>                       : set identification field (16 bits).\n             --df                             : set don't fragment flag.\n             --mf                             : set more fragments flag.\n             --evil                           : set reserved / evil flag.\n             --ttl <hops>                     : set time to live [0-255].\n             --badsum-ip                      : use a random invalid checksum.\n             --ip-options <s|r [route]|l [route]|t|u ...> : set ip options\n             --ip-options <hex string>                    : set ip options\n             --mtu <size>                     : set mtu. packets get fragmented if mtu is\n                                                small enough.\n           ipv6 options:\n             -6, --ipv6                       : use ip version 6.\n             --dest-ip                        : set destination ip address (used as an\n                                                alternative to {target specification}).\n             --hop-limit                      : set hop limit (same as ipv4 ttl).\n             --traffic-class <class> :        : set traffic class.\n             --flow <label>                   : set flow label.\n           ethernet options:\n             --dest-mac <mac>                 : set destination mac address. (disables\n                                                arp resolution)\n             --source-mac <mac>               : set source mac address.\n             --ether-type <type>              : set ethertype value.\n           payload options:\n             --data <hex string>              : include a custom payload.\n             --data-string <text>             : include a custom ascii text.\n             --data-length <len>              : include len random bytes as payload.\n           echo client/server:\n             --echo-client <passphrase>       : run nping in client mode.\n             --echo-server <passphrase>       : run nping in server mode.\n             --echo-port <port>               : use custom <port> to listen or connect.\n             --no-crypto                      : disable encryption and authentication.\n             --once                           : stop the server after one connection.\n             --safe-payloads                  : erase application data in echoed packets.\n           timing and performance:\n             options which take <time> are in seconds, or append 'ms' (milliseconds),\n             's' (seconds), 'm' (minutes), or 'h' (hours) to the value (e.g. 30m, 0.25h).\n             --delay <time>                   : adjust delay between probes.\n             --rate  <rate>                   : send num packets per second.\n           misc:\n             -h, --help                       : display help information.\n             -v, --version                    : display current version number.\n             -c, --count <n>                  : stop after <n> rounds.\n             -e, --interface <name>           : use supplied network interface.\n             -h, --hide-sent                  : do not display sent packets.\n             -n, --no-capture                 : do not try to capture replies.\n             --privileged                     : assume user is fully privileged.\n             --unprivileged                   : assume user lacks raw socket privileges.\n             --send-eth                       : send packets at the raw ethernet layer.\n             --send-ip                        : send packets using raw ip sockets.\n             --bpf-filter <filter spec>       : specify custom bpf filter.\n           output:\n             -v                               : increment verbosity level by one.\n             -v[level]                        : set verbosity level. e.g: -v4\n             -d                               : increment debugging level by one.\n             -d[level]                        : set debugging level. e.g: -d3\n             -q                               : decrease verbosity level by one.\n             -q[n]                            : decrease verbosity level n times\n             --quiet                          : set verbosity and debug level to minimum.\n             --debug                          : set verbosity and debug to the max level.\n           examples:\n             nping scanme.nmap.org\n             nping --tcp -p 80 --flags rst --ttl 2 192.168.1.1\n             nping --icmp --icmp-type time --delay 500ms 192.168.254.254\n             nping --echo-server \"public\" -e wlan0 -vvv\n             nping --echo-client \"public\" echo.nmap.org --tcp -p1-1024 --flags ack\n\n           see the man page for many more options, descriptions, and examples\nRelevant sections:\n- \n- \n- \n- \n\n---\n\nCommand: pcp-atopsar\nDescription: the\npcp-atopsar\nprogram can be used to report statistics at the\n       system level.\n\n       in the first synopsis line (no sampling interval specified),\npcp-\natopsar\nextracts data from a raw logfile that has been recorded\n       previously by\npmlogger(1)\n(or via the\n-w\noption of the\npcp-atop\nprogram).\n       you can specify the name of the logfile with the\n-r\noption of the\npcp-atopsar\nprogram.  when a\npmlogger\ndaily logfile is used, named\n$pcp_log_dir/pmlogger/[host]/yyyymmdd\n(where yyyymmdd reflects the\n       date), the required date of the form yyyymmdd can be specified\n       with the\n-r\noption instead of the filename, or the symbolic name\n       'y' can be used for yesterday's daily logfile (this can be\n       repeated so 'yyyy' indicates the logfile of four days ago).  if\n       the\n-r\noption is not specified at all, today's daily logfile is\n       used by default.\n       by default, the hostname of the localhost will be used when\n       resolving\npmlogger\narchives, however an alternative\nhost\ncan be\n       specified using the\n-h\noption.\n       the starting and ending times of the report can be defined using\n       the options\n-b\nand\n-e\nfollowed by a time argument of the form\n       [yyyymmdd]hh:mm[ss].\n\n       in the second synopsis line,\npcp-atopsar\nreads actual activity\n       counters from the kernel with the specified\ninterval\n(in seconds)\n       and the specified number of\nsamples\n(optionally).  when\npcp-\natopsar\nis activated in this way it immediately sends the output\n       for every requested report to standard output.  if only one type\n       of report is requested, the header is printed once and after every\ninterval\nseconds the statistical counters are shown for that\n       period.  if several reports are requested, a header is printed per\n       sample followed by the statistical counters for that period.\n\n       when invoked via the\npcp(1)\ncommand, the\npcpintro(1)\noptions\n-h\n/\n--host\n,\n-a\n/\n--archive\n,\n-o\n/\n--origin\n,\n-s\n/\n--samples\n,\n-t\n/\n--interval\n,\n-z\n/\n--timezone\nand several other\npcp options\nbecome indirectly\n       available, see\npcpintro(1)\nfor their descriptions.\n\n       some generic flags can be specified to influence the behaviour of\n       the\npcp-atopsar\nprogram:\n-s\nby default the timestamp at the beginning of a line is\n            suppressed if more lines are shown for one interval. with\n            this flag a timestamp is given for every output-line (easier\n            for post-processing).\n-a\nby default certain resources as disks and network interfaces\n            are only shown when they were active during the interval.\n            with this flag all resources of a given type are shown, even\n            if they were inactive during the interval.\n-x\nby default\npcp-atopsar\nonly uses colors if output is directed\n            to a terminal (window).  these colors might indicate that a\n            critical occupation percentage has been reached (red) or has\n            been almost reached (cyan) for a particular resource.  see\n            the man-page of\natop\nfor a detailed description of this\n            feature (section colors).\n            with the flag\n-x\nthe use of colors is suppressed\n            unconditionally.\n-c\nby default\npcp-atopsar\nonly uses colors if output is directed\n            to a terminal (window).  these colors might indicate that a\n            critical occupation percentage has been reached (red) or has\n            been almost reached (cyan) for a particular resource.  see\n            the man-page of\natop\nfor a detailed description of this\n            feature (section colors).\n            with the flag\n-c\ncolors will always be used, even if output\n            is not directed to a terminal.\n-m\nuse markers at the end of a line to indicate that a critical\n            occupation percentage has been reached ('*') or has been\n            almost reached ('+') for particular resources. the marker '*'\n            is similar to the color red and the marker '+' to the color\n            cyan. see the man-page of\natop\nfor a detailed description of\n            these colors (section colors).\n-h\nrepeat the header line within a report for every\nn\ndetail\n            lines. the value of\nn\nis determined dynamically in case of\n            output to a tty/window (depending on the number of lines);\n            for output to a file or pipe this value is 23.\n-r\nsummarize\ncnt\nsamples into one sample. when the logfile\n            contains e.g. samples of 10 minutes, the use of the flag '-r\n            6' shows a report with one sample for every hour.\n\n       other flags are used to define which reports are required:\n-a\nshow all possible reports.\n-c\nreport about cpu utilization (in total and per cpu).\n-g\nreport about gpu utilization (per gpu).\n-p\nreport about processor-related matters, like load-averages\n            and hardware interrupts.\n-p\nreport about processes.\n-m\ncurrent memory- and swap-occupation.\n-s\nreport about paging- and swapping-activity, and\n            overcommitment.\n-b\nreport about pressure stall information (psi).\n-l\nreport about utilization of logical volumes.\n-f\nreport about utilization of multiple devices.\n-d\nreport about utilization of disks.\n-n\nreport about nfs mounted filesystems on nfs client.\n-j\nreport about nfs client activity.\n-j\nreport about nfs server activity.\n-i\nreport about the network interfaces.\n-i\nreport about errors for network-interfaces.\n-w\nreport about ip version 4 network traffic.\n-w\nreport about errors for ip version 4 traffic.\n-y\ngeneral report about icmp version 4 layer activity.\n-y\nper-type report about icmp version 4 layer activity.\n-u\nreport about udp version 4 network traffic.\n-z\nreport about ip version 6 network traffic.\n-z\nreport about errors for ip version 6 traffic.\n-k\ngeneral report about icmp version 6 layer activity.\n-k\nper-type report about icmp version 6 layer activity.\n-u\nreport about udp version 6 network traffic.\n-t\nreport about tcp network traffic.\n-t\nreport about errors for tcp-traffic.\n-h\nreport about infiniband utilization.\n-o\nreport about top-3 processes consuming most processor\n            capacity.  this report is only available when using a log\n            file (not when specifying an interval).\n-g\nreport about top-3 processes consuming most resident memory.\n            this report is only available when using a log file (not when\n            specifying an interval).\n-d\nreport about top-3 processes issuing most disk transfers.\n            this report is only available when using a log file (not when\n            specifying an interval).\n-n\nreport about top-3 processes issuing most ipv4/ipv6 socket\n            transfers.  this report is only available when using a log\n            file (not when specifying an interval).\nRelevant sections:\n- \n- \n- \n\n---\n\nCommand: mariadb-slap\nDescription: mariadb-slap\nis a diagnostic program designed to emulate client\n       load for a mariadb server and to report the timing of each stage.\n       it works as if multiple clients are accessing the server.\n\n       invoke\nmariadb-slap\nlike this:\n\n           shell>\nmariadb-slap [\noptions\n]\nsome options such as\n--create\nor\n--query\nenable you to specify a\n       string containing an sql statement or a file containing\n       statements. if you specify a file, by default it must contain one\n       statement per line. (that is, the implicit statement delimiter is\n       the newline character.) use the\n--delimiter\noption to specify a\n       different delimiter, which enables you to specify statements that\n       span multiple lines or place multiple statements on a single line.\n       you cannot include comments in a file;\nmariadb-slap\ndoes not\n       understand them.\nmariadb-slap\nruns in three stages:\n\n        1. create schema, table, and optionally any stored programs or\n           data you want to using for the test. this stage uses a single\n           client connection.\n\n        2. run the load test. this stage can use many client connections.\n\n        3. clean up (disconnect, drop table if specified). this stage\n           uses a single client connection.\n\n       examples:\n\n       supply your own create and query sql statements, with 50 clients\n       querying and 200 selects for each:\n\n           mariadb-slap --delimiter=\";\" \\\n             --create=\"create table a (b int);insert into a values (23)\" \\\n             --query=\"select * from a\" --concurrency=50 --iterations=200\n\n       let\nmariadb-slap\nbuild the query sql statement with a table of two\n       int columns and three varchar columns. use five clients querying\n       20 times each. do not create the table or insert the data (that\n       is, use the previous test's schema and data):\n\n           mariadb-slap --concurrency=5 --iterations=20 \\\n             --number-int-cols=2 --number-char-cols=3 \\\n             --auto-generate-sql\n\n       tell the program to load the create, insert, and query sql\n       statements from the specified files, where the create.sql file has\n       multiple table creation statements delimited by ';' and multiple\n       insert statements delimited by ';'. the\n--query\nfile will have\n       multiple queries delimited by ';'. run all the load statements,\n       then run all the queries in the query file with five clients (five\n       times each):\n\n           mariadb-slap --concurrency=5 \\\n             --iterations=5 --query=query.sql --create=create.sql \\\n             --delimiter=\";\"\nmariadb-slap\nsupports the following options, which can be\n       specified on the command line or in the [mariadb-slap] and\n       [client] option file groups.\nmariadb-slap\nalso supports the\n       options for processing option files.\n\n       \u00e2\u0080\u00a2\n--help\n,\n-?\ndisplay a help message and exit.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql\n,\n-a\ngenerate sql statements automatically when they are not\n           supplied in files or via command options.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-add-autoincrement\nadd an auto_increment column to automatically generated\n           tables.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-execute-number=\nn\nspecify how many queries to generate automatically.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-guid-primary\nadd a guid-based primary key to automatically generated\n           tables.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-load-type=\ntype\nspecify the test load type. the allowable values are read\n           (scan tables), write (insert into tables), key (read primary\n           keys), update (update primary keys), or mixed (half inserts,\n           half scanning selects). the default is mixed.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-secondary-indexes=\nn\nspecify how many secondary indexes to add to automatically\n           generated tables. by default, none are added.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-unique-query-number=\nn\nhow many different queries to generate for automatic tests.\n           for example, if you run a key test that performs 1000 selects,\n           you can use this option with a value of 1000 to run 1000\n           unique queries, or with a value of 50 to perform 50 different\n           selects. the default is 10.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-unique-write-number=\nn\nhow many different queries to generate for\n--auto-generate-sql-write-number\n. the default is 10.\n\n       \u00e2\u0080\u00a2\n--auto-generate-sql-write-number=\nn\nhow many row inserts to perform on each thread. the default is\n           100.\n\n       \u00e2\u0080\u00a2\n--commit=\nn\nhow many statements to execute before committing. the default\n           is 0 (no commits are done).\n\n       \u00e2\u0080\u00a2\n--compress\n,\n-c\ncompress all information sent between the client and the\n           server if both support compression.\n\n       \u00e2\u0080\u00a2\n--concurrency=\nn\n,\n-c\nn\nthe number of clients to simulate when issuing the select\n           statement.\n\n       \u00e2\u0080\u00a2\n--create=\nvalue\nthe file or string containing the statement to use for\n           creating the table.\n\n       \u00e2\u0080\u00a2\n--create-schema=\nvalue\nthe schema in which to run the tests.\n\n       \u00e2\u0080\u00a2\n--csv[=\nfile_name\n]\ngenerate output in comma-separated values format. the output\n           goes to the named file, or to the standard output if no file\n           is given.\n\n       \u00e2\u0080\u00a2\n--debug[=\ndebug_options\n]\n,\n-# [\ndebug_options\n]\nwrite a debugging log. a typical\ndebug_options\nstring is\n           'd:t:o,\nfile_name\n'. the default is 'd:t:o,/tmp/mariadb-\n           slap.trace'.\n\n       \u00e2\u0080\u00a2\n--debug-check\nprint some debugging information when the program exits.\n\n       \u00e2\u0080\u00a2\n--debug-info\n,\n-t\nprint debugging information and memory and cpu usage\n           statistics when the program exits.\n\n       \u00e2\u0080\u00a2\n--default-auth=\nname\ndefault authentication client-side plugin to use.\n\n       \u00e2\u0080\u00a2\n--defaults-extra-file=\nfilename\nset\nfilename\nas the file to read default options from after\n           the global defaults files has been read.  must be given as\n           first option.\n\n       \u00e2\u0080\u00a2\n--defaults-file=\nfilename\nset\nfilename\nas the file to read default options from,\n           override global defaults files.  must be given as first\n           option.\n\n       \u00e2\u0080\u00a2\n--delimiter=\nstr\n,\n-f\nstr\nthe delimiter to use in sql statements supplied in files or\n           via command options.\n\n       \u00e2\u0080\u00a2\n--detach=\nn\ndetach (close and reopen) each connection after each\nn\nstatements. the default is 0 (connections are not detached).\n\n       \u00e2\u0080\u00a2\n--engine=\nengine_name\n,\n-e\nengine_name\ncomma separated list of storage engines to use for creating\n           the table. the test is run for each engine. you can also\n           specify an option for an engine after a colon, for example\nmemory:max_row=2300\n.\n\n       \u00e2\u0080\u00a2\n--host=\nhost_name\n,\n-h\nhost_name\nconnect to the mariadb server on the given host.\n\n       \u00e2\u0080\u00a2\n--init-command=str\nsql command to execute when connecting to mariadb server. will\n           automatically be re-executed when reconnecting.\n\n       \u00e2\u0080\u00a2\n--iterations=\nn\n,\n-i\nn\nthe number of times to run the tests.\n\n       \u00e2\u0080\u00a2\n--no-defaults\ndo not read default options from any option file. this must be\n           given as the first argument.\n\n       \u00e2\u0080\u00a2\n--no-drop\ndo not drop any schema created during the test after the test\n           is complete.\n\n       \u00e2\u0080\u00a2\n--number-char-cols=\nn\n,\n-x\nn\nthe number of varchar columns to use if\n--auto-generate-sql\nis\n           specified.\n\n       \u00e2\u0080\u00a2\n--number-int-cols=\nn\n,\n-y\nn\nthe number of int columns to use if\n--auto-generate-sql\nis\n           specified.\n\n       \u00e2\u0080\u00a2\n--number-of-queries=\nn\nlimit each client to approximately this many queries. query\n           counting takes into account the statement delimiter. for\n           example, if you invoke\nmariadb-slap\nas follows, the ;\n           delimiter is recognized so that each instance of the query\n           string counts as two queries. as a result, 5 rows (not 10) are\n           inserted.\n\n               shell>\nmariadb-slap --delimiter=\";\" --number-of-queries=10\n--query=\"use test;insert into t values(null)\"\n\u00e2\u0080\u00a2\n--only-print\ndo not connect to databases.\nmariadb-slap\nonly prints what it\n           would have done.\n\n       \u00e2\u0080\u00a2\n--password[=\npassword\n]\n,\n-p[\npassword\n]\nthe password to use when connecting to the server. if you use\n           the short option form (\n-p\n), you\ncannot\nhave a space between\n           the option and the password. if you omit the\npassword\nvalue\n           following the\n--password\nor\n-p\noption on the command line,\nmariadb-slap\nprompts for one.\n\n           specifying a password on the command line should be considered\n           insecure. you can use an option file to avoid giving the\n           password on the command line.\n\n       \u00e2\u0080\u00a2\n--pipe\n,\n-w\non windows, connect to the server via a named pipe. this\n           option applies only if the server supports named-pipe\n           connections.\n\n       \u00e2\u0080\u00a2\n--plugin-dir=\ndir_name\ndirectory for client-side plugins.\n\n       \u00e2\u0080\u00a2\n--port=\nport_num\n,\n-p\nport_num\nthe tcp/ip port number to use for the connection.  forces\n           --protocol=tcp when specified on the command line without\n           other connection properties.\n\n       \u00e2\u0080\u00a2\n--post-query=\nvalue\nthe file or string containing the statement to execute after\n           the tests have completed. this execution is not counted for\n           timing purposes.\n\n       \u00e2\u0080\u00a2\n--post-system=\nstr\nthe string to execute via system() after the tests have\n           completed. this execution is not counted for timing purposes.\n\n       \u00e2\u0080\u00a2\n--pre-query=\nvalue\nthe file or string containing the statement to execute before\n           running the tests. this execution is not counted for timing\n           purposes.\n\n       \u00e2\u0080\u00a2\n--pre-system=\nstr\nthe string to execute via system() before running the tests.\n           this execution is not counted for timing purposes.\n\n       \u00e2\u0080\u00a2\n--print-defaults\nprint the program argument list and exit.  this must be given\n           as the first argument.\n\n       \u00e2\u0080\u00a2\n--protocol={tcp|socket|pipe|memory}\nthe connection protocol to use for connecting to the server.\n           it is useful when the other connection parameters normally\n           would cause a protocol to be used other than the one you want.\n\n       \u00e2\u0080\u00a2\n--query=\nvalue\n,\n-q\nvalue\nthe file or string containing the select statement to use for\n           retrieving data.\n\n       \u00e2\u0080\u00a2\n--shared-memory-base-name=\nname\non windows, the shared-memory name to use, for connections\n           made via shared memory to a local server. this option applies\n           only if the server supports shared-memory connections.\n\n       \u00e2\u0080\u00a2\n--silent\n,\n-s\nsilent mode. no output.\n\n       \u00e2\u0080\u00a2\n--socket=\npath\n,\n-s\npath\nfor connections to localhost, the unix socket file to use, or,\n           on windows, the name of the named pipe to use.  forces\n           --protocol=socket when specified on the command line without\n           other connection properties; on windows, forces\n           --protocol=pipe.\n\n       \u00e2\u0080\u00a2\n--ssl\nenable ssl for connection (automatically enabled with other\n           flags). disable with\n--skip-ssl\n.\n\n       \u00e2\u0080\u00a2\n--ssl-ca=\nname\nca file in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-capath=\nname\nca directory (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-cert=\nname\nx509 cert in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-cipher=\nname\nssl cipher to use (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-key=\nname\nx509 key in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-crl=\nname\ncertificate revocation list (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-crlpath=\nname\ncertificate revocation list path (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-verify-server-cert\nverify server's \"common name\" in its cert against hostname\n           used when connecting. this option is disabled by default.\n\n       \u00e2\u0080\u00a2\n--user=\nuser_name\n,\n-u\nuser_name\nthe mariadb user name to use when connecting to the server.\n\n       \u00e2\u0080\u00a2\n--verbose\n,\n-v\nverbose mode. print more information about what the program\n           does. this option can be used multiple times to increase the\n           amount of information.\n\n       \u00e2\u0080\u00a2\n--version\n,\n-v\ndisplay version information and exit.\nRelevant sections:\n- \n\n---\n\nCommand: mariadb-upgrade\nDescription: mariadb-upgrade\nexamines all tables in all databases for\n       incompatibilities with the current version of the mariadb server.\nmariadb-upgrade\nalso upgrades the system tables so that you can\n       take advantage of new privileges or capabilities that might have\n       been added.\nmariadb-upgrade\nshould be executed each time you upgrade mariadb.\n\n       if a table is found to have a possible incompatibility,\nmariadb-\nupgrade\nperforms a table check. if any problems are found, a table\n       repair is attempted.\nnote\non windows server 2008 and windows vista, you must run\nmariadb-upgrade\nwith administrator privileges. you can do this\n           by running a command prompt as administrator and running the\n           command. failure to do so may result in the upgrade failing to\n           execute correctly.\ncaution\nyou should always back up your current mariadb installation\nbefore\nperforming an upgrade.\n\n       to use\nmariadb-upgrade\n, make sure that the server is running, and\n       then invoke it like this:\n\n           shell>\nmariadb-upgrade [\noptions\n]\nafter running\nmariadb-upgrade\n, stop the server and restart it so\n       that any changes made to the system tables take effect.\nmariadb-upgrade\nexecutes the following commands to check and\n       repair tables and to upgrade the system tables:\n\n           mariadb-check --all-databases --check-upgrade --auto-repair\n           mariadb <\nfix_priv_tables\nmariadb-check --all-databases --check-upgrade --fix-db-names --fix-table-names\n\n       notes about the preceding commands:\n\n       \u00e2\u0080\u00a2   because\nmariadb-upgrade\ninvokes\nmariadb-check\nwith the\n--all-databases\noption, it processes all tables in all\n           databases, which might take a long time to complete. each\n           table is locked and therefore unavailable to other sessions\n           while it is being processed. check and repair operations can\n           be time-consuming, particularly for large tables.\n\n       \u00e2\u0080\u00a2   for details about what checks the\n--check-upgrade\noption\n           entails, see the description of the for upgrade option of the\n           check table statement.\n\n       \u00e2\u0080\u00a2\nfix_priv_tables\nrepresents a script generated internally by\nmariadb-upgrade\nthat contains sql statements to upgrade the\n           tables in the mysql database.\n\n       all checked and repaired tables are marked with the current\n       mariadb version number. this ensures that next time you run\nmariadb-upgrade\nwith the same version of the server, it can tell\n       whether there is any need to check or repair the table again.\nmariadb-upgrade\nalso saves the mariadb version number in a file\n       named mariadb-upgrade_info in the data directory. this is used to\n       quickly check whether all tables have been checked for this\n       release so that table-checking can be skipped. to ignore this file\n       and perform the check regardless, use the\n--force\noption.\n\n       for this reason,\nmariadb-upgrade\nneeds to be run as a user with\n       write access to the data directory.\n\n       if you install mariadb from rpm packages on linux, you must\n       install the server and client rpms.\nmariadb-upgrade\nis included\n       in the server rpm but requires the client rpm because the latter\n       includes\nmariadb-check\n.\nmariadb-upgrade\nsupports the following options, which can be\n       specified on the command line or in the [mariadb-upgrade] and\n       [client] option file groups. other options are passed to\nmariadb-\ncheck\n. for example, it might be necessary to specify the\n--password[=\npassword\n]\noption.\nmariadb-upgrade\nalso supports the\n       options for processing option files.\n\n       \u00e2\u0080\u00a2\n--help\n,\n-?\ndisplay a short help message and exit.\n\n       \u00e2\u0080\u00a2\n--basedir=\npath\nold option accepted for backward compatibility but ignored.\n\n       \u00e2\u0080\u00a2\n--character-sets-dir=\npath\nold option accepted for backward compatibility but ignored.\n\n       \u00e2\u0080\u00a2\n--check-if-upgrade-is-needed\nexit with a status code indicating if an upgrade is needed.\n           returns 0 if upgrade needed or current version couldn't be\n           determined, 1 when no action required.\n\n       \u00e2\u0080\u00a2\n--datadir=\npath\nold option accepted for backward compatibility but ignored.\n\n       \u00e2\u0080\u00a2\n--debug=\npath\n,\n-#\npath\nfor debug builds, output debug log.\n\n       \u00e2\u0080\u00a2\n--debug-check\nprint some debugging information when the program exits.\n\n       \u00e2\u0080\u00a2\n--debug-info\n,\n-t\nprint debugging information and memory and cpu usage\n           statistics when the program exits.\n\n       \u00e2\u0080\u00a2\n--default-character-set=\nname\nold option accepted for backward compatibility but ignored.\n\n       \u00e2\u0080\u00a2\n--force\nignore the mariadb-upgrade_info file and force execution of\nmariadb-check\neven if\nmariadb-upgrade\nhas already been\n           executed for the current version of mariadb.\n\n       \u00e2\u0080\u00a2\n--host\nconnect to mariadb on the given host.\n\n       \u00e2\u0080\u00a2\n--password[=\npassword\n]\n,\n-p[\npassword\n]\nthe password to use when connecting to the server. if you use\n           the short option form (\n-p\n), you\ncannot\nhave a space between\n           the option and the password. if you omit the\npassword\nvalue\n           following the\n--password\nor\n-p\noption on the command line,\nmariadb-upgrade\nprompts for one.\n\n           specifying a password on the command line should be considered\n           insecure. you can use an option file to avoid giving the\n           password on the command line.\n\n       \u00e2\u0080\u00a2\n--port=\nport_num\n,\n-p\nport_num\nthe tcp/ip port number to use for the connection.\n\n       \u00e2\u0080\u00a2\n--protocol={tcp|socket|pipe|memory}\nthe connection protocol to use for connecting to the server.\n           it is useful when the other connection parameters normally\n           would cause a protocol to be used other than the one you want.\n\n       \u00e2\u0080\u00a2\n--silent\nprint less information.\n\n       \u00e2\u0080\u00a2\n--socket=\npath\n,\n-s\npath\nfor connections to localhost, the unix socket file to use, or,\n           on windows, the name of the named pipe to use.\n\n       \u00e2\u0080\u00a2\n--ssl\nenable ssl for connection (automatically enabled with other\n           flags). disable with\n--skip-ssl\n.\n\n       \u00e2\u0080\u00a2\n--ssl-ca=\nname\nca file in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-capath=\nname\nca directory (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-cert=\nname\nx509 cert in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-cipher=\nname\nssl cipher to use (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-key=\nname\nx509 key in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-crl=\nname\ncertificate revocation list (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-crlpath=\nname\ncertificate revocation list path (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-verify-server-cert\nverify server's \"common name\" in its cert against hostname\n           used when connecting. this option is disabled by default.\n\n       \u00e2\u0080\u00a2\n--tmpdir=\npath\n,\n-t\npath\nthe path name of the directory to use for creating temporary\n           files.\n\n       \u00e2\u0080\u00a2\n--upgrade-system-tables\n,\n-s\nonly upgrade the system tables in the mysql database. tables\n           in other databases are not checked or touched.\n\n       \u00e2\u0080\u00a2\n--user=\nuser_name\n,\n-u\nuser_name\nthe mariadb user name to use when connecting to the server and\n           not using the current login.\n\n       \u00e2\u0080\u00a2\n--verbose\ndisplay more output about the process. using it twice will\n           print connection arguments; using it 3 times will print out\n           all check, rename and alter table commands used during the\n           check phase; using it 4 times (added in mariadb 10.0.14) will\n           also write out all mariadb-check commands used; using it 5\n           times will print all the mariadb commands used and their\n           results while running mariadb-fix-privilege-tables script.\n\n       \u00e2\u0080\u00a2\n--version\n,\n-v\noutput version information and exit.\n\n       \u00e2\u0080\u00a2\n--version-check\n,\n-k\nrun this program only if its 'server version' matches the\n           version of the server to which it's connecting. note: the\n           'server version' of the program is the version of the mariadb\n           server with which it was built/distributed. defaults to on;\n           use\n--skip-version-check\nto disable.\n\n       \u00e2\u0080\u00a2\n--write-binlog\ncause binary logging to be enabled while\nmariadb-upgrade\nruns.\nRelevant sections:\n- \n\n---\n\n",
  "response": "Here's how to show all active network connections in TCP and UDP:\n\n### Command: `ss` (socket statistics)\n\nThe `ss` command is used to display socket statistics.  It's similar to `netstat` but can show more TCP and state information and is generally faster.  It can display both TCP and UDP socket information.\n\n### Examples:\n\n1.  **Show all TCP connections:**\n\n```bash\nss -t -a\n```\n\n    *   `-t`:  Specifies TCP connections.\n    *   `-a`:  Shows both listening and non-listening sockets.\n\n2.  **Show all UDP connections:**\n\n```bash\nss -u -a\n```\n\n    *   `-u`:  Specifies UDP connections.\n    *   `-a`: Shows both listening and non-listening sockets.\n\n### Combined Example (TCP and UDP):\n\nTo show both TCP and UDP connections, you can run both commands separately or combine them.  However, `ss` doesn't have a direct option to show both in a single command. Simplest way is to run both commands in sequence:\n\n```bash\nss -t -a; ss -u -a\n```\n\nThis will first list all TCP connections and then all UDP connections.  It is the most concise method without the need for additional tools like `grep` or `awk`.\n",
  "analysis": {
    "query_analysis": {
      "intent": "Identify and display all currently established network connections used by web servers, filtered for both TCP and UDP protocols.",
      "keywords": [
        "active connections",
        "web connections",
        "TCP",
        "UDP",
        "network connections",
        "established connections"
      ],
      "reformulated_query": "List all active network connections associated with web server processes, specifying both TCP and UDP protocols. Include the process ID, protocol, local address, remote address, and connection state for each connection.",
      "original_query": "Show all active network connections in TCP and UDP",
      "optimized_query": "Show all active web connections in TCP and UDP",
      "optimization_metrics": {
        "precision": 1.0,
        "recall": 0,
        "f1_score": 0,
        "retrieval_time": 0.018789291381835938,
        "command_count": 4,
        "diverse_categories": 0,
        "query_specificity": 0.6,
        "overall_score": 0.5790605354309082
      }
    },
    "command_relevance": [
      {
        "command": "pcp-netstat",
        "relevance_score": 0.30000000000000004
      },
      {
        "command": "nping",
        "relevance_score": 0.26666666666666666
      },
      {
        "command": "pcp-atopsar",
        "relevance_score": 0.26666666666666666
      },
      {
        "command": "mariadb-slap",
        "relevance_score": 0.23333333333333334
      },
      {
        "command": "mariadb-upgrade",
        "relevance_score": 0.23333333333333334
      }
    ]
  },
  "command_chains": {
    "next_commands": [
      "pcp-atopsar",
      "mariadb-admin",
      "mariadb-dump",
      "ssh",
      "systemd-analyze"
    ],
    "command_chains": [
      ""
    ]
  }
}