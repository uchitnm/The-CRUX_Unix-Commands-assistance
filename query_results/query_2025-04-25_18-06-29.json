{
  "metadata": {
    "timestamp": "2025-04-25_18-06-29",
    "query_id": "query_2025-04-25_18-06-29",
    "original_query": "How do I list files with .txt extension in Windows command prompt?",
    "query_type": "windows_command",
    "platform": "Windows"
  },
  "response": "### Command Overview\nThe `dir` command is used to display a list of files and subdirectories in a directory.  It can be used with wildcards to filter the listing to specific file extensions like `.txt`.\n\n### Syntax\n```cmd\ndir [drive:][path] [filename] [/A[[:]attributes]] [/B] [/C] [/D] [/L] [/N]\n   [/O[[:]sortorder]] [/P] [/Q] [/R] [/S] [/T[[:]timefield]] [/W] [/X] [/4]\n```\n\n### Key Options\n- `/A[:]attributes`: Displays files with specified attributes. `A` for Archive, `D` for Directory, `H` for Hidden, `R` for Read-only, `S` for System. Adding `-` before the attribute negates it (e.g., `-H` for not Hidden).\n- `/B`: Uses bare format (no heading information or summary).\n- `/S`: Displays files in specified directory and all subdirectories.\n\n### Examples\n```cmd\n# Example 1: List all .txt files in the current directory\ndir *.txt\n\n# Example 2: List all .txt files in the current directory and all subdirectories in a bare format\ndir *.txt /B /S\n```\n\n### Notes\n*   The `dir` command is available in both CMD (Command Prompt) and PowerShell, but the syntax and output formatting are slightly different.  The examples provided are specific to CMD.\n*   Wildcards (`*` and `?`) can be used for filename matching. The `*` represents any number of characters, and the `?` represents a single character.\n*   The `/A` option can be used to filter by file attributes (e.g., hidden files).\n*   PowerShell has equivalent commands like `Get-ChildItem` that are more powerful but require different syntax (e.g., `Get-ChildItem *.txt`).",
  "source": "gemini",
  "is_windows_command": true
}