{
  "metadata": {
    "timestamp": "2025-04-18_20-18-54",
    "query_id": "query_2025-04-18_20-18-54",
    "original_query": "What's the current disk usage?",
    "optimized_query": "How do I check the current disk space usage and capacity for all mounted file systems on a Unix-like system, including used space, available space, and total capacity?",
    "query_intent": "Determine the amount of disk space currently being used on a system's file systems.",
    "keywords": [
      "disk usage",
      "current",
      "file system",
      "space",
      "used",
      "capacity"
    ],
    "optimization_metrics": {
      "precision": 1.0,
      "recall": 0,
      "f1_score": 0,
      "retrieval_time": 0.011632680892944336,
      "command_count": 5,
      "diverse_categories": 0,
      "query_specificity": 0.55,
      "overall_score": 0.6194183659553528
    }
  },
  "retrieved_commands": [
    {
      "command": "pmdumptext",
      "description": "pmdumptext\noutputs the values of performance metrics collected\n       live or from a set of performance co-pilot (pcp) archives.  by\n       default, the metric values are displayed in tab separated columns,\n       prefixed by a timestamp.\n\n       unless directed to another host by the\n-h\noption, or to one or\n       more sets of archives by the\n-a\noption, or an explict host: or\n       archive/ prefix in the\nmetric\n(see below for more information),\npmdumptext\nwill contact the performance metrics collector daemon\n       (pmcd) on the local host to obtain the required information.\npmdumptext\nmay be run in interactive mode with the\n-i\noption which\n       displays the values in equal width columns.  without this option,\n       no attempt is made to line up any values allowing the output to be\n       easily parsed by other applications.\n\n       the format of the output can be further controlled by changing the\n       precision of the values with\n-p\n, the width of the columns with\n-w\n,\n       and the format of the values with the\n-g\nand\n-f\noptions for the\n       shortest of scientific or fixed digits, and a fixed width format,\n       respectively.\n\n       by default\npmdumptext\nwill scale metric values to ``canonical''\n       units of bytes, seconds and counts.  the one exception is with the\n-r\noption where the values are not scaled.  the\n-u\noption reports\n       the units of each metric.\n\n       the\nmetrics\nto be dumped can be listed on the command line, in a\nconfig\nfile, or piped to\npmdumptext\non\nstdin\n.  a metric consists\n       of an optional source (host or archive), the metric name, and an\n       optional instance list immediately after the name.  a colon is\n       used to separate a host name from the metric, and a forward slash\n       (``/'') to separate an archive name from the metric.  instances\n       are enclosed in square brackets and a comma is used between each\n       instance if more than one is stated.  for example, some legal\n       metrics are:\n\n               kernel.all.cpu.idle\n               myhost:kernel.all.cpu.idle[cpu0,cpu3]\n               /path/to/myarchive/kernel.all.cpu.idle[cpu1]\n\n       when a\nmetric\ndoes not contain a host: or archive/ prefix, e.g.\n       kernel.all.cpu.idle above, then the source of the metric is\n       determined by the following rules:\n       (a) pmcd on\nhost\nfrom the\n-h\noption if any, else\n       (b) the\narchive\nfrom the first\n-a\noption if any, else\n       (c) the host from the first\nmetric\nprior to this one with a host:\n           prefix if any, else\n       (d) the archive from the first\nmetric\nprior to this one with an\n           archive/ prefix if any, else\n       (e) pmcd on the local host, which is equivalent to local::\nmetric\n.\n\n       the format of a\nmetric\nis further described in\npcpintro(1)\nin the\n       performance metric specifications section.  a normalization value\n       may optionally follow a metric name in a\nconfig\nfile or on\nstdin\n.\n       the metric value will be scaled by this value.  for example, if\n       the file system ``/dev/root'' has a capacity of 1965437 bytes,\n       then the percentage of the file system that is used could be\n       dumped with this\nconfig\n:\n\n               filesys.used[/dev/root] 19654.37\n\n       a normalization value may not be used with\nmetrics\nspecified as\n       command line arguments.\n\n       a metric name is not required to be a leaf node in the performance\n       metrics name space (pmns), except when one or more instances are\n       specified.  for example, to dump all file system metrics, only\nfilesys\nis required to dump\nfilesys.capacity\n,\nfilesys.used\n,\nfilesys.free\netc.",
      "examples": "",
      "options": ""
    },
    {
      "command": "webvis",
      "description": "webvis\ndisplays an overview of system level web server performance\n       statistics collected from the performance co-pilot (pcp)\n       infrastructure.  the display is modulated by the values of the\n       performance metrics retrieved from the target\nhost\n(which is\n       running\npmcd(1)\nand the\npmdaweblog(1)\nperformance metrics domain\n       agent) or from the pcp archive log identified by\narchive\n.  the\n       display is updated every\ninterval\nseconds (default 2 seconds).\n\n       as in all\npmview(1)\nscenes, when the mouse is moved over one of\n       the bars, the current value and metric information for that bar\n       will be shown in the text box near the top of the display.\n\n       the height of the web request and network activity bars is\n       proportional to the performance metric values relative to the\n       maximum expected activity, as controlled by the\n-m\nand\n-r\noptions\n       (see below).  similarly the\n-b\nand\n-i\noptions control the scaling\n       for disk activity bars.\n\n       the bars in the\nwebvis\nscene represent the following information;\nrequests by size\nat the front of the scene, the \"requests by size\" row of bars\n           shows the rate of requests for different size requests (the\n           histograms are defined by the following byte counts: 0, 3\n           kbytes, 10 kbytes, 30 kbytes, 100 kbytes, 300 kbytes, 1 mbyte,\n           3 mbytes and larger than 3 mbytes).  notice that the size\n           divisions are not evenly distributed.  the \"size\" is the data\n           portion of the response to each web server request.  these\n           rates are aggregated across all monitored web servers.\nrequests by type\nthis row of bars shows the request rate for each type of http\n           request (get, post, head and other), aggregated across all\n           monitored web servers.  for a detailed display showing the\n           break down of requests\nper web server\n, see\nweblogvis(1)\n.\nnetwork\nfor every network interface there are two stacked bars.  one\n           of the bars shows the input traffic while the other bar shows\n           the output traffic.  the stacks are composed of the number of\n           errors (red), the number of drops (orange) and the number of\n           packets (green).  in general, if there are any \"dropped input\n           packets\" then the corresponding network interface is\n           saturated, or there are insufficient network resources\n           available in the kernel to adequately service the input\n           request load.  if this is the case then the\nalarm conditions\nrows (see below) may provide more detail into the source of\n           the problem.\nalarm conditions\nthe red row of bars shows an assortment of tcp error\n           conditions (aggregated for all network interfaces), the orange\n           bars show critical kernel buffer allocation problems, and the\n           yellow bar shows severe paging conditions.  if any of these\n           bars have a non-zero height then the system being monitored\n           may require kernel parameter tuning, software reconfiguration\n           or more hardware resources.  the performance metrics behind\n           the bars are:\nnetwork.tcp.drops\n- rate of dropped connections\nnetwork.tcp.conndrops\n- rate of embryonic connections dropped\nnetwork.tcp.timeoutdrop\n- rate of connections dropped by rexmit timeout\nnetwork.tcp.rcvbadsum\n- rate of packets discarded for bad checksums\nnetwork.tcp.rexmttimeo\n- rate of retransmit timeouts\nnetwork.tcp.sndrexmitpack\n- rate of data packets retransmitted\nswap.pagesout\n- page swap out rate (indicating insufficient memory)\nnetwork.mbuf.failed\n- rate of incidents where the kernel failed to find\n                  mbuf space\nnetwork.mbuf.waited\n- rate of incidents where the kernel waited to find\n                  mbuf space\ncpu\nthis column shows cpu utilization, aggregated over all cpus.\n           (cpu idle time is not included in the column).\ndisk\nthere are two cylinders showing disk metrics.  the first\n           cylinder shows the rate of read (yellow) and write (violet)\n           operations, aggregated over all disk spindles.  the second\n           cylinder shows the average (over all disks) percentage of time\n           for which a disk is busy or active.  this metric is not\n           available in pcp1.x versions, therefore if\nwebvis\nis being\n           used to monitor a host running pcp1.x this cylinder will not\n           be displayed.\n\n           to adjust the scaling of these objects, refer to the\n-b\nand\n-i\noptions described below.\nmem\nthere are two bars showing memory metrics.  the first bar\n           shows utilized memory, with different colors representing\n           different types of utilization (kernel, user, etc), while the\n           second bar shows the amount of free memory.  if\nwebvis\nis\n           being used to monitor a host running pcp1.x then only the bar\n           showing free memory will be displayed.\n\n       if any optional\ninterface\narguments are specified in the command\n       line, then just the network interfaces matching the\ninterface\narguments will appear in the\nnetwork\nsection.  by default,\nall\ninterfaces will be used.  the\ninterface\narguments are used as\n       patterns for\negrep\n(1) matching against the interface names, so\nec\nwould select all external ethernet interfaces for a challenge s.\nwebvis\nuses\npmview(1)\n, and so the user interface follows that\n       described for\npmview(1)\n, which in turn displays the scene within\n       an inventor examiner viewer.\nwebvis\npasses most command line options to\npmview(1)\n.  therefore,\n       the command line options\n-a\n,\n-a\n,\n-c\n,\n-h\n,\n-n\n,\n-o\n,\n-p\n,\n-s\n,\n-t\n,\n-t\n,\n-x\n,\n-z\nand\n-z\n, and the user interface are described in the\npmview(1)\nman page.\n\n       options specific to\nwebvis\nare:\n-b\nmaxbusy\ncontrols the maximum (normalization) value for the average\n              percentage of the time active over all disks.  the default\n              value is 30% active.\n-i\nmaxio\ncontrols the maximum (normalization) value for the sume of\n              the aggregate disk read and disk write rates.  the default\n              value is 100 i/os per second.\n-m\nmax\ncontrols the maximum (normalization) value for the packet\n              input and packet output rates.  the default value is 750\n              packets/second.\n-r\nmaxreq\ncontrols the maximum web request rate.  the default is 5%\n              of the maximum packet rate (i.e. 38 requests/second by\n              default).  the maximum web error rate is fixed at 20% of\n              the maximum web request rate (i.e. 7 errors/second by\n              default).\n-v\nthe derived configuration file for\npmview(1)\nis written on\n              standard output.  this may be saved and used directly with\npmview\nif the user wishes to customize the display, or\n              modify some of the normalization parameters.",
      "examples": "",
      "options": ""
    },
    {
      "command": "pcp-atopsar",
      "description": "the\npcp-atopsar\nprogram can be used to report statistics at the\n       system level.\n\n       in the first synopsis line (no sampling interval specified),\npcp-\natopsar\nextracts data from a raw logfile that has been recorded\n       previously by\npmlogger(1)\n(or via the\n-w\noption of the\npcp-atop\nprogram).\n       you can specify the name of the logfile with the\n-r\noption of the\npcp-atopsar\nprogram.  when a\npmlogger\ndaily logfile is used, named\n$pcp_log_dir/pmlogger/[host]/yyyymmdd\n(where yyyymmdd reflects the\n       date), the required date of the form yyyymmdd can be specified\n       with the\n-r\noption instead of the filename, or the symbolic name\n       'y' can be used for yesterday's daily logfile (this can be\n       repeated so 'yyyy' indicates the logfile of four days ago).  if\n       the\n-r\noption is not specified at all, today's daily logfile is\n       used by default.\n       by default, the hostname of the localhost will be used when\n       resolving\npmlogger\narchives, however an alternative\nhost\ncan be\n       specified using the\n-h\noption.\n       the starting and ending times of the report can be defined using\n       the options\n-b\nand\n-e\nfollowed by a time argument of the form\n       [yyyymmdd]hh:mm[ss].\n\n       in the second synopsis line,\npcp-atopsar\nreads actual activity\n       counters from the kernel with the specified\ninterval\n(in seconds)\n       and the specified number of\nsamples\n(optionally).  when\npcp-\natopsar\nis activated in this way it immediately sends the output\n       for every requested report to standard output.  if only one type\n       of report is requested, the header is printed once and after every\ninterval\nseconds the statistical counters are shown for that\n       period.  if several reports are requested, a header is printed per\n       sample followed by the statistical counters for that period.\n\n       when invoked via the\npcp(1)\ncommand, the\npcpintro(1)\noptions\n-h\n/\n--host\n,\n-a\n/\n--archive\n,\n-o\n/\n--origin\n,\n-s\n/\n--samples\n,\n-t\n/\n--interval\n,\n-z\n/\n--timezone\nand several other\npcp options\nbecome indirectly\n       available, see\npcpintro(1)\nfor their descriptions.\n\n       some generic flags can be specified to influence the behaviour of\n       the\npcp-atopsar\nprogram:\n-s\nby default the timestamp at the beginning of a line is\n            suppressed if more lines are shown for one interval. with\n            this flag a timestamp is given for every output-line (easier\n            for post-processing).\n-a\nby default certain resources as disks and network interfaces\n            are only shown when they were active during the interval.\n            with this flag all resources of a given type are shown, even\n            if they were inactive during the interval.\n-x\nby default\npcp-atopsar\nonly uses colors if output is directed\n            to a terminal (window).  these colors might indicate that a\n            critical occupation percentage has been reached (red) or has\n            been almost reached (cyan) for a particular resource.  see\n            the man-page of\natop\nfor a detailed description of this\n            feature (section colors).\n            with the flag\n-x\nthe use of colors is suppressed\n            unconditionally.\n-c\nby default\npcp-atopsar\nonly uses colors if output is directed\n            to a terminal (window).  these colors might indicate that a\n            critical occupation percentage has been reached (red) or has\n            been almost reached (cyan) for a particular resource.  see\n            the man-page of\natop\nfor a detailed description of this\n            feature (section colors).\n            with the flag\n-c\ncolors will always be used, even if output\n            is not directed to a terminal.\n-m\nuse markers at the end of a line to indicate that a critical\n            occupation percentage has been reached ('*') or has been\n            almost reached ('+') for particular resources. the marker '*'\n            is similar to the color red and the marker '+' to the color\n            cyan. see the man-page of\natop\nfor a detailed description of\n            these colors (section colors).\n-h\nrepeat the header line within a report for every\nn\ndetail\n            lines. the value of\nn\nis determined dynamically in case of\n            output to a tty/window (depending on the number of lines);\n            for output to a file or pipe this value is 23.\n-r\nsummarize\ncnt\nsamples into one sample. when the logfile\n            contains e.g. samples of 10 minutes, the use of the flag '-r\n            6' shows a report with one sample for every hour.\n\n       other flags are used to define which reports are required:\n-a\nshow all possible reports.\n-c\nreport about cpu utilization (in total and per cpu).\n-g\nreport about gpu utilization (per gpu).\n-p\nreport about processor-related matters, like load-averages\n            and hardware interrupts.\n-p\nreport about processes.\n-m\ncurrent memory- and swap-occupation.\n-s\nreport about paging- and swapping-activity, and\n            overcommitment.\n-b\nreport about pressure stall information (psi).\n-l\nreport about utilization of logical volumes.\n-f\nreport about utilization of multiple devices.\n-d\nreport about utilization of disks.\n-n\nreport about nfs mounted filesystems on nfs client.\n-j\nreport about nfs client activity.\n-j\nreport about nfs server activity.\n-i\nreport about the network interfaces.\n-i\nreport about errors for network-interfaces.\n-w\nreport about ip version 4 network traffic.\n-w\nreport about errors for ip version 4 traffic.\n-y\ngeneral report about icmp version 4 layer activity.\n-y\nper-type report about icmp version 4 layer activity.\n-u\nreport about udp version 4 network traffic.\n-z\nreport about ip version 6 network traffic.\n-z\nreport about errors for ip version 6 traffic.\n-k\ngeneral report about icmp version 6 layer activity.\n-k\nper-type report about icmp version 6 layer activity.\n-u\nreport about udp version 6 network traffic.\n-t\nreport about tcp network traffic.\n-t\nreport about errors for tcp-traffic.\n-h\nreport about infiniband utilization.\n-o\nreport about top-3 processes consuming most processor\n            capacity.  this report is only available when using a log\n            file (not when specifying an interval).\n-g\nreport about top-3 processes consuming most resident memory.\n            this report is only available when using a log file (not when\n            specifying an interval).\n-d\nreport about top-3 processes issuing most disk transfers.\n            this report is only available when using a log file (not when\n            specifying an interval).\n-n\nreport about top-3 processes issuing most ipv4/ipv6 socket\n            transfers.  this report is only available when using a log\n            file (not when specifying an interval).",
      "examples": "",
      "options": ""
    },
    {
      "command": "quota",
      "description": "quota\ndisplays users' disk usage and limits.  by default only the\n       user quotas are printed. by default space usage and limits are\n       shown in kbytes (and are named blocks for historical reasons).\nquota\nreports the quotas of all the filesystems listed in\n/etc/mtab\n.  for filesystems that are nfs-mounted a call to the\n       rpc.rquotad on the server machine is performed to get the\n       information.",
      "examples": "",
      "options": ""
    },
    {
      "command": "pcp-slabinfo",
      "description": "the\npcp-slabinfo\ncommand is used for viewing different stats\n       related to slab.  it helps users analyze useful information\n       related to the slab allocator.  the information includes the total\n       number of objects that are currently active, allocated objects,\n       pages per slab, etc.  by default,\npcp-slabinfo\nreports live data\n       for the local host.\n\n       the statistics shown are as follows:\nheader         description\n\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\n       active_objs    the number of objects that are currently active\n                      (i.e., in use)\n       num_objs       the total number of allocated objects (i.e. objects\n                      that are both in use and not in use).\n       objsize        the size of objects in this slab, in bytes.\n       objperslab     the number of objects stored in each slab.\n       pagesperslab   the number of pages allocated for each slab\n       active_slabs   the number of active slabs.\n       num_slabs      the total number of slabs.",
      "examples": "",
      "options": ""
    }
  ],
  "context": "Retrieved commands:\n\nCommand: pmdumptext\nDescription: pmdumptext\noutputs the values of performance metrics collected\n       live or from a set of performance co-pilot (pcp) archives.  by\n       default, the metric values are displayed in tab separated columns,\n       prefixed by a timestamp.\n\n       unless directed to another host by the\n-h\noption, or to one or\n       more sets of archives by the\n-a\noption, or an explict host: or\n       archive/ prefix in the\nmetric\n(see below for more information),\npmdumptext\nwill contact the performance metrics collector daemon\n       (pmcd) on the local host to obtain the required information.\npmdumptext\nmay be run in interactive mode with the\n-i\noption which\n       displays the values in equal width columns.  without this option,\n       no attempt is made to line up any values allowing the output to be\n       easily parsed by other applications.\n\n       the format of the output can be further controlled by changing the\n       precision of the values with\n-p\n, the width of the columns with\n-w\n,\n       and the format of the values with the\n-g\nand\n-f\noptions for the\n       shortest of scientific or fixed digits, and a fixed width format,\n       respectively.\n\n       by default\npmdumptext\nwill scale metric values to ``canonical''\n       units of bytes, seconds and counts.  the one exception is with the\n-r\noption where the values are not scaled.  the\n-u\noption reports\n       the units of each metric.\n\n       the\nmetrics\nto be dumped can be listed on the command line, in a\nconfig\nfile, or piped to\npmdumptext\non\nstdin\n.  a metric consists\n       of an optional source (host or archive), the metric name, and an\n       optional instance list immediately after the name.  a colon is\n       used to separate a host name from the metric, and a forward slash\n       (``/'') to separate an archive name from the metric.  instances\n       are enclosed in square brackets and a comma is used between each\n       instance if more than one is stated.  for example, some legal\n       metrics are:\n\n               kernel.all.cpu.idle\n               myhost:kernel.all.cpu.idle[cpu0,cpu3]\n               /path/to/myarchive/kernel.all.cpu.idle[cpu1]\n\n       when a\nmetric\ndoes not contain a host: or archive/ prefix, e.g.\n       kernel.all.cpu.idle above, then the source of the metric is\n       determined by the following rules:\n       (a) pmcd on\nhost\nfrom the\n-h\noption if any, else\n       (b) the\narchive\nfrom the first\n-a\noption if any, else\n       (c) the host from the first\nmetric\nprior to this one with a host:\n           prefix if any, else\n       (d) the archive from the first\nmetric\nprior to this one with an\n           archive/ prefix if any, else\n       (e) pmcd on the local host, which is equivalent to local::\nmetric\n.\n\n       the format of a\nmetric\nis further described in\npcpintro(1)\nin the\n       performance metric specifications section.  a normalization value\n       may optionally follow a metric name in a\nconfig\nfile or on\nstdin\n.\n       the metric value will be scaled by this value.  for example, if\n       the file system ``/dev/root'' has a capacity of 1965437 bytes,\n       then the percentage of the file system that is used could be\n       dumped with this\nconfig\n:\n\n               filesys.used[/dev/root] 19654.37\n\n       a normalization value may not be used with\nmetrics\nspecified as\n       command line arguments.\n\n       a metric name is not required to be a leaf node in the performance\n       metrics name space (pmns), except when one or more instances are\n       specified.  for example, to dump all file system metrics, only\nfilesys\nis required to dump\nfilesys.capacity\n,\nfilesys.used\n,\nfilesys.free\netc.\nRelevant sections:\n- \n\n---\n\nCommand: webvis\nDescription: webvis\ndisplays an overview of system level web server performance\n       statistics collected from the performance co-pilot (pcp)\n       infrastructure.  the display is modulated by the values of the\n       performance metrics retrieved from the target\nhost\n(which is\n       running\npmcd(1)\nand the\npmdaweblog(1)\nperformance metrics domain\n       agent) or from the pcp archive log identified by\narchive\n.  the\n       display is updated every\ninterval\nseconds (default 2 seconds).\n\n       as in all\npmview(1)\nscenes, when the mouse is moved over one of\n       the bars, the current value and metric information for that bar\n       will be shown in the text box near the top of the display.\n\n       the height of the web request and network activity bars is\n       proportional to the performance metric values relative to the\n       maximum expected activity, as controlled by the\n-m\nand\n-r\noptions\n       (see below).  similarly the\n-b\nand\n-i\noptions control the scaling\n       for disk activity bars.\n\n       the bars in the\nwebvis\nscene represent the following information;\nrequests by size\nat the front of the scene, the \"requests by size\" row of bars\n           shows the rate of requests for different size requests (the\n           histograms are defined by the following byte counts: 0, 3\n           kbytes, 10 kbytes, 30 kbytes, 100 kbytes, 300 kbytes, 1 mbyte,\n           3 mbytes and larger than 3 mbytes).  notice that the size\n           divisions are not evenly distributed.  the \"size\" is the data\n           portion of the response to each web server request.  these\n           rates are aggregated across all monitored web servers.\nrequests by type\nthis row of bars shows the request rate for each type of http\n           request (get, post, head and other), aggregated across all\n           monitored web servers.  for a detailed display showing the\n           break down of requests\nper web server\n, see\nweblogvis(1)\n.\nnetwork\nfor every network interface there are two stacked bars.  one\n           of the bars shows the input traffic while the other bar shows\n           the output traffic.  the stacks are composed of the number of\n           errors (red), the number of drops (orange) and the number of\n           packets (green).  in general, if there are any \"dropped input\n           packets\" then the corresponding network interface is\n           saturated, or there are insufficient network resources\n           available in the kernel to adequately service the input\n           request load.  if this is the case then the\nalarm conditions\nrows (see below) may provide more detail into the source of\n           the problem.\nalarm conditions\nthe red row of bars shows an assortment of tcp error\n           conditions (aggregated for all network interfaces), the orange\n           bars show critical kernel buffer allocation problems, and the\n           yellow bar shows severe paging conditions.  if any of these\n           bars have a non-zero height then the system being monitored\n           may require kernel parameter tuning, software reconfiguration\n           or more hardware resources.  the performance metrics behind\n           the bars are:\nnetwork.tcp.drops\n- rate of dropped connections\nnetwork.tcp.conndrops\n- rate of embryonic connections dropped\nnetwork.tcp.timeoutdrop\n- rate of connections dropped by rexmit timeout\nnetwork.tcp.rcvbadsum\n- rate of packets discarded for bad checksums\nnetwork.tcp.rexmttimeo\n- rate of retransmit timeouts\nnetwork.tcp.sndrexmitpack\n- rate of data packets retransmitted\nswap.pagesout\n- page swap out rate (indicating insufficient memory)\nnetwork.mbuf.failed\n- rate of incidents where the kernel failed to find\n                  mbuf space\nnetwork.mbuf.waited\n- rate of incidents where the kernel waited to find\n                  mbuf space\ncpu\nthis column shows cpu utilization, aggregated over all cpus.\n           (cpu idle time is not included in the column).\ndisk\nthere are two cylinders showing disk metrics.  the first\n           cylinder shows the rate of read (yellow) and write (violet)\n           operations, aggregated over all disk spindles.  the second\n           cylinder shows the average (over all disks) percentage of time\n           for which a disk is busy or active.  this metric is not\n           available in pcp1.x versions, therefore if\nwebvis\nis being\n           used to monitor a host running pcp1.x this cylinder will not\n           be displayed.\n\n           to adjust the scaling of these objects, refer to the\n-b\nand\n-i\noptions described below.\nmem\nthere are two bars showing memory metrics.  the first bar\n           shows utilized memory, with different colors representing\n           different types of utilization (kernel, user, etc), while the\n           second bar shows the amount of free memory.  if\nwebvis\nis\n           being used to monitor a host running pcp1.x then only the bar\n           showing free memory will be displayed.\n\n       if any optional\ninterface\narguments are specified in the command\n       line, then just the network interfaces matching the\ninterface\narguments will appear in the\nnetwork\nsection.  by default,\nall\ninterfaces will be used.  the\ninterface\narguments are used as\n       patterns for\negrep\n(1) matching against the interface names, so\nec\nwould select all external ethernet interfaces for a challenge s.\nwebvis\nuses\npmview(1)\n, and so the user interface follows that\n       described for\npmview(1)\n, which in turn displays the scene within\n       an inventor examiner viewer.\nwebvis\npasses most command line options to\npmview(1)\n.  therefore,\n       the command line options\n-a\n,\n-a\n,\n-c\n,\n-h\n,\n-n\n,\n-o\n,\n-p\n,\n-s\n,\n-t\n,\n-t\n,\n-x\n,\n-z\nand\n-z\n, and the user interface are described in the\npmview(1)\nman page.\n\n       options specific to\nwebvis\nare:\n-b\nmaxbusy\ncontrols the maximum (normalization) value for the average\n              percentage of the time active over all disks.  the default\n              value is 30% active.\n-i\nmaxio\ncontrols the maximum (normalization) value for the sume of\n              the aggregate disk read and disk write rates.  the default\n              value is 100 i/os per second.\n-m\nmax\ncontrols the maximum (normalization) value for the packet\n              input and packet output rates.  the default value is 750\n              packets/second.\n-r\nmaxreq\ncontrols the maximum web request rate.  the default is 5%\n              of the maximum packet rate (i.e. 38 requests/second by\n              default).  the maximum web error rate is fixed at 20% of\n              the maximum web request rate (i.e. 7 errors/second by\n              default).\n-v\nthe derived configuration file for\npmview(1)\nis written on\n              standard output.  this may be saved and used directly with\npmview\nif the user wishes to customize the display, or\n              modify some of the normalization parameters.\nRelevant sections:\n- \n- \n\n---\n\nCommand: pcp-atopsar\nDescription: the\npcp-atopsar\nprogram can be used to report statistics at the\n       system level.\n\n       in the first synopsis line (no sampling interval specified),\npcp-\natopsar\nextracts data from a raw logfile that has been recorded\n       previously by\npmlogger(1)\n(or via the\n-w\noption of the\npcp-atop\nprogram).\n       you can specify the name of the logfile with the\n-r\noption of the\npcp-atopsar\nprogram.  when a\npmlogger\ndaily logfile is used, named\n$pcp_log_dir/pmlogger/[host]/yyyymmdd\n(where yyyymmdd reflects the\n       date), the required date of the form yyyymmdd can be specified\n       with the\n-r\noption instead of the filename, or the symbolic name\n       'y' can be used for yesterday's daily logfile (this can be\n       repeated so 'yyyy' indicates the logfile of four days ago).  if\n       the\n-r\noption is not specified at all, today's daily logfile is\n       used by default.\n       by default, the hostname of the localhost will be used when\n       resolving\npmlogger\narchives, however an alternative\nhost\ncan be\n       specified using the\n-h\noption.\n       the starting and ending times of the report can be defined using\n       the options\n-b\nand\n-e\nfollowed by a time argument of the form\n       [yyyymmdd]hh:mm[ss].\n\n       in the second synopsis line,\npcp-atopsar\nreads actual activity\n       counters from the kernel with the specified\ninterval\n(in seconds)\n       and the specified number of\nsamples\n(optionally).  when\npcp-\natopsar\nis activated in this way it immediately sends the output\n       for every requested report to standard output.  if only one type\n       of report is requested, the header is printed once and after every\ninterval\nseconds the statistical counters are shown for that\n       period.  if several reports are requested, a header is printed per\n       sample followed by the statistical counters for that period.\n\n       when invoked via the\npcp(1)\ncommand, the\npcpintro(1)\noptions\n-h\n/\n--host\n,\n-a\n/\n--archive\n,\n-o\n/\n--origin\n,\n-s\n/\n--samples\n,\n-t\n/\n--interval\n,\n-z\n/\n--timezone\nand several other\npcp options\nbecome indirectly\n       available, see\npcpintro(1)\nfor their descriptions.\n\n       some generic flags can be specified to influence the behaviour of\n       the\npcp-atopsar\nprogram:\n-s\nby default the timestamp at the beginning of a line is\n            suppressed if more lines are shown for one interval. with\n            this flag a timestamp is given for every output-line (easier\n            for post-processing).\n-a\nby default certain resources as disks and network interfaces\n            are only shown when they were active during the interval.\n            with this flag all resources of a given type are shown, even\n            if they were inactive during the interval.\n-x\nby default\npcp-atopsar\nonly uses colors if output is directed\n            to a terminal (window).  these colors might indicate that a\n            critical occupation percentage has been reached (red) or has\n            been almost reached (cyan) for a particular resource.  see\n            the man-page of\natop\nfor a detailed description of this\n            feature (section colors).\n            with the flag\n-x\nthe use of colors is suppressed\n            unconditionally.\n-c\nby default\npcp-atopsar\nonly uses colors if output is directed\n            to a terminal (window).  these colors might indicate that a\n            critical occupation percentage has been reached (red) or has\n            been almost reached (cyan) for a particular resource.  see\n            the man-page of\natop\nfor a detailed description of this\n            feature (section colors).\n            with the flag\n-c\ncolors will always be used, even if output\n            is not directed to a terminal.\n-m\nuse markers at the end of a line to indicate that a critical\n            occupation percentage has been reached ('*') or has been\n            almost reached ('+') for particular resources. the marker '*'\n            is similar to the color red and the marker '+' to the color\n            cyan. see the man-page of\natop\nfor a detailed description of\n            these colors (section colors).\n-h\nrepeat the header line within a report for every\nn\ndetail\n            lines. the value of\nn\nis determined dynamically in case of\n            output to a tty/window (depending on the number of lines);\n            for output to a file or pipe this value is 23.\n-r\nsummarize\ncnt\nsamples into one sample. when the logfile\n            contains e.g. samples of 10 minutes, the use of the flag '-r\n            6' shows a report with one sample for every hour.\n\n       other flags are used to define which reports are required:\n-a\nshow all possible reports.\n-c\nreport about cpu utilization (in total and per cpu).\n-g\nreport about gpu utilization (per gpu).\n-p\nreport about processor-related matters, like load-averages\n            and hardware interrupts.\n-p\nreport about processes.\n-m\ncurrent memory- and swap-occupation.\n-s\nreport about paging- and swapping-activity, and\n            overcommitment.\n-b\nreport about pressure stall information (psi).\n-l\nreport about utilization of logical volumes.\n-f\nreport about utilization of multiple devices.\n-d\nreport about utilization of disks.\n-n\nreport about nfs mounted filesystems on nfs client.\n-j\nreport about nfs client activity.\n-j\nreport about nfs server activity.\n-i\nreport about the network interfaces.\n-i\nreport about errors for network-interfaces.\n-w\nreport about ip version 4 network traffic.\n-w\nreport about errors for ip version 4 traffic.\n-y\ngeneral report about icmp version 4 layer activity.\n-y\nper-type report about icmp version 4 layer activity.\n-u\nreport about udp version 4 network traffic.\n-z\nreport about ip version 6 network traffic.\n-z\nreport about errors for ip version 6 traffic.\n-k\ngeneral report about icmp version 6 layer activity.\n-k\nper-type report about icmp version 6 layer activity.\n-u\nreport about udp version 6 network traffic.\n-t\nreport about tcp network traffic.\n-t\nreport about errors for tcp-traffic.\n-h\nreport about infiniband utilization.\n-o\nreport about top-3 processes consuming most processor\n            capacity.  this report is only available when using a log\n            file (not when specifying an interval).\n-g\nreport about top-3 processes consuming most resident memory.\n            this report is only available when using a log file (not when\n            specifying an interval).\n-d\nreport about top-3 processes issuing most disk transfers.\n            this report is only available when using a log file (not when\n            specifying an interval).\n-n\nreport about top-3 processes issuing most ipv4/ipv6 socket\n            transfers.  this report is only available when using a log\n            file (not when specifying an interval).\nRelevant sections:\n- \n- \n\n---\n\nCommand: quota\nDescription: quota\ndisplays users' disk usage and limits.  by default only the\n       user quotas are printed. by default space usage and limits are\n       shown in kbytes (and are named blocks for historical reasons).\nquota\nreports the quotas of all the filesystems listed in\n/etc/mtab\n.  for filesystems that are nfs-mounted a call to the\n       rpc.rquotad on the server machine is performed to get the\n       information.\nRelevant sections:\n- \n- \n\n---\n\nCommand: pcp-slabinfo\nDescription: the\npcp-slabinfo\ncommand is used for viewing different stats\n       related to slab.  it helps users analyze useful information\n       related to the slab allocator.  the information includes the total\n       number of objects that are currently active, allocated objects,\n       pages per slab, etc.  by default,\npcp-slabinfo\nreports live data\n       for the local host.\n\n       the statistics shown are as follows:\nheader         description\n\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\u00e2\u0094\u0080\n       active_objs    the number of objects that are currently active\n                      (i.e., in use)\n       num_objs       the total number of allocated objects (i.e. objects\n                      that are both in use and not in use).\n       objsize        the size of objects in this slab, in bytes.\n       objperslab     the number of objects stored in each slab.\n       pagesperslab   the number of pages allocated for each slab\n       active_slabs   the number of active slabs.\n       num_slabs      the total number of slabs.\nRelevant sections:\n- \n- \n\n---\n\n",
  "response": "To check the current disk usage on a Unix-like system, use the `df` command.\n\n*   **Command:** `df`\n*   **Explanation:** The `df` command displays the amount of disk space available on file systems. It shows total size, used space, available space, and mount points.\n\nHere are a couple of examples:\n\n1.  **Show disk usage in human-readable format:**\n\n```bash\ndf -h\n```\n\nThis command uses the `-h` option to display sizes in human-readable format (e.g., 1K, 234M, 2G).\n\n2.  **Show disk usage for a specific file system:**\n\n```bash\ndf -h /home\n```\n\nThis command shows the disk space usage only for the `/home` file system. Replace `/home` with the desired mount point.\n",
  "analysis": {
    "query_analysis": {
      "intent": "Determine the amount of disk space currently being used on a system's file systems.",
      "keywords": [
        "disk usage",
        "current",
        "file system",
        "space",
        "used",
        "capacity"
      ],
      "reformulated_query": "How do I check the current disk space usage and capacity for all mounted file systems on a Unix-like system, including used space, available space, and total capacity?",
      "original_query": "What's the current disk usage?",
      "optimized_query": "What's the current disk use?",
      "optimization_metrics": {
        "precision": 1.0,
        "recall": 0,
        "f1_score": 0,
        "retrieval_time": 0.011632680892944336,
        "command_count": 5,
        "diverse_categories": 0,
        "query_specificity": 0.55,
        "overall_score": 0.6194183659553528
      }
    },
    "command_relevance": [
      {
        "command": "pmdumptext",
        "relevance_score": 0.33333333333333337
      },
      {
        "command": "webvis",
        "relevance_score": 0.30000000000000004
      },
      {
        "command": "pcp-atopsar",
        "relevance_score": 0.30000000000000004
      },
      {
        "command": "quota",
        "relevance_score": 0.26666666666666666
      },
      {
        "command": "pcp-slabinfo",
        "relevance_score": 0.26666666666666666
      }
    ]
  },
  "command_chains": {
    "next_commands": [
      "iostat2pcp",
      "mariadb-dump",
      "pcp-atopsar",
      "systemd-analyze",
      "aria_read_log"
    ],
    "command_chains": [
      ""
    ]
  }
}