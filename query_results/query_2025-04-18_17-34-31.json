{
  "metadata": {
    "timestamp": "2025-04-18_17-34-31",
    "query_id": "query_2025-04-18_17-34-31",
    "original_query": "how to move up a directory level?",
    "optimized_query": "What UNIX command is used to change the current directory to its parent directory (move one level up)?",
    "query_intent": "The user wants to know how to navigate one level up in the directory structure using a UNIX command.",
    "keywords": [
      "relocation",
      "directory",
      "level",
      "up",
      "parent directory",
      "navigate",
      "UNIX"
    ],
    "optimization_metrics": {
      "precision": 1.0,
      "recall": 0,
      "f1_score": 0,
      "retrieval_time": 0.03296303749084473,
      "command_count": 5,
      "diverse_categories": 0,
      "query_specificity": 0.65,
      "overall_score": 0.6583518481254578
    }
  },
  "retrieved_commands": [
    {
      "command": "pmlogger",
      "description": "pmlogger\ncreates the archives of performance metric values that\n       may be ``played back'' by other performance co-pilot (see\npcpintro(1)\n) tools.  these logs form the basis of the vcr paradigm\n       and retrospective performance analysis services common to the pcp\n       toolkit.\n\n       the mandatory argument\narchive\nis the base name for the physical\n       files that constitute an archive.  the\narchive\nargument may\n       contain\nstrftime(3)\nmeta-characters, which will be substituted\n       prior to creating the archive files.  when\npmlogger\nis run as a\n       service (see\npmlogger_daily(1)\n), the standard archive base name\n       template is\n%y%m%d.%h.%m\n.\n\n       the\n-v\noption specifies the version for the archive that is\n       generated.  by default the archive version\n$pcp_archive_version\n(set to 3 in current pcp releases) is used, and the only values\n       currently supported for\nversion\nare 2 or 3.\n\n       unless directed to another host by the\n-h\noption or when directly\n       using pmdas via the\n-o\noption,\npmlogger\nwill contact the\n       performance metrics collector daemon (pmcd) on the local host and\n       use that as the source of the metric values to be logged.\n\n       to support the required flexibility and control over what is\n       logged and when,\npmlogger\nmaintains an independent two level\n       logging state for each instance of each performance metric.  at\n       the first (mandatory) level, logging is allowed to be\non\n(with an\n       associated interval between samples), or\noff\nor\nmaybe\n.  in the\n       latter case, the second (advisory) level logging is allowed to be\non\n(with an associated interval between samples), or\noff\n.\n\n       the mandatory level allows universal specification that some\n       metrics must be logged, or must\nnot\nbe logged.  the default state\n       for all instances of all metrics when\npmlogger\nstarts is mandatory\n       maybe and advisory off.\n\n       use\npmlc(1)\nto interrogate and change the logging state once\npmlogger\nis running.\n\n       if a metric's state is mandatory (on or off) and a request is made\n       to change it to mandatory maybe, the new state is mandatory maybe\n       and advisory off.  if a metric's state is already advisory (on or\n       off) and a request is made to change it to mandatory maybe, the\n       current state is retained.\n\n       it is not possible for\npmlogger\nto log specific instances of a\n       metric and all instances of the same metric concurrently.  if\n       specific instances are being logged and a request to log all\n       instances is made, then all instances of the metric will be logged\n       according to the new request, superseding any prior logging\n       request for the metric.  a request to log all instances of a\n       metric will supersede any previous request to log all instances.\n       a request to log specific instances of a metric when all instances\n       are already being logged is refused.  to do this one must turn off\n       logging for all instances of the metric first.  in each case, the\n       validity of the request is checked first; for example a request to\n       change a metric's logging state to advisory on when it is\n       currently mandatory off is never permitted (it is necessary to\n       change the state to mandatory maybe first).\n\n       optionally, each system running\npmcd(1)\nmay also be configured to\n       run a ``primary''\npmlogger\ninstance.  this\npmlogger\ninstance is\n       launched by\n$pcp_rc_dir/pmlogger\n, and is affected by the files\n$pcp_sysconf_dir/pmlogger/control\n,\n$pcp_sysconf_dir/pmlogger/control.d/*\n, (use\nchkconfig\n(8),\nsystemctl(1)\nor similar platform-specific commands to activate or\n       disable the primary\npmlogger\ninstance),\n$pcp_sysconfig_dir/pmlogger\n(environment variable settings for the\n       primary\npmlogger\n)\n$pcp_sysconf_dir/pmlogger/pmlogger.options\n(command line options passed to the primary\npmlogger\n) and\n$pcp_var_dir/config/pmlogger/config.default\n(the default initial\n       configuration file for the primary\npmlogger\n).\n\n       the primary\npmlogger\ninstance is identified by the\n-p\noption.\n       there may be at most one ``primary''\npmlogger\ninstance on each\n       system.  the primary\npmlogger\ninstance (if any) must be running on\n       the same host as the\npmcd(1)\nto which it connects (if any), so the\n-h\nand\n-p\noptions are mutually exclusive.\n\n       logging of some metrics is possible even in the absence of a local\npmcd(1)\n, using the \"local context\" mode of operation.  this is\n       activated using the\n-o\noption, and causes\npmlogger\nto make use of\n       local dso pmdas instead of communicating with\npmcd(1)\n.  when\n       operating using a local context, the\n-k\noption may be used to\n       control the dso pmdas that should be made accessible.  the\nspec\nargument conforms to the syntax described in\npmspeclocalpmda(3)\n.\n       more than one\n-k\noption may be used.\n\n       when launched as a non-primary instance,\npmlogger\nwill exit\n       immediately if the configuration file causes no metric logging to\n       be scheduled.  the\n-l\noption overrides this behavior, and causes a\n       non-primary\npmlogger\ninstance to ``linger'', presumably pending\n       some future dynamic re-configuration and state change via\npmlc(1)\n.\npmlogger\nwill also linger without the\n-l\noption being used if all\n       the metrics to be logged are logged as once only metrics.  when\n       the once only metrics have been logged, a warning message will be\n       generated stating that the event queue is empty and no more events\n       will be scheduled.\n\n       by default all diagnostics and errors from\npmlogger\nare written to\n       the file\npmlogger.log\nin the directory where\npmlogger\nis launched.\n       the\n-l\noption may be used to override the default behavior.  if\n       the log file cannot be created or is not writable, output is\n       written to standard error instead.  if the\nlogfile\nfor the\n-l\noption is \"\n-\n\" (i.e.\n-l-\n) then log messages are written to the\n       standard output stream.  this can be particularly useful when\n       running\npmlogger\nmanually, rather than as a service daemon.\n\n       the\n-n\noption directs\npmlogger\nto notify a service manager,\n       typically\nsystemd(1)\n, when it has started and is about to begin\n       writing pcp archives.  this option would only normally be used\n       when\npmlogger\nis run as a daemon service under the control of a\n       service manager.  for more details, see\n__pmservernotifyservicemanagerready(3)\nand\nsystemd(1)\n.  on\n       platforms that do not use a service manager that supports\n       notifications, the\n-n\noption is basically a no-op.\n\n       if specified, the\n-s\noption instructs\npmlogger\nto terminate after\n       a certain size in records, bytes or time units has been\n       accumulated.  if\nendsize\nis an integer then\nendsize\nrecords will\n       be written to the archive.  if\nendsize\nis an integer suffixed by\nb\nor\nbytes\nthen\nendsize\nbytes of the archive data will be written\n       out (note, however, that archive record boundaries will not be\n       broken and so this limit may be slightly surpassed).  other viable\n       file size units include:\nk\n,\nkb\n,\nkib\n,\nkbyte\n,\nkilobyte\nfor kilobytes\n       and\nm\n,\nmb\n,\nmib\n,\nmbyte\n,\nmegabyte\nfor megabytes and\ng\n,\ngb\n,\ngib\n,\ngbyte\n,\ngigabyte\nfor gigabytes.  these units may be optionally\n       suffixed by an\ns\nand may be of mixed case.  alternatively\nendsize\nmay be an integer or a floating point number suffixed using a time\n       unit as described in\npcpintro(1)\nfor the\ninterval\nargument (to the\n       standard pcp\n-t\ncommand line option).\n       some examples of different formats:\n-s 100\n-s 100bytes\n-s 100k\n-s 100mb\n-s 10gbyte\n-s 10mins\n-s 1.5hours\nthe default is for\npmlogger\nto run forever.\n\n       the\n-r\noption causes the size of the physical record(s) for each\n       group of metrics and the expected contribution of the group to the\n       size of the pcp archive for one full day of collection to be\n       reported in the log file.  this information is reported the first\n       time each group is successfully written to the archive.\n\n       the\n-u\noption specifies the user account under which to run\npmlogger\n.  the default is the current user account for interactive\n       use.  when run as a daemon, the unprivileged \"pcp\" account is used\n       in current versions of pcp, but in older versions the superuser\n       account (\"root\") was used by default.\n\n       the archive is potentially a multi-volume data set, and the\n-v\noption causes\npmlogger\nto start a new volume after a certain size\n       in records, bytes, or time units has been accumulated for the\n       current volume.  the format of this size specification is\n       identical to that of the\n-s\noption (see above).  the default is\n       for\npmlogger\nto create a single volume archive.  additional volume\n       switches can also be forced asynchronously by either using\npmlc(1)\nor sending\npmlogger\na sighup signal (see below).  note, if a\n       scheduled volume switch is in operation due to the\n-v\noption, then\n       its counters will be reset after an asynchronous switch.\n\n       independent of any\n-v\noption, each volume of an archive is limited\n       to no more than 2^31 bytes, so\npmlogger\nwill automatically create\n       a new volume for the archive before this limit is reached.\n\n       normally\npmlogger\noperates on the distributed performance metrics\n       name space (pmns), however if the\n-n\noption is specified an\n       alternative local pmns is loaded from the file\npmnsfile\n.\n\n       under normal circumstances,\npmlogger\nwill run forever (except for\n       a\n-s\noption or a termination signal).  the\n-t\noption may be used\n       to limit the execution time using the format of time as prescribed\n       by\npcpintro(1)\n.  the time is interpreted within the time zone of\n       the pmcd server, unless the\n-y\noption is given, within which case\n       the time zone at this logger host is used.\n       some examples of different formats:\n-t 10mins\n-t '@ 11:30'\nfrom this it can be seen that\n-t 10mins\nand\n-s 10mins\nperform\n       identical actions.\n\n       alternatively,\npmlogger\nruntime may be limited to the lifetime of\n       another process by using the\n-p\nor\n--pid\noption to nominate the\n       pid of the process of interest.  in this case the\npmlogger\nwill\n       exit when the other process no longer exists.\n\n       when\npmlogger\nreceives a\nsighup\nsignal, the current volume of the\n       archive is closed, and a new volume is opened.  this mechanism (or\n       the alternative mechanism via\npmlc(1)\n) may be used to manage the\n       growth of the archive files - once a log volume is closed, that\n       file may be archived without ill-effect on the continued operation\n       of\npmlogger\n.  see also the\n-v\noption above.\n\n       when\npmlogger\nreceives a\nsigusr2\nsignal, the current archive is\n       closed, and a new archive is opened.  for this to succeed, the\n       original\narchive\nargument must include\nstrftime(3)\nmeta characters\n       (e.g.\n%y%m%d.%h.%m\n), otherwise\npmlogger\nwill exit because the\n       archive files will already exist and\npmlogger\nwill not over-write\n       existing archive files.  note that\nsigusr2\ntriggers\npmlogger\nto\n       re-exec itself and re-parse all original arguments.  this means\n       that any relative time limits placed on it's termination time or\n       sampling limit are reset and begin again.  this only affects\n       relative termination times, not absolute times e.g.\n-t 5s\nis\n       affected, but\n-t 5pm\nis not.\n\n       historically the buffers for the current archive may be flushed to\n       disk using the\nflush\ncommand of\npmlc(1)\n, or by using the\n-u\noption.  the current version of\npmlogger\nand the\nlibpcp\nroutines\n       that underpin\npmlogger\nunconditionally use unbuffered writes and a\n       single\nfwrite(3)\nfor each logical record written, and so\n       ``flushing'' does not force any additional data to be written to\n       the file system.  the\n-u\noption and the\npmlc(1)\nflush\ncommand are\n       retained for backwards compatibility.\n\n       when launched with the\n-x\noption, pmlogger will accept\n       asynchronous control requests on the file descriptor\nfd\n.  this\n       option is only expected to be used internally by pcp applications\n       that support ``live record mode''.\n\n       the\n-m\noption allows the string\nnote\nto be appended to the map\n       file for this instance of\npmlogger\nin the\n$pcp_tmp_dir/pmlogger\ndirectory.  this is currently used internally to document the file\n       descriptor (\nfd\n) when the\n-x\noption is used, or to indicate that\n       this\npmlogger\ninstance was started under the control of\npmlogger_check(1)\n, (\n-m pmlogger_check\n) or was re-exec'd (see\nexecvp(3)\n) due to a\nsigusr2\nsignal being received as described\n       above (\n-m reexec\n).\n\n       the\n-h\noption allows the hostname written into the archive label\n       to be overridden.  this mirrors the\n-h\noption of\npmcd(1)\n, but\n       allows it to be specified on the\npmlogger\nprocess.  without this\n       option, the value returned from the logged\npmcd(1)\nis used.\n\n       the\n-c\noption will cause the configuration file to be parsed and\npmlogger\nwill then exit without creating an output archive, so\n       when\n-c\nis specified, the\narchive\ncommand line argument is not\n       required.  any errors in the configuration file are reported.\n\n       the\n-d\nor\n--directory\noption may be used to specify the directory\n       where the\narchive\nshould be created.\ndirectory\nmay include\nsh\n(1)\n       metacharacters, like\n$(\n...\n)\nor\n`\n...\n`\nor\n$\nvar\nand\npmlogger\nwill\n       expand these to produce a final directory path.  the resultant\n       path must be absolute, not relative.  the\n-d\noption is intended\n       primarily for use by\npmlogger_check(1)\nand normal users would not\n       typically need to use the option, as the directory for\narchive\nis\n       either implied by\narchive\nif it contains directory components else\n       the current directory by default.",
      "examples": "",
      "options": ""
    },
    {
      "command": "quilt",
      "description": "quilt\nis a tool to manage large sets of patches by keeping track\n       of the changes each patch makes.  patches can be applied,\n       unapplied, refreshed, and so forth.  the key philosophical concept\n       is that your primary working material is patches.\n\n       with\nquilt\n, all work occurs within a single directory tree.\n       commands can be invoked from anywhere within the source tree.\n       like\ncvs\n,\nsubversion\n, or\ngit\n,\nquilt\ntakes commands of the form\n       \u00e2\u0080\u009cquilt\ncommand\n\u00e2\u0080\u009d.  a command can be truncated (abbreviated) as long\n       as the specified part of the command is unambiguous.  if\ncommand\nis ambiguously short,\nquilt\nlists all commands matching that\n       prefix and exits.  all commands print a brief contextual help\n       message and exit if given the \u00e2\u0080\u009c-h\u00e2\u0080\u009d option.\nquilt\nmanages a stack of patches.  patches are applied\n       incrementally on top of the base tree plus all preceding patches.\n       they can be pushed onto the stack (\u00e2\u0080\u009cquilt push\u00e2\u0080\u009d), and popped off\n       the stack (\u00e2\u0080\u009cquilt pop\u00e2\u0080\u009d).  commands are available for querying the\n       contents of the stack (\u00e2\u0080\u009cquilt applied\u00e2\u0080\u009d, \u00e2\u0080\u009cquilt previous\u00e2\u0080\u009d, \u00e2\u0080\u009cquilt\n       top\u00e2\u0080\u009d) and the patches that are not applied at a particular moment\n       (\u00e2\u0080\u009cquilt next\u00e2\u0080\u009d, \u00e2\u0080\u009cquilt unapplied\u00e2\u0080\u009d).  by default, most commands\n       apply to the topmost patch on the stack.\n\n       patch files are located in the\npatches\nsubdirectory of the source\n       tree (see\nexample of working tree\n, under\nfiles\n, below).  the\nquilt_patches\nenvironment variable overrides this default\n       location.  when not found in the current directory, that\n       subdirectory is searched recursively in the parent directories\n       (this is similar to the way\ngit\nsearches for its configuration\n       files).  the\npatches\ndirectory may contain subdirectories.  it may\n       also be a symbolic link instead of a directory.\nquilt\ncreates and maintains a file called\nseries\n, which defines\n       the order in which patches are applied.  the\nquilt_series\nenvironment variable overrides this default name.  you can query\n       the contents of the series file at any time with \u00e2\u0080\u009cquilt series\u00e2\u0080\u009d.\n       in this file, each patch file name is on a separate line.  patch\n       files are identified by path names that are relative to the\npatches\ndirectory; patches may be in subdirectories below this\n       directory.  lines in the series file that start with a hash\n       character (#) are ignored.  patch options, such as the strip level\n       or whether the patch is reversed, can be added after each patch\n       file name.  options are introduced by a space, separated by\n       spaces, and follow the syntax of the patch(1) options (e.g.,\n       \u00e2\u0080\u009c-p2\u00e2\u0080\u009d).  quilt records patch options automatically when a command\n       supporting them is used.  without options, strip level 1 is\n       assumed.  you can also add a comment after each patch file name\n       and options, introduced by a space followed by a hash character.\n       when\nquilt\nadds, removes, or renames patches, it automatically\n       updates the series file.  users of\nquilt\ncan modify series files\n       while some patches are applied, as long as the applied patches\n       remain in their original order.  unless there are means by which a\n       series file can be generated automatically, you should provide it\n       along with any set of\nquilt\n-managed patches you distribute.\n       different series files can be used to assemble patches in\n       different ways, corresponding (for example) to different\n       development branches.\n\n       before a patch is applied, copies of all files the patch modifies\n       are saved to the\n.pc/\npatch-name directory, where\npatch-name\nis the\n       name of the patch (for example,\nfix-buffer-overflow.patch\n).  the\n       patch is added to the list of currently applied patches\n       (\n.pc/applied-patches\n).  later, when a patch is regenerated (\u00e2\u0080\u009cquilt\n       refresh\u00e2\u0080\u009d), the backup copies in\n.pc/\npatch-name are compared with\n       the current versions of the files in the source tree using gnu\ndiff(1)\n.\n\n       a similar process occurs when starting a new patch (\u00e2\u0080\u009cquilt new\u00e2\u0080\u009d);\n       the new patch file name is added to the series file.  a file to be\n       changed by the patch is backed up and opened for editing (\u00e2\u0080\u009cquilt\n       edit\u00e2\u0080\u009d).  after editing, inspect the impact of your changes (\u00e2\u0080\u009cquilt\n       diff\u00e2\u0080\u009d); the changes stay local to your working tree until you call\n       \u00e2\u0080\u009cquilt refresh\u00e2\u0080\u009d to write them to the patch file.\n\n       documentation related to a patch can be put at the beginning of\n       its patch file (\u00e2\u0080\u009cquilt header\u00e2\u0080\u009d).\nquilt\nis careful to preserve all\n       text that precedes the actual patch when doing a refresh.  (this\n       is limited to patches in unified format; see the gnu\ndiffutils\nmanual.)\n\n       the series file is looked up in the\n.pc\ndirectory, in the root of\n       the source tree, and in the patches directory.  the first series\n       file that is found is used.  this may also be a symbolic link, or\n       a file with multiple hard links.  usually, only one series file is\n       used for a set of patches, making the patches subdirectory a\n       convenient location.\n\n       the\n.pc\ndirectory cannot be relocated, but it can be a symbolic\n       link.  its subdirectories must not be renamed or restructured.\n       while patches are applied to the source tree, this directory is\n       essential for many operations, including popping patches off the\n       stack and refreshing them.  files in the\n.pc\ndirectory are\n       automatically removed when they are no longer needed, so there is\n       no need to clean up manually.\nquilt commands reference\nadd\n[-p patch] {file} ...\n\n           add one or more files to the topmost or named patch.  files\n           must be added to the patch before being modified.  files that\n           are modified by patches already applied on top of the\n           specified patch cannot be added.\n\n           -p patch\n\n               patch to add files to.\nannotate\n[-p patch] {file}\n\n           print an annotated listing of the specified file showing which\n           patches modify which lines. only applied patches are included.\n\n           -p patch\n\n               stop checking for changes at the specified rather than the\n               topmost patch.\napplied\n[patch]\n\n           print a list of applied patches, or all patches up to and\n           including the specified patch in the file series.\ndelete\n[-r] [--backup] [patch|-n]\n\n           remove the specified or topmost patch from the series file.\n           if the patch is applied, quilt will attempt to remove it\n           first. (only the topmost patch can be removed right now.)\n\n           -n  delete the next patch after topmost, rather than the\n               specified or topmost patch.\n\n           -r  remove the deleted patch file from the patches directory\n               as well.\n\n           --backup\n\n               rename the patch file to patch~ rather than deleting it.\n               ignored if not used with `-r'.\ndiff\n[-p n|-p ab] [-u|-u num|-c|-c num] [--combine patch|-z] [-r]\n       [-p patch] [--snapshot] [--diff=utility] [--no-timestamps] [--no-\n       index] [--sort] [--color[=always|auto|never]] [file ...]\n\n           produces a diff of the specified file(s) in the topmost or\n           specified patch.  if no files are specified, all files that\n           are modified are included.\n\n           -p n\n               create a -p n style patch (-p0 or -p1 are supported).\n\n           -p ab\n               create a -p1 style patch, but use a/file and b/file as the\n               original and new filenames instead of the default\n               dir.orig/file and dir/file names.\n\n           -u, -u num, -c, -c num\n\n               create a unified diff (-u, -u) with num lines of context.\n               create a context diff (-c, -c) with num lines of context.\n               the number of context lines defaults to 3.\n\n           --no-timestamps\n\n               do not include file timestamps in patch headers.\n\n           --no-index\n\n               do not output index: lines.\n\n           -z  write to standard output the changes that have been made\n               relative to the topmost or specified patch.\n\n           -r  create a reverse diff.\n\n           -p patch\n\n               create a diff for the specified patch.  (defaults to the\n               topmost patch.)\n\n           --combine patch\n\n               create a combined diff for all patches between this patch\n               and the patch specified with -p. a patch name of `-' is\n               equivalent to specifying the first applied patch.\n\n           --snapshot\n\n               diff against snapshot (see `quilt snapshot -h').\n\n           --diff=utility\n\n               use the specified utility for generating the diff. the\n               utility is invoked with the original and new file name as\n               arguments.\n\n           --color[=always|auto|never]\n\n               use syntax coloring (auto activates it only if the output\n               is a tty).\n\n           --sort\n               sort files by their name instead of preserving the\n               original order.\nedit\nfile ...\n\n           edit the specified file(s) in $editor after adding it (them)\n           to the topmost patch.\nfiles\n[-v] [-a] [-l] [--combine patch] [patch]\n\n           print the list of files that the topmost or specified patch\n           changes.\n\n           -a  list all files in all applied patches.\n\n           -l  add patch name to output.\n\n           -v  verbose, more user friendly output.\n\n           --combine patch\n\n               create a listing for all patches between this patch and\n               the topmost or specified patch. a patch name of `-' is\n               equivalent to specifying the first applied patch.\nfold\n[-r] [-q] [-f] [-p strip-level]\n\n           integrate the patch read from standard input into the topmost\n           patch: after making sure that all files modified are part of\n           the topmost patch, the patch is applied with the specified\n           strip level (which defaults to 1).\n\n           -r  apply patch in reverse.\n\n           -q  quiet operation.\n\n           -f  force apply, even if the patch has rejects. unless in\n               quiet mode, apply the patch interactively: the patch\n               utility may ask questions.\n\n           -p strip-level\n\n               the number of pathname components to strip from file names\n               when applying patchfile.\nfork\n[new_name]\n\n           fork the topmost patch.  forking a patch means creating a\n           verbatim copy of it under a new name, and use that new name\n           instead of the original one in the current series.  this is\n           useful when a patch has to be modified, but the original\n           version of it should be preserved, e.g.  because it is used in\n           another series, or for the history.  a typical sequence of\n           commands would be: fork, edit, refresh.\n\n           if new_name is missing, the name of the forked patch will be\n           the current patch name, followed by `-2'.  if the patch name\n           already ends in a dash-and-number, the number is further\n           incremented (e.g., patch.diff, patch-2.diff, patch-3.diff).\ngraph\n[--all] [--reduce] [--lines[=num]] [--edge-labels=files] [-t\n       ps] [patch]\n\n           generate a dot(1) directed graph showing the dependencies\n           between applied patches. a patch depends on another patch if\n           both touch the same file or, with the --lines option, if their\n           modifications overlap. unless otherwise specified, the graph\n           includes all patches that the topmost patch depends on.  when\n           a patch name is specified, instead of the topmost patch,\n           create a graph for the specified patch. the graph will include\n           all other patches that this patch depends on, as well as all\n           patches that depend on this patch.\n\n           --all\n               generate a graph including all applied patches and their\n               dependencies. (unapplied patches are not included.)\n\n           --reduce\n\n               eliminate transitive edges from the graph.\n\n           --lines[=num]\n\n               compute dependencies by looking at the lines the patches\n               modify.  unless a different num is specified, two lines of\n               context are included.\n\n           --edge-labels=files\n\n               label graph edges with the file names that the adjacent\n               patches modify.\n\n           -t ps\n               directly produce a postscript output file.\ngrep\n[-h|options] {pattern}\n\n           grep through the source files, recursively, skipping patches\n           and quilt meta-information. if no filename argument is given,\n           the whole source tree is searched. please see the grep(1)\n           manual page for options.\n\n           -h  print this help. the grep -h option can be passed after a\n               double-dash (--). search expressions that start with a\n               dash can be passed after a second double-dash (-- --).\nheader\n[-a|-r|-e] [--backup] [--strip-diffstat] [--strip-trailing-\n       whitespace] [patch]\n\n           print or change the header of the topmost or specified patch.\n\n           -a, -r, -e\n\n               append to (-a) or replace (-r) the exiting patch header,\n               or edit (-e) the header in $editor. if none of these\n               options is given, print the patch header.\n\n           --strip-diffstat\n\n               strip diffstat output from the header.\n\n           --strip-trailing-whitespace\n\n               strip trailing whitespace at the end of lines of the\n               header.\n\n           --backup\n\n               create a backup copy of the old version of a patch as\n               patch~.\nimport\n[-p num] [-r] [-p patch] [-f] [-d {o|a|n}] patchfile ...\n\n           import external patches.  the patches will be inserted\n           following the current top patch, and must be pushed after\n           import to apply them.\n\n           -p num\n\n               number of directory levels to strip when applying\n               (default=1)\n\n           -r\n\n               apply patch in reverse.\n\n           -p patch\n\n               patch filename to use inside quilt. this option can only\n               be used when importing a single patch.\n\n           -f  overwrite/update existing patches.\n\n           -d {o|a|n}\n\n               when overwriting in existing patch, keep the old (o), all\n               (a), or new (n) patch header. if both patches include\n               headers, this option must be specified. this option is\n               only effective when -f is used.\nmail\n{--mbox file|--send} [-m text] [-m file] [--prefix prefix]\n       [--sender ...] [--from ...] [--to ...] [--cc ...] [--bcc ...]\n       [--subject ...] [--reply-to message] [--charset ...] [--signature\n       file] [first_patch [last_patch]]\n\n           create mail messages from a specified range of patches, or all\n           patches in the series file, and either store them in a mailbox\n           file, or send them immediately. the editor is opened with a\n           template for the introduction.  please see\n           /usr/local/share/doc/quilt/readme.mail for details.  when\n           specifying a range of patches, a first patch name of `-'\n           denotes the first, and a last patch name of `-' denotes the\n           last patch in the series.\n\n           -m text\n\n               text to use as the text in the introduction. when this\n               option is used, the editor will not be invoked, and the\n               patches will be processed immediately.\n\n           -m file\n\n               like the -m option, but read the introduction from file.\n\n           --prefix prefix\n\n               use an alternate prefix in the bracketed part of the\n               subjects generated. defaults to `patch'.\n\n           --mbox file\n\n               store all messages in the specified file in mbox format.\n               the mbox can later be sent using formail, for example.\n\n           --send\n\n               send the messages directly.\n\n           --sender\n\n               the envelope sender address to use. the address must be of\n               the form `user@domain.name'. no display name is allowed.\n\n           --from, --subject\n\n               the values for the from and subject headers to use. if no\n               --from option is given, the value of the --sender option\n               is used.\n\n           --to, --cc, --bcc\n\n               append a recipient to the to, cc, or bcc header.\n\n           --charset\n\n               specify a particular message encoding on systems which\n               don't use utf-8 or iso-8859-15. this character encoding\n               must match the one used in the patches.\n\n           --signature file\n\n               append the specified signature to messages (defaults to\n               ~/.signature if found; use `-' for no signature).\n\n           --reply-to message\n\n               add the appropriate headers to reply to the specified\n               message.\nnew\n[-p n] {patchname}\n\n           create a new patch with the specified file name, and insert it\n           after the topmost patch. the name can be prefixed with a sub-\n           directory name, allowing for grouping related patches\n           together.\n\n           -p n\n               create a -p n style patch (-p0 or -p1 are supported).\n\n               quilt can be used in sub-directories of a source tree. it\n               determines the root of a source tree by searching for a\n               directory above the current working directory. create a\n               directory in the intended root directory if quilt chooses\n               a top-level directory that is too high up in the directory\n               tree.\nnext\n[patch]\n\n           print the name of the next patch after the specified or\n           topmost patch in the series file.\npatches\n[-v] [--color[=always|auto|never]] {file} [files...]\n\n           print the list of patches that modify any of the specified\n           files. (uses a heuristic to determine which files are modified\n           by unapplied patches.  note that this heuristic is much slower\n           than scanning applied patches.)\n\n           -v  verbose, more user friendly output.\n\n           --color[=always|auto|never]\n\n               use syntax coloring (auto activates it only if the output\n               is a tty).\npop\n[-afrqv] [--refresh] [num|patch]\n\n           remove patch(es) from the stack of applied patches.  without\n           options, the topmost patch is removed.  when a number is\n           specified, remove the specified number of patches.  when a\n           patch name is specified, remove patches until the specified\n           patch end up on top of the stack.  patch names may include the\n           patches/ prefix, which means that filename completion can be\n           used.\n\n           -a  remove all applied patches.\n\n           -f  force remove. the state before the patch(es) were applied\n               will be restored from backup files.\n\n           -r  always verify if the patch removes cleanly; don't rely on\n               timestamp checks.\n\n           -q  quiet operation.\n\n           -v  verbose operation.\n\n           --refresh\n\n               automatically refresh every patch before it gets\n               unapplied.\nprevious\n[patch]\n\n           print the name of the previous patch before the specified or\n           topmost patch in the series file.\npush\n[-afqvm] [--fuzz=n] [--merge[=merge|diff3]] [--leave-rejects]\n       [--color[=always|auto|never]] [--refresh] [num|patch]\n\n           apply patch(es) from the series file.  without options, the\n           next patch in the series file is applied.  when a number is\n           specified, apply the specified number of patches.  when a\n           patch name is specified, apply all patches up to and including\n           the specified patch.  patch names may include the patches/\n           prefix, which means that filename completion can be used.\n\n           -a  apply all patches in the series file.\n\n           -q  quiet operation.\n\n           -f  force apply, even if the patch has rejects.\n\n           -v  verbose operation.\n\n           --fuzz=n\n\n               set the maximum fuzz factor (default: 2).\n\n           -m, --merge[=merge|diff3]\n\n               merge the patch file into the original files (see\n               patch(1)).\n\n           --leave-rejects\n\n               leave around the reject files patch produced, even if the\n               patch is not actually applied.\n\n           --color[=always|auto|never]\n\n               use syntax coloring (auto activates it only if the output\n               is a tty).\n\n           --refresh\n\n               automatically refresh every patch after it was\n               successfully applied.\nrefresh\n[-p n|-p ab] [-u|-u num|-c|-c num] [-z[new_name]] [-f]\n       [--no-timestamps] [--no-index] [--diffstat] [--sort] [--backup]\n       [--strip-trailing-whitespace] [patch]\n\n           refreshes the specified patch, or the topmost patch by\n           default.  documentation that comes before the actual patch in\n           the patch file is retained.\n\n           it is possible to refresh patches that are not on top.  if any\n           patches on top of the patch to refresh modify the same files,\n           the script aborts by default.  patches can still be refreshed\n           with -f.  in that case this script will print a warning for\n           each shadowed file, changes by more recent patches will be\n           ignored, and only changes in files that have not been modified\n           by any more recent patches will end up in the specified patch.\n\n           -p n\n               create a -p n style patch (-p0 or -p1 supported).\n\n           -p ab\n               create a -p1 style patch, but use a/file and b/file as the\n               original and new filenames instead of the default\n               dir.orig/file and dir/file names.\n\n           -u, -u num, -c, -c num\n\n               create a unified diff (-u, -u) with num lines of context.\n               create a context diff (-c, -c) with num lines of context.\n               the number of context lines defaults to 3.\n\n           -z[new_name]\n\n               create a new patch containing the changes instead of\n               refreshing the topmost patch. if no new name is specified,\n               `-2' is added to the original patch name, etc. (see the\n               fork command.)\n\n           --no-timestamps\n\n               do not include file timestamps in patch headers.\n\n           --no-index\n\n               do not output index: lines.\n\n           --diffstat\n\n               add a diffstat section to the patch header, or replace the\n               existing diffstat section.\n\n           -f  enforce refreshing of a patch that is not on top.\n\n           --backup\n\n               create a backup copy of the old version of a patch as\n               patch~.\n\n           --sort\n               sort files by their name instead of preserving the\n               original order.\n\n           --strip-trailing-whitespace\n\n               strip trailing whitespace at the end of lines.\nremove\n[-p patch] {file} ...\n\n           remove one or more files from the topmost or named patch.\n           files that are modified by patches on top of the specified\n           patch cannot be removed.\n\n           -p patch\n\n               remove named files from the named patch.\nrename\n[-p patch] new_name\n\n           rename the topmost or named patch.\n\n           -p patch\n\n               patch to rename.\nrevert\n[-p patch] {file} ...\n\n           revert uncommitted changes to the topmost or named patch for\n           the specified file(s): after the revert, 'quilt diff -z' will\n           show no differences for those files. changes to files that are\n           modified by patches on top of the specified patch cannot be\n           reverted.\n\n           -p patch\n\n               revert changes in the named patch.\nseries\n[--color[=always|auto|never]] [-v]\n\n           print the names of all patches in the series file.\n\n           --color[=always|auto|never]\n\n               use syntax coloring (auto activates it only if the output\n               is a tty).\n\n           -v  verbose, more user friendly output.\nsetup\n[-d path-prefix] [-v] [--sourcedir dir] [--fuzz=n]\n       [--slow|--fast] {specfile|seriesfile}\n\n           initializes a source tree from an rpm spec file or a quilt\n           series file.\n\n           -d  optional path prefix for the resulting source tree.\n\n           --sourcedir\n\n               directory that contains the package sources. defaults to\n               `.'.\n\n           -v  verbose debug output.\n\n           --fuzz=n\n\n               set the maximum fuzz factor (needs rpm 4.6 or later).\n\n           --slow\n               use the original, slow method to process the spec file. in\n               this mode, rpmbuild generates a working tree in a\n               temporary directory while all its actions are recorded,\n               and then everything is replayed from scratch in the target\n               directory.\n\n           --fast\n               use the new, faster method to process the spec file. in\n               this mode, rpmbuild is told to generate a working tree\n               directly in the target directory. this is the default\n               (since quilt version 0.67).\n\n               the setup command is only guaranteed to work properly on\n               spec files where applying all the patches is the last\n               thing done in the %prep section. this is a design\n               limitation due to the fact that quilt can only operate on\n               patches. if other commands in the %prep section modify the\n               patched files, they must come first, otherwise you won't\n               be able to push the patch series.\n\n               for example, a %prep section where you first unpack a\n               tarball, then apply patches, and lastly perform a tree-\n               wide string substitution, is not ok. for \"quilt setup\" to\n               work, it would have to be changed to unpacking the\n               tarball, then performing the tree-wide string\n               substitution, and lastly applying the patches.\nsnapshot\n[-d]\n\n           take a snapshot of the current working state.  after taking\n           the snapshot, the tree can be modified in the usual ways,\n           including pushing and popping patches.  a diff against the\n           tree at the moment of the snapshot can be generated with\n           `quilt diff --snapshot'.\n\n           -d  only remove current snapshot.\ntop\nprint the name of the topmost patch on the current stack of\n           applied patches.\nunapplied\n[patch]\n\n           print a list of patches that are not applied, or all patches\n           that follow the specified patch in the series file.\nupgrade\nupgrade the meta-data in a working tree from an old version of\n           quilt to the current version. this command is only needed when\n           the quilt meta-data format has changed, and the working tree\n           still contains old-format meta-data. in that case, quilt will\n           request to run `quilt upgrade'.",
      "examples": "",
      "options": ""
    },
    {
      "command": "ln",
      "description": "in the 1st form, create a link to target with the name link_name.\n       in the 2nd form, create a link to target in the current directory.\n       in the 3rd and 4th forms, create links to each target in\n       directory.  create hard links by default, symbolic links with\n--symbolic\n.  by default, each destination (name of new link)\n       should not already exist.  when creating hard links, each target\n       must exist.  symbolic links can hold arbitrary text; if later\n       resolved, a relative link is interpreted in relation to its parent\n       directory.\n\n       mandatory arguments to long options are mandatory for short\n       options too.\n--backup\n[=\ncontrol\n]\n              make a backup of each existing destination file\n-b\nlike\n--backup\nbut does not accept an argument\n-d\n,\n-f\n,\n--directory\nallow the superuser to attempt to hard link directories\n              (this will probably fail due to system restrictions, even\n              for the superuser)\n-f\n,\n--force\nremove existing destination files\n-i\n,\n--interactive\nprompt whether to remove destinations\n-l\n,\n--logical\ndereference targets that are symbolic links\n-n\n,\n--no-dereference\ntreat link_name as a normal file if it is a symbolic link\n              to a directory\n-p\n,\n--physical\nmake hard links directly to symbolic links\n-r\n,\n--relative\nwith\n-s\n, create links relative to link location\n-s\n,\n--symbolic\nmake symbolic links instead of hard links\n-s\n,\n--suffix\n=\nsuffix\noverride the usual backup suffix\n-t\n,\n--target-directory\n=\ndirectory\nspecify the directory in which to create the links\n-t\n,\n--no-target-directory\ntreat link_name as a normal file always\n-v\n,\n--verbose\nprint name of each linked file\n--help\ndisplay this help and exit\n--version\noutput version information and exit\n\n       the backup suffix is '~', unless set with\n--suffix\nor\n       simple_backup_suffix.  the version control method may be selected\n       via the\n--backup\noption or through the version_control environment\n       variable.  here are the values:\n\n       none, off\n              never make backups (even if\n--backup\nis given)\n\n       numbered, t\n              make numbered backups\n\n       existing, nil\n              numbered if numbered backups exist, simple otherwise\n\n       simple, never\n              always make simple backups\n\n       using\n-s\nignores\n-l\nand\n-p\n.  otherwise, the last option specified\n       controls behavior when a target is a symbolic link, defaulting to\n-p\n.",
      "examples": "",
      "options": ""
    },
    {
      "command": "rmdir",
      "description": "the\nrmdir\nutility shall remove the directory entry specified by\n       each\ndir\noperand.\n\n       for each\ndir\noperand, the\nrmdir\nutility shall perform actions\n       equivalent to the\nrmdir\n() function called with the\ndir\noperand as\n       its only argument.\n\n       directories shall be processed in the order specified. if a\n       directory and a subdirectory of that directory are specified in a\n       single invocation of the\nrmdir\nutility, the application shall\n       specify the subdirectory before the parent directory so that the\n       parent directory will be empty when the\nrmdir\nutility tries to\n       remove it.",
      "examples": "",
      "options": ""
    },
    {
      "command": "mariadb-test",
      "description": "the\nmariadb-test\nprogram runs a test case against a mariadb server\n       and optionally compares the output with a result file. this\n       program reads input written in a special test language. typically,\n       you invoke\nmariadb-test\nvia\nmariadb-test-run.pl\nrather than\n       invoking it directly.\nmariadb-test-embedded\nis similar but is built with support for the\n       libmariadbd embedded server.\n\n       features of\nmariadb-test\n:\n\n       \u00e2\u0080\u00a2   can send sql statements to mariadb servers for execution\n\n       \u00e2\u0080\u00a2   can execute external shell commands\n\n       \u00e2\u0080\u00a2   can test whether the result from an sql statement or shell\n           command is as expected\n\n       \u00e2\u0080\u00a2   can connect to one or more standalone\nmariadbd\nservers and\n           switch between connections\n\n       \u00e2\u0080\u00a2   can connect to an embedded server (libmariadbd), if mariadb is\n           compiled with support for libmariadbd. (in this case, the\n           executable is named\nmariadb-test-embedded\nrather than\nmariadb-\ntest\n.)\n\n       by default,\nmariadb-test\nreads the test case on the standard\n       input. to run\nmariadb-test\nthis way, you normally invoke it like\n       this:\n\n           shell>\nmariadb-test [\noptions\n] [\ndb_name\n] <\ntest_file\nyou can also name the test case file with a\n--test-file=\nfile_name\noption.\n\n       the exit value from\nmariadb-test\nis 0 for success, 1 for failure,\n       and 62 if it skips the test case (for example, if after checking\n       some preconditions it decides not to run the test).\nmariadb-test\nsupports the following options:\n\n       \u00e2\u0080\u00a2\n--help\n,\n-?\ndisplay a help message and exit.\n\n       \u00e2\u0080\u00a2\n--basedir=\ndir_name\n,\n-b\ndir_name\nthe base directory for tests.\n\n       \u00e2\u0080\u00a2\n--character-sets-dir=\npath\nthe directory where character sets are installed.\n\n       \u00e2\u0080\u00a2\n--compress\n,\n-c\ncompress all information sent between the client and the\n           server if both support compression.\n\n       \u00e2\u0080\u00a2\n--connect-timeout=\nnum\nthis can be used to set the mysql_opt_connect_timeout\n           parameter of mysql_options to change the number of seconds\n           before an unsuccessful connection attempt times out.\n\n       \u00e2\u0080\u00a2\n--continue-on-error\ncontinue test even if we got an error. this is mostly useful\n           when testing a storage engine to see what from a test file it\n           can execute, or to find all syntax errors in a newly created\n           big test file.\n\n       \u00e2\u0080\u00a2\n--cursor-protocol\nuse cursors for prepared statements.\n\n       \u00e2\u0080\u00a2\n--database=\ndb_name\n,\n-d\ndb_name\nthe default database to use.\n\n       \u00e2\u0080\u00a2\n--debug[=\ndebug_options\n]\n,\n-#[\ndebug_options\n]\nwrite a debugging log if mariadb is built with debugging\n           support. the default\ndebug_options\nvalue is\n           'd:t:s:i:o,/tmp/mariadb-test.trace'.\n\n       \u00e2\u0080\u00a2\n--debug-check\nprint some debugging information when the program exits.\n\n       \u00e2\u0080\u00a2\n--debug-info\nprint debugging information and memory and cpu usage\n           statistics when the program exits.\n\n       \u00e2\u0080\u00a2\n--host=\nhost_name\n,\n-h\nhost_name\nconnect to the mariadb server on the given host.\n\n       \u00e2\u0080\u00a2\n--logdir=\ndir_name\nthe directory to use for log files.\n\n       \u00e2\u0080\u00a2\n--mark-progress\nwrite the line number and elapsed time to\ntest_file\n.progress.\n\n       \u00e2\u0080\u00a2\n--max-connect-retries=\nnum\nthe maximum number of connection attempts when connecting to\n           server.\n\n       \u00e2\u0080\u00a2\n--max-connections=\nnum\nthe maximum number of simultaneous server connections per\n           client (that is, per test). if not set, the maximum is 128.\n           minimum allowed limit is 8, maximum is 5120.\n\n       \u00e2\u0080\u00a2\n--no-defaults\ndo not read default options from any option files. if used,\n           this must be the first option.\n\n       \u00e2\u0080\u00a2\n--non-blocking-api\nuse the non-blocking client api for communication.\n\n       \u00e2\u0080\u00a2\n--overlay-dir=\ndir_name\noverlay directory.\n\n       \u00e2\u0080\u00a2\n--password[=\npassword\n]\n,\n-p[\npassword\n]\nthe password to use when connecting to the server. if you use\n           the short option form (\n-p\n), you\ncannot\nhave a space between\n           the option and the password. if you omit the\npassword\nvalue\n           following the\n--password\nor\n-p\noption on the command line, you\n           are prompted for one.\n\n       \u00e2\u0080\u00a2\n--plugin-dir=\ndir_name\ndirectory for client-side plugins.\n\n       \u00e2\u0080\u00a2\n--port=\nport_num\n,\n-p\nport_num\nthe tcp/ip port number to use for the connection or 0 for\n           default to, in order of preference, my.cnf, $mysql_tcp_port,\n           /etc/services, built-in default (3306).\n\n       \u00e2\u0080\u00a2\n--prologue=\nname\ninclude the contents of the given file before processing the\n           contents of the test file. the included file should have the\n           same format as other\nmariadb-test\ntest files. this option has\n           the same effect as putting a --source\nfile_name\ncommand as the\n           first line of the test file.\n\n       \u00e2\u0080\u00a2\n--protocol={tcp|socket|pipe|memory}\nthe connection protocol to use for connecting to the server.\n           it is useful when the other connection parameters normally\n           would cause a protocol to be used other than the one you want.\n\n       \u00e2\u0080\u00a2\n--ps-protocol\nuse the prepared-statement protocol for communication.\n\n       \u00e2\u0080\u00a2\n--quiet\nsuppress all normal output. this is a synonym for\n--silent\n.\n\n       \u00e2\u0080\u00a2\n--record\n,\n-r\nrecord the output that results from running the test file into\n           the file named by the\n--result-file\noption, if that option is\n           given. it is an error to use this option without also using\n--result-file\n.\n\n       \u00e2\u0080\u00a2\n--result-file=\nfile_name\n,\n-r\nfile_name\nthis option specifies the file for test case expected results.\n--result-file\n, together with\n--record\n, determines how\nmariadb-\ntest\ntreats the test actual and expected results for a test\n           case:\n\n           \u00e2\u0080\u00a2   if the test produces no results,\nmariadb-test\nexits with\n               an error message to that effect, unless\n--result-file\nis\n               given and the named file is an empty file.\n\n           \u00e2\u0080\u00a2   otherwise, if\n--result-file\nis not given,\nmariadb-test\nsends test results to the standard output.\n\n           \u00e2\u0080\u00a2   with\n--result-file\nbut not\n--record\n,\nmariadb-test\nreads\n               the expected results from the given file and compares them\n               with the actual results. if the results do not match,\nmariadb-test\nwrites a .reject file in the same directory\n               as the result file, outputs a diff of the two files, and\n               exits with an error.\n\n           \u00e2\u0080\u00a2   with both\n--result-file\nand\n--record\n,\nmariadb-test\nupdates\n               the given file by writing the actual test results to it.\n\n       \u00e2\u0080\u00a2\n--result-format-version=\n#\nversion of the result file format to use.\n\n       \u00e2\u0080\u00a2\n--server-arg=\nvalue\n,\n-a\nvalue\npass the argument as an argument to the embedded server. for\n           example,\n--server-arg=--tmpdir=/tmp\nor\n--server-arg=--core\n. up\n           to 64 arguments can be given.\n\n       \u00e2\u0080\u00a2\n--server-file=\nfile_name\n,\n-f\nfile_name\nread arguments for the embedded server from the given file.\n           the file should contain one argument per line.\n\n       \u00e2\u0080\u00a2\n--silent\n,\n-s\nsuppress all normal output.\n\n       \u00e2\u0080\u00a2\n--sleep=\nnum\n,\n-t\nnum\ncause all sleep commands in the test case file to sleep\nnum\nseconds. this option does not affect real_sleep commands.\n\n           an option value of 0 can be used, which effectively disables\n           sleep commands in the test case.\n\n       \u00e2\u0080\u00a2\n--socket=\npath\n,\n-s\npath\nthe socket file to use when connecting to localhost (which is\n           the default host).\n\n       \u00e2\u0080\u00a2\n--sp-protocol\nexecute dml statements within a stored procedure. for every\n           dml statement,\nmariadb-test\ncreates and invokes a stored\n           procedure that executes the statement rather than executing\n           the statement directly.\n\n       \u00e2\u0080\u00a2\n--ssl\nenable ssl for connection (automatically enabled with other\n           flags). disable with\n--skip-ssl\n.\n\n       \u00e2\u0080\u00a2\n--ssl-ca=\nname\nca file in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-capath=\nname\nca directory (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-cert=\nname\nx509 cert in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-cipher=\nname\nssl cipher to use (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-key=\nname\nx509 key in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-crl=\nname\ncertificate revocation list (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-crlpath=\nname\ncertificate revocation list path (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-verify-server-cert\nverify server's \"common name\" in its cert against hostname\n           used when connecting. this option is disabled by default.\n\n       \u00e2\u0080\u00a2\n--suite-dir=\ndir_name\nsuite directory.\n\n       \u00e2\u0080\u00a2\n--tail-lines=\nnn\nspecify how many lines of the result to include in the output\n           if the test fails because an sql statement fails. the default\n           is 0, meaning no lines of result printed.\n\n       \u00e2\u0080\u00a2\n--test-file=\nfile_name\n,\n-x\nfile_name\nread test input from this file. the default is to read from\n           the standard input.\n\n       \u00e2\u0080\u00a2\n--timer-file=\nfile_name\n,\n-m\nfile_name\nif given, the number of microseconds spent running the test\n           will be written to this file. this is used by\nmariadb-test-run.pl\nfor its reporting.\n\n       \u00e2\u0080\u00a2\n--tmpdir=\ndir_name\n,\n-t\ndir_name\nthe temporary directory where socket files are created.\n\n       \u00e2\u0080\u00a2\n--user=\nuser_name\n,\n-u\nuser_name\nthe mariadb user name to use when connecting to the server.\n\n       \u00e2\u0080\u00a2\n--verbose\n,\n-v\nverbose mode. print out more information about what the\n           program does.\n\n       \u00e2\u0080\u00a2\n--version\n,\n-v\ndisplay version information and exit.\n\n       \u00e2\u0080\u00a2\n--view-protocol\nevery select statement is wrapped inside a view.",
      "examples": "",
      "options": ""
    }
  ],
  "context": "Retrieved commands:\n\nCommand: pmlogger\nDescription: pmlogger\ncreates the archives of performance metric values that\n       may be ``played back'' by other performance co-pilot (see\npcpintro(1)\n) tools.  these logs form the basis of the vcr paradigm\n       and retrospective performance analysis services common to the pcp\n       toolkit.\n\n       the mandatory argument\narchive\nis the base name for the physical\n       files that constitute an archive.  the\narchive\nargument may\n       contain\nstrftime(3)\nmeta-characters, which will be substituted\n       prior to creating the archive files.  when\npmlogger\nis run as a\n       service (see\npmlogger_daily(1)\n), the standard archive base name\n       template is\n%y%m%d.%h.%m\n.\n\n       the\n-v\noption specifies the version for the archive that is\n       generated.  by default the archive version\n$pcp_archive_version\n(set to 3 in current pcp releases) is used, and the only values\n       currently supported for\nversion\nare 2 or 3.\n\n       unless directed to another host by the\n-h\noption or when directly\n       using pmdas via the\n-o\noption,\npmlogger\nwill contact the\n       performance metrics collector daemon (pmcd) on the local host and\n       use that as the source of the metric values to be logged.\n\n       to support the required flexibility and control over what is\n       logged and when,\npmlogger\nmaintains an independent two level\n       logging state for each instance of each performance metric.  at\n       the first (mandatory) level, logging is allowed to be\non\n(with an\n       associated interval between samples), or\noff\nor\nmaybe\n.  in the\n       latter case, the second (advisory) level logging is allowed to be\non\n(with an associated interval between samples), or\noff\n.\n\n       the mandatory level allows universal specification that some\n       metrics must be logged, or must\nnot\nbe logged.  the default state\n       for all instances of all metrics when\npmlogger\nstarts is mandatory\n       maybe and advisory off.\n\n       use\npmlc(1)\nto interrogate and change the logging state once\npmlogger\nis running.\n\n       if a metric's state is mandatory (on or off) and a request is made\n       to change it to mandatory maybe, the new state is mandatory maybe\n       and advisory off.  if a metric's state is already advisory (on or\n       off) and a request is made to change it to mandatory maybe, the\n       current state is retained.\n\n       it is not possible for\npmlogger\nto log specific instances of a\n       metric and all instances of the same metric concurrently.  if\n       specific instances are being logged and a request to log all\n       instances is made, then all instances of the metric will be logged\n       according to the new request, superseding any prior logging\n       request for the metric.  a request to log all instances of a\n       metric will supersede any previous request to log all instances.\n       a request to log specific instances of a metric when all instances\n       are already being logged is refused.  to do this one must turn off\n       logging for all instances of the metric first.  in each case, the\n       validity of the request is checked first; for example a request to\n       change a metric's logging state to advisory on when it is\n       currently mandatory off is never permitted (it is necessary to\n       change the state to mandatory maybe first).\n\n       optionally, each system running\npmcd(1)\nmay also be configured to\n       run a ``primary''\npmlogger\ninstance.  this\npmlogger\ninstance is\n       launched by\n$pcp_rc_dir/pmlogger\n, and is affected by the files\n$pcp_sysconf_dir/pmlogger/control\n,\n$pcp_sysconf_dir/pmlogger/control.d/*\n, (use\nchkconfig\n(8),\nsystemctl(1)\nor similar platform-specific commands to activate or\n       disable the primary\npmlogger\ninstance),\n$pcp_sysconfig_dir/pmlogger\n(environment variable settings for the\n       primary\npmlogger\n)\n$pcp_sysconf_dir/pmlogger/pmlogger.options\n(command line options passed to the primary\npmlogger\n) and\n$pcp_var_dir/config/pmlogger/config.default\n(the default initial\n       configuration file for the primary\npmlogger\n).\n\n       the primary\npmlogger\ninstance is identified by the\n-p\noption.\n       there may be at most one ``primary''\npmlogger\ninstance on each\n       system.  the primary\npmlogger\ninstance (if any) must be running on\n       the same host as the\npmcd(1)\nto which it connects (if any), so the\n-h\nand\n-p\noptions are mutually exclusive.\n\n       logging of some metrics is possible even in the absence of a local\npmcd(1)\n, using the \"local context\" mode of operation.  this is\n       activated using the\n-o\noption, and causes\npmlogger\nto make use of\n       local dso pmdas instead of communicating with\npmcd(1)\n.  when\n       operating using a local context, the\n-k\noption may be used to\n       control the dso pmdas that should be made accessible.  the\nspec\nargument conforms to the syntax described in\npmspeclocalpmda(3)\n.\n       more than one\n-k\noption may be used.\n\n       when launched as a non-primary instance,\npmlogger\nwill exit\n       immediately if the configuration file causes no metric logging to\n       be scheduled.  the\n-l\noption overrides this behavior, and causes a\n       non-primary\npmlogger\ninstance to ``linger'', presumably pending\n       some future dynamic re-configuration and state change via\npmlc(1)\n.\npmlogger\nwill also linger without the\n-l\noption being used if all\n       the metrics to be logged are logged as once only metrics.  when\n       the once only metrics have been logged, a warning message will be\n       generated stating that the event queue is empty and no more events\n       will be scheduled.\n\n       by default all diagnostics and errors from\npmlogger\nare written to\n       the file\npmlogger.log\nin the directory where\npmlogger\nis launched.\n       the\n-l\noption may be used to override the default behavior.  if\n       the log file cannot be created or is not writable, output is\n       written to standard error instead.  if the\nlogfile\nfor the\n-l\noption is \"\n-\n\" (i.e.\n-l-\n) then log messages are written to the\n       standard output stream.  this can be particularly useful when\n       running\npmlogger\nmanually, rather than as a service daemon.\n\n       the\n-n\noption directs\npmlogger\nto notify a service manager,\n       typically\nsystemd(1)\n, when it has started and is about to begin\n       writing pcp archives.  this option would only normally be used\n       when\npmlogger\nis run as a daemon service under the control of a\n       service manager.  for more details, see\n__pmservernotifyservicemanagerready(3)\nand\nsystemd(1)\n.  on\n       platforms that do not use a service manager that supports\n       notifications, the\n-n\noption is basically a no-op.\n\n       if specified, the\n-s\noption instructs\npmlogger\nto terminate after\n       a certain size in records, bytes or time units has been\n       accumulated.  if\nendsize\nis an integer then\nendsize\nrecords will\n       be written to the archive.  if\nendsize\nis an integer suffixed by\nb\nor\nbytes\nthen\nendsize\nbytes of the archive data will be written\n       out (note, however, that archive record boundaries will not be\n       broken and so this limit may be slightly surpassed).  other viable\n       file size units include:\nk\n,\nkb\n,\nkib\n,\nkbyte\n,\nkilobyte\nfor kilobytes\n       and\nm\n,\nmb\n,\nmib\n,\nmbyte\n,\nmegabyte\nfor megabytes and\ng\n,\ngb\n,\ngib\n,\ngbyte\n,\ngigabyte\nfor gigabytes.  these units may be optionally\n       suffixed by an\ns\nand may be of mixed case.  alternatively\nendsize\nmay be an integer or a floating point number suffixed using a time\n       unit as described in\npcpintro(1)\nfor the\ninterval\nargument (to the\n       standard pcp\n-t\ncommand line option).\n       some examples of different formats:\n-s 100\n-s 100bytes\n-s 100k\n-s 100mb\n-s 10gbyte\n-s 10mins\n-s 1.5hours\nthe default is for\npmlogger\nto run forever.\n\n       the\n-r\noption causes the size of the physical record(s) for each\n       group of metrics and the expected contribution of the group to the\n       size of the pcp archive for one full day of collection to be\n       reported in the log file.  this information is reported the first\n       time each group is successfully written to the archive.\n\n       the\n-u\noption specifies the user account under which to run\npmlogger\n.  the default is the current user account for interactive\n       use.  when run as a daemon, the unprivileged \"pcp\" account is used\n       in current versions of pcp, but in older versions the superuser\n       account (\"root\") was used by default.\n\n       the archive is potentially a multi-volume data set, and the\n-v\noption causes\npmlogger\nto start a new volume after a certain size\n       in records, bytes, or time units has been accumulated for the\n       current volume.  the format of this size specification is\n       identical to that of the\n-s\noption (see above).  the default is\n       for\npmlogger\nto create a single volume archive.  additional volume\n       switches can also be forced asynchronously by either using\npmlc(1)\nor sending\npmlogger\na sighup signal (see below).  note, if a\n       scheduled volume switch is in operation due to the\n-v\noption, then\n       its counters will be reset after an asynchronous switch.\n\n       independent of any\n-v\noption, each volume of an archive is limited\n       to no more than 2^31 bytes, so\npmlogger\nwill automatically create\n       a new volume for the archive before this limit is reached.\n\n       normally\npmlogger\noperates on the distributed performance metrics\n       name space (pmns), however if the\n-n\noption is specified an\n       alternative local pmns is loaded from the file\npmnsfile\n.\n\n       under normal circumstances,\npmlogger\nwill run forever (except for\n       a\n-s\noption or a termination signal).  the\n-t\noption may be used\n       to limit the execution time using the format of time as prescribed\n       by\npcpintro(1)\n.  the time is interpreted within the time zone of\n       the pmcd server, unless the\n-y\noption is given, within which case\n       the time zone at this logger host is used.\n       some examples of different formats:\n-t 10mins\n-t '@ 11:30'\nfrom this it can be seen that\n-t 10mins\nand\n-s 10mins\nperform\n       identical actions.\n\n       alternatively,\npmlogger\nruntime may be limited to the lifetime of\n       another process by using the\n-p\nor\n--pid\noption to nominate the\n       pid of the process of interest.  in this case the\npmlogger\nwill\n       exit when the other process no longer exists.\n\n       when\npmlogger\nreceives a\nsighup\nsignal, the current volume of the\n       archive is closed, and a new volume is opened.  this mechanism (or\n       the alternative mechanism via\npmlc(1)\n) may be used to manage the\n       growth of the archive files - once a log volume is closed, that\n       file may be archived without ill-effect on the continued operation\n       of\npmlogger\n.  see also the\n-v\noption above.\n\n       when\npmlogger\nreceives a\nsigusr2\nsignal, the current archive is\n       closed, and a new archive is opened.  for this to succeed, the\n       original\narchive\nargument must include\nstrftime(3)\nmeta characters\n       (e.g.\n%y%m%d.%h.%m\n), otherwise\npmlogger\nwill exit because the\n       archive files will already exist and\npmlogger\nwill not over-write\n       existing archive files.  note that\nsigusr2\ntriggers\npmlogger\nto\n       re-exec itself and re-parse all original arguments.  this means\n       that any relative time limits placed on it's termination time or\n       sampling limit are reset and begin again.  this only affects\n       relative termination times, not absolute times e.g.\n-t 5s\nis\n       affected, but\n-t 5pm\nis not.\n\n       historically the buffers for the current archive may be flushed to\n       disk using the\nflush\ncommand of\npmlc(1)\n, or by using the\n-u\noption.  the current version of\npmlogger\nand the\nlibpcp\nroutines\n       that underpin\npmlogger\nunconditionally use unbuffered writes and a\n       single\nfwrite(3)\nfor each logical record written, and so\n       ``flushing'' does not force any additional data to be written to\n       the file system.  the\n-u\noption and the\npmlc(1)\nflush\ncommand are\n       retained for backwards compatibility.\n\n       when launched with the\n-x\noption, pmlogger will accept\n       asynchronous control requests on the file descriptor\nfd\n.  this\n       option is only expected to be used internally by pcp applications\n       that support ``live record mode''.\n\n       the\n-m\noption allows the string\nnote\nto be appended to the map\n       file for this instance of\npmlogger\nin the\n$pcp_tmp_dir/pmlogger\ndirectory.  this is currently used internally to document the file\n       descriptor (\nfd\n) when the\n-x\noption is used, or to indicate that\n       this\npmlogger\ninstance was started under the control of\npmlogger_check(1)\n, (\n-m pmlogger_check\n) or was re-exec'd (see\nexecvp(3)\n) due to a\nsigusr2\nsignal being received as described\n       above (\n-m reexec\n).\n\n       the\n-h\noption allows the hostname written into the archive label\n       to be overridden.  this mirrors the\n-h\noption of\npmcd(1)\n, but\n       allows it to be specified on the\npmlogger\nprocess.  without this\n       option, the value returned from the logged\npmcd(1)\nis used.\n\n       the\n-c\noption will cause the configuration file to be parsed and\npmlogger\nwill then exit without creating an output archive, so\n       when\n-c\nis specified, the\narchive\ncommand line argument is not\n       required.  any errors in the configuration file are reported.\n\n       the\n-d\nor\n--directory\noption may be used to specify the directory\n       where the\narchive\nshould be created.\ndirectory\nmay include\nsh\n(1)\n       metacharacters, like\n$(\n...\n)\nor\n`\n...\n`\nor\n$\nvar\nand\npmlogger\nwill\n       expand these to produce a final directory path.  the resultant\n       path must be absolute, not relative.  the\n-d\noption is intended\n       primarily for use by\npmlogger_check(1)\nand normal users would not\n       typically need to use the option, as the directory for\narchive\nis\n       either implied by\narchive\nif it contains directory components else\n       the current directory by default.\nRelevant sections:\n- \n\n---\n\nCommand: quilt\nDescription: quilt\nis a tool to manage large sets of patches by keeping track\n       of the changes each patch makes.  patches can be applied,\n       unapplied, refreshed, and so forth.  the key philosophical concept\n       is that your primary working material is patches.\n\n       with\nquilt\n, all work occurs within a single directory tree.\n       commands can be invoked from anywhere within the source tree.\n       like\ncvs\n,\nsubversion\n, or\ngit\n,\nquilt\ntakes commands of the form\n       \u00e2\u0080\u009cquilt\ncommand\n\u00e2\u0080\u009d.  a command can be truncated (abbreviated) as long\n       as the specified part of the command is unambiguous.  if\ncommand\nis ambiguously short,\nquilt\nlists all commands matching that\n       prefix and exits.  all commands print a brief contextual help\n       message and exit if given the \u00e2\u0080\u009c-h\u00e2\u0080\u009d option.\nquilt\nmanages a stack of patches.  patches are applied\n       incrementally on top of the base tree plus all preceding patches.\n       they can be pushed onto the stack (\u00e2\u0080\u009cquilt push\u00e2\u0080\u009d), and popped off\n       the stack (\u00e2\u0080\u009cquilt pop\u00e2\u0080\u009d).  commands are available for querying the\n       contents of the stack (\u00e2\u0080\u009cquilt applied\u00e2\u0080\u009d, \u00e2\u0080\u009cquilt previous\u00e2\u0080\u009d, \u00e2\u0080\u009cquilt\n       top\u00e2\u0080\u009d) and the patches that are not applied at a particular moment\n       (\u00e2\u0080\u009cquilt next\u00e2\u0080\u009d, \u00e2\u0080\u009cquilt unapplied\u00e2\u0080\u009d).  by default, most commands\n       apply to the topmost patch on the stack.\n\n       patch files are located in the\npatches\nsubdirectory of the source\n       tree (see\nexample of working tree\n, under\nfiles\n, below).  the\nquilt_patches\nenvironment variable overrides this default\n       location.  when not found in the current directory, that\n       subdirectory is searched recursively in the parent directories\n       (this is similar to the way\ngit\nsearches for its configuration\n       files).  the\npatches\ndirectory may contain subdirectories.  it may\n       also be a symbolic link instead of a directory.\nquilt\ncreates and maintains a file called\nseries\n, which defines\n       the order in which patches are applied.  the\nquilt_series\nenvironment variable overrides this default name.  you can query\n       the contents of the series file at any time with \u00e2\u0080\u009cquilt series\u00e2\u0080\u009d.\n       in this file, each patch file name is on a separate line.  patch\n       files are identified by path names that are relative to the\npatches\ndirectory; patches may be in subdirectories below this\n       directory.  lines in the series file that start with a hash\n       character (#) are ignored.  patch options, such as the strip level\n       or whether the patch is reversed, can be added after each patch\n       file name.  options are introduced by a space, separated by\n       spaces, and follow the syntax of the patch(1) options (e.g.,\n       \u00e2\u0080\u009c-p2\u00e2\u0080\u009d).  quilt records patch options automatically when a command\n       supporting them is used.  without options, strip level 1 is\n       assumed.  you can also add a comment after each patch file name\n       and options, introduced by a space followed by a hash character.\n       when\nquilt\nadds, removes, or renames patches, it automatically\n       updates the series file.  users of\nquilt\ncan modify series files\n       while some patches are applied, as long as the applied patches\n       remain in their original order.  unless there are means by which a\n       series file can be generated automatically, you should provide it\n       along with any set of\nquilt\n-managed patches you distribute.\n       different series files can be used to assemble patches in\n       different ways, corresponding (for example) to different\n       development branches.\n\n       before a patch is applied, copies of all files the patch modifies\n       are saved to the\n.pc/\npatch-name directory, where\npatch-name\nis the\n       name of the patch (for example,\nfix-buffer-overflow.patch\n).  the\n       patch is added to the list of currently applied patches\n       (\n.pc/applied-patches\n).  later, when a patch is regenerated (\u00e2\u0080\u009cquilt\n       refresh\u00e2\u0080\u009d), the backup copies in\n.pc/\npatch-name are compared with\n       the current versions of the files in the source tree using gnu\ndiff(1)\n.\n\n       a similar process occurs when starting a new patch (\u00e2\u0080\u009cquilt new\u00e2\u0080\u009d);\n       the new patch file name is added to the series file.  a file to be\n       changed by the patch is backed up and opened for editing (\u00e2\u0080\u009cquilt\n       edit\u00e2\u0080\u009d).  after editing, inspect the impact of your changes (\u00e2\u0080\u009cquilt\n       diff\u00e2\u0080\u009d); the changes stay local to your working tree until you call\n       \u00e2\u0080\u009cquilt refresh\u00e2\u0080\u009d to write them to the patch file.\n\n       documentation related to a patch can be put at the beginning of\n       its patch file (\u00e2\u0080\u009cquilt header\u00e2\u0080\u009d).\nquilt\nis careful to preserve all\n       text that precedes the actual patch when doing a refresh.  (this\n       is limited to patches in unified format; see the gnu\ndiffutils\nmanual.)\n\n       the series file is looked up in the\n.pc\ndirectory, in the root of\n       the source tree, and in the patches directory.  the first series\n       file that is found is used.  this may also be a symbolic link, or\n       a file with multiple hard links.  usually, only one series file is\n       used for a set of patches, making the patches subdirectory a\n       convenient location.\n\n       the\n.pc\ndirectory cannot be relocated, but it can be a symbolic\n       link.  its subdirectories must not be renamed or restructured.\n       while patches are applied to the source tree, this directory is\n       essential for many operations, including popping patches off the\n       stack and refreshing them.  files in the\n.pc\ndirectory are\n       automatically removed when they are no longer needed, so there is\n       no need to clean up manually.\nquilt commands reference\nadd\n[-p patch] {file} ...\n\n           add one or more files to the topmost or named patch.  files\n           must be added to the patch before being modified.  files that\n           are modified by patches already applied on top of the\n           specified patch cannot be added.\n\n           -p patch\n\n               patch to add files to.\nannotate\n[-p patch] {file}\n\n           print an annotated listing of the specified file showing which\n           patches modify which lines. only applied patches are included.\n\n           -p patch\n\n               stop checking for changes at the specified rather than the\n               topmost patch.\napplied\n[patch]\n\n           print a list of applied patches, or all patches up to and\n           including the specified patch in the file series.\ndelete\n[-r] [--backup] [patch|-n]\n\n           remove the specified or topmost patch from the series file.\n           if the patch is applied, quilt will attempt to remove it\n           first. (only the topmost patch can be removed right now.)\n\n           -n  delete the next patch after topmost, rather than the\n               specified or topmost patch.\n\n           -r  remove the deleted patch file from the patches directory\n               as well.\n\n           --backup\n\n               rename the patch file to patch~ rather than deleting it.\n               ignored if not used with `-r'.\ndiff\n[-p n|-p ab] [-u|-u num|-c|-c num] [--combine patch|-z] [-r]\n       [-p patch] [--snapshot] [--diff=utility] [--no-timestamps] [--no-\n       index] [--sort] [--color[=always|auto|never]] [file ...]\n\n           produces a diff of the specified file(s) in the topmost or\n           specified patch.  if no files are specified, all files that\n           are modified are included.\n\n           -p n\n               create a -p n style patch (-p0 or -p1 are supported).\n\n           -p ab\n               create a -p1 style patch, but use a/file and b/file as the\n               original and new filenames instead of the default\n               dir.orig/file and dir/file names.\n\n           -u, -u num, -c, -c num\n\n               create a unified diff (-u, -u) with num lines of context.\n               create a context diff (-c, -c) with num lines of context.\n               the number of context lines defaults to 3.\n\n           --no-timestamps\n\n               do not include file timestamps in patch headers.\n\n           --no-index\n\n               do not output index: lines.\n\n           -z  write to standard output the changes that have been made\n               relative to the topmost or specified patch.\n\n           -r  create a reverse diff.\n\n           -p patch\n\n               create a diff for the specified patch.  (defaults to the\n               topmost patch.)\n\n           --combine patch\n\n               create a combined diff for all patches between this patch\n               and the patch specified with -p. a patch name of `-' is\n               equivalent to specifying the first applied patch.\n\n           --snapshot\n\n               diff against snapshot (see `quilt snapshot -h').\n\n           --diff=utility\n\n               use the specified utility for generating the diff. the\n               utility is invoked with the original and new file name as\n               arguments.\n\n           --color[=always|auto|never]\n\n               use syntax coloring (auto activates it only if the output\n               is a tty).\n\n           --sort\n               sort files by their name instead of preserving the\n               original order.\nedit\nfile ...\n\n           edit the specified file(s) in $editor after adding it (them)\n           to the topmost patch.\nfiles\n[-v] [-a] [-l] [--combine patch] [patch]\n\n           print the list of files that the topmost or specified patch\n           changes.\n\n           -a  list all files in all applied patches.\n\n           -l  add patch name to output.\n\n           -v  verbose, more user friendly output.\n\n           --combine patch\n\n               create a listing for all patches between this patch and\n               the topmost or specified patch. a patch name of `-' is\n               equivalent to specifying the first applied patch.\nfold\n[-r] [-q] [-f] [-p strip-level]\n\n           integrate the patch read from standard input into the topmost\n           patch: after making sure that all files modified are part of\n           the topmost patch, the patch is applied with the specified\n           strip level (which defaults to 1).\n\n           -r  apply patch in reverse.\n\n           -q  quiet operation.\n\n           -f  force apply, even if the patch has rejects. unless in\n               quiet mode, apply the patch interactively: the patch\n               utility may ask questions.\n\n           -p strip-level\n\n               the number of pathname components to strip from file names\n               when applying patchfile.\nfork\n[new_name]\n\n           fork the topmost patch.  forking a patch means creating a\n           verbatim copy of it under a new name, and use that new name\n           instead of the original one in the current series.  this is\n           useful when a patch has to be modified, but the original\n           version of it should be preserved, e.g.  because it is used in\n           another series, or for the history.  a typical sequence of\n           commands would be: fork, edit, refresh.\n\n           if new_name is missing, the name of the forked patch will be\n           the current patch name, followed by `-2'.  if the patch name\n           already ends in a dash-and-number, the number is further\n           incremented (e.g., patch.diff, patch-2.diff, patch-3.diff).\ngraph\n[--all] [--reduce] [--lines[=num]] [--edge-labels=files] [-t\n       ps] [patch]\n\n           generate a dot(1) directed graph showing the dependencies\n           between applied patches. a patch depends on another patch if\n           both touch the same file or, with the --lines option, if their\n           modifications overlap. unless otherwise specified, the graph\n           includes all patches that the topmost patch depends on.  when\n           a patch name is specified, instead of the topmost patch,\n           create a graph for the specified patch. the graph will include\n           all other patches that this patch depends on, as well as all\n           patches that depend on this patch.\n\n           --all\n               generate a graph including all applied patches and their\n               dependencies. (unapplied patches are not included.)\n\n           --reduce\n\n               eliminate transitive edges from the graph.\n\n           --lines[=num]\n\n               compute dependencies by looking at the lines the patches\n               modify.  unless a different num is specified, two lines of\n               context are included.\n\n           --edge-labels=files\n\n               label graph edges with the file names that the adjacent\n               patches modify.\n\n           -t ps\n               directly produce a postscript output file.\ngrep\n[-h|options] {pattern}\n\n           grep through the source files, recursively, skipping patches\n           and quilt meta-information. if no filename argument is given,\n           the whole source tree is searched. please see the grep(1)\n           manual page for options.\n\n           -h  print this help. the grep -h option can be passed after a\n               double-dash (--). search expressions that start with a\n               dash can be passed after a second double-dash (-- --).\nheader\n[-a|-r|-e] [--backup] [--strip-diffstat] [--strip-trailing-\n       whitespace] [patch]\n\n           print or change the header of the topmost or specified patch.\n\n           -a, -r, -e\n\n               append to (-a) or replace (-r) the exiting patch header,\n               or edit (-e) the header in $editor. if none of these\n               options is given, print the patch header.\n\n           --strip-diffstat\n\n               strip diffstat output from the header.\n\n           --strip-trailing-whitespace\n\n               strip trailing whitespace at the end of lines of the\n               header.\n\n           --backup\n\n               create a backup copy of the old version of a patch as\n               patch~.\nimport\n[-p num] [-r] [-p patch] [-f] [-d {o|a|n}] patchfile ...\n\n           import external patches.  the patches will be inserted\n           following the current top patch, and must be pushed after\n           import to apply them.\n\n           -p num\n\n               number of directory levels to strip when applying\n               (default=1)\n\n           -r\n\n               apply patch in reverse.\n\n           -p patch\n\n               patch filename to use inside quilt. this option can only\n               be used when importing a single patch.\n\n           -f  overwrite/update existing patches.\n\n           -d {o|a|n}\n\n               when overwriting in existing patch, keep the old (o), all\n               (a), or new (n) patch header. if both patches include\n               headers, this option must be specified. this option is\n               only effective when -f is used.\nmail\n{--mbox file|--send} [-m text] [-m file] [--prefix prefix]\n       [--sender ...] [--from ...] [--to ...] [--cc ...] [--bcc ...]\n       [--subject ...] [--reply-to message] [--charset ...] [--signature\n       file] [first_patch [last_patch]]\n\n           create mail messages from a specified range of patches, or all\n           patches in the series file, and either store them in a mailbox\n           file, or send them immediately. the editor is opened with a\n           template for the introduction.  please see\n           /usr/local/share/doc/quilt/readme.mail for details.  when\n           specifying a range of patches, a first patch name of `-'\n           denotes the first, and a last patch name of `-' denotes the\n           last patch in the series.\n\n           -m text\n\n               text to use as the text in the introduction. when this\n               option is used, the editor will not be invoked, and the\n               patches will be processed immediately.\n\n           -m file\n\n               like the -m option, but read the introduction from file.\n\n           --prefix prefix\n\n               use an alternate prefix in the bracketed part of the\n               subjects generated. defaults to `patch'.\n\n           --mbox file\n\n               store all messages in the specified file in mbox format.\n               the mbox can later be sent using formail, for example.\n\n           --send\n\n               send the messages directly.\n\n           --sender\n\n               the envelope sender address to use. the address must be of\n               the form `user@domain.name'. no display name is allowed.\n\n           --from, --subject\n\n               the values for the from and subject headers to use. if no\n               --from option is given, the value of the --sender option\n               is used.\n\n           --to, --cc, --bcc\n\n               append a recipient to the to, cc, or bcc header.\n\n           --charset\n\n               specify a particular message encoding on systems which\n               don't use utf-8 or iso-8859-15. this character encoding\n               must match the one used in the patches.\n\n           --signature file\n\n               append the specified signature to messages (defaults to\n               ~/.signature if found; use `-' for no signature).\n\n           --reply-to message\n\n               add the appropriate headers to reply to the specified\n               message.\nnew\n[-p n] {patchname}\n\n           create a new patch with the specified file name, and insert it\n           after the topmost patch. the name can be prefixed with a sub-\n           directory name, allowing for grouping related patches\n           together.\n\n           -p n\n               create a -p n style patch (-p0 or -p1 are supported).\n\n               quilt can be used in sub-directories of a source tree. it\n               determines the root of a source tree by searching for a\n               directory above the current working directory. create a\n               directory in the intended root directory if quilt chooses\n               a top-level directory that is too high up in the directory\n               tree.\nnext\n[patch]\n\n           print the name of the next patch after the specified or\n           topmost patch in the series file.\npatches\n[-v] [--color[=always|auto|never]] {file} [files...]\n\n           print the list of patches that modify any of the specified\n           files. (uses a heuristic to determine which files are modified\n           by unapplied patches.  note that this heuristic is much slower\n           than scanning applied patches.)\n\n           -v  verbose, more user friendly output.\n\n           --color[=always|auto|never]\n\n               use syntax coloring (auto activates it only if the output\n               is a tty).\npop\n[-afrqv] [--refresh] [num|patch]\n\n           remove patch(es) from the stack of applied patches.  without\n           options, the topmost patch is removed.  when a number is\n           specified, remove the specified number of patches.  when a\n           patch name is specified, remove patches until the specified\n           patch end up on top of the stack.  patch names may include the\n           patches/ prefix, which means that filename completion can be\n           used.\n\n           -a  remove all applied patches.\n\n           -f  force remove. the state before the patch(es) were applied\n               will be restored from backup files.\n\n           -r  always verify if the patch removes cleanly; don't rely on\n               timestamp checks.\n\n           -q  quiet operation.\n\n           -v  verbose operation.\n\n           --refresh\n\n               automatically refresh every patch before it gets\n               unapplied.\nprevious\n[patch]\n\n           print the name of the previous patch before the specified or\n           topmost patch in the series file.\npush\n[-afqvm] [--fuzz=n] [--merge[=merge|diff3]] [--leave-rejects]\n       [--color[=always|auto|never]] [--refresh] [num|patch]\n\n           apply patch(es) from the series file.  without options, the\n           next patch in the series file is applied.  when a number is\n           specified, apply the specified number of patches.  when a\n           patch name is specified, apply all patches up to and including\n           the specified patch.  patch names may include the patches/\n           prefix, which means that filename completion can be used.\n\n           -a  apply all patches in the series file.\n\n           -q  quiet operation.\n\n           -f  force apply, even if the patch has rejects.\n\n           -v  verbose operation.\n\n           --fuzz=n\n\n               set the maximum fuzz factor (default: 2).\n\n           -m, --merge[=merge|diff3]\n\n               merge the patch file into the original files (see\n               patch(1)).\n\n           --leave-rejects\n\n               leave around the reject files patch produced, even if the\n               patch is not actually applied.\n\n           --color[=always|auto|never]\n\n               use syntax coloring (auto activates it only if the output\n               is a tty).\n\n           --refresh\n\n               automatically refresh every patch after it was\n               successfully applied.\nrefresh\n[-p n|-p ab] [-u|-u num|-c|-c num] [-z[new_name]] [-f]\n       [--no-timestamps] [--no-index] [--diffstat] [--sort] [--backup]\n       [--strip-trailing-whitespace] [patch]\n\n           refreshes the specified patch, or the topmost patch by\n           default.  documentation that comes before the actual patch in\n           the patch file is retained.\n\n           it is possible to refresh patches that are not on top.  if any\n           patches on top of the patch to refresh modify the same files,\n           the script aborts by default.  patches can still be refreshed\n           with -f.  in that case this script will print a warning for\n           each shadowed file, changes by more recent patches will be\n           ignored, and only changes in files that have not been modified\n           by any more recent patches will end up in the specified patch.\n\n           -p n\n               create a -p n style patch (-p0 or -p1 supported).\n\n           -p ab\n               create a -p1 style patch, but use a/file and b/file as the\n               original and new filenames instead of the default\n               dir.orig/file and dir/file names.\n\n           -u, -u num, -c, -c num\n\n               create a unified diff (-u, -u) with num lines of context.\n               create a context diff (-c, -c) with num lines of context.\n               the number of context lines defaults to 3.\n\n           -z[new_name]\n\n               create a new patch containing the changes instead of\n               refreshing the topmost patch. if no new name is specified,\n               `-2' is added to the original patch name, etc. (see the\n               fork command.)\n\n           --no-timestamps\n\n               do not include file timestamps in patch headers.\n\n           --no-index\n\n               do not output index: lines.\n\n           --diffstat\n\n               add a diffstat section to the patch header, or replace the\n               existing diffstat section.\n\n           -f  enforce refreshing of a patch that is not on top.\n\n           --backup\n\n               create a backup copy of the old version of a patch as\n               patch~.\n\n           --sort\n               sort files by their name instead of preserving the\n               original order.\n\n           --strip-trailing-whitespace\n\n               strip trailing whitespace at the end of lines.\nremove\n[-p patch] {file} ...\n\n           remove one or more files from the topmost or named patch.\n           files that are modified by patches on top of the specified\n           patch cannot be removed.\n\n           -p patch\n\n               remove named files from the named patch.\nrename\n[-p patch] new_name\n\n           rename the topmost or named patch.\n\n           -p patch\n\n               patch to rename.\nrevert\n[-p patch] {file} ...\n\n           revert uncommitted changes to the topmost or named patch for\n           the specified file(s): after the revert, 'quilt diff -z' will\n           show no differences for those files. changes to files that are\n           modified by patches on top of the specified patch cannot be\n           reverted.\n\n           -p patch\n\n               revert changes in the named patch.\nseries\n[--color[=always|auto|never]] [-v]\n\n           print the names of all patches in the series file.\n\n           --color[=always|auto|never]\n\n               use syntax coloring (auto activates it only if the output\n               is a tty).\n\n           -v  verbose, more user friendly output.\nsetup\n[-d path-prefix] [-v] [--sourcedir dir] [--fuzz=n]\n       [--slow|--fast] {specfile|seriesfile}\n\n           initializes a source tree from an rpm spec file or a quilt\n           series file.\n\n           -d  optional path prefix for the resulting source tree.\n\n           --sourcedir\n\n               directory that contains the package sources. defaults to\n               `.'.\n\n           -v  verbose debug output.\n\n           --fuzz=n\n\n               set the maximum fuzz factor (needs rpm 4.6 or later).\n\n           --slow\n               use the original, slow method to process the spec file. in\n               this mode, rpmbuild generates a working tree in a\n               temporary directory while all its actions are recorded,\n               and then everything is replayed from scratch in the target\n               directory.\n\n           --fast\n               use the new, faster method to process the spec file. in\n               this mode, rpmbuild is told to generate a working tree\n               directly in the target directory. this is the default\n               (since quilt version 0.67).\n\n               the setup command is only guaranteed to work properly on\n               spec files where applying all the patches is the last\n               thing done in the %prep section. this is a design\n               limitation due to the fact that quilt can only operate on\n               patches. if other commands in the %prep section modify the\n               patched files, they must come first, otherwise you won't\n               be able to push the patch series.\n\n               for example, a %prep section where you first unpack a\n               tarball, then apply patches, and lastly perform a tree-\n               wide string substitution, is not ok. for \"quilt setup\" to\n               work, it would have to be changed to unpacking the\n               tarball, then performing the tree-wide string\n               substitution, and lastly applying the patches.\nsnapshot\n[-d]\n\n           take a snapshot of the current working state.  after taking\n           the snapshot, the tree can be modified in the usual ways,\n           including pushing and popping patches.  a diff against the\n           tree at the moment of the snapshot can be generated with\n           `quilt diff --snapshot'.\n\n           -d  only remove current snapshot.\ntop\nprint the name of the topmost patch on the current stack of\n           applied patches.\nunapplied\n[patch]\n\n           print a list of patches that are not applied, or all patches\n           that follow the specified patch in the series file.\nupgrade\nupgrade the meta-data in a working tree from an old version of\n           quilt to the current version. this command is only needed when\n           the quilt meta-data format has changed, and the working tree\n           still contains old-format meta-data. in that case, quilt will\n           request to run `quilt upgrade'.\nRelevant sections:\n- \n\n---\n\nCommand: ln\nDescription: in the 1st form, create a link to target with the name link_name.\n       in the 2nd form, create a link to target in the current directory.\n       in the 3rd and 4th forms, create links to each target in\n       directory.  create hard links by default, symbolic links with\n--symbolic\n.  by default, each destination (name of new link)\n       should not already exist.  when creating hard links, each target\n       must exist.  symbolic links can hold arbitrary text; if later\n       resolved, a relative link is interpreted in relation to its parent\n       directory.\n\n       mandatory arguments to long options are mandatory for short\n       options too.\n--backup\n[=\ncontrol\n]\n              make a backup of each existing destination file\n-b\nlike\n--backup\nbut does not accept an argument\n-d\n,\n-f\n,\n--directory\nallow the superuser to attempt to hard link directories\n              (this will probably fail due to system restrictions, even\n              for the superuser)\n-f\n,\n--force\nremove existing destination files\n-i\n,\n--interactive\nprompt whether to remove destinations\n-l\n,\n--logical\ndereference targets that are symbolic links\n-n\n,\n--no-dereference\ntreat link_name as a normal file if it is a symbolic link\n              to a directory\n-p\n,\n--physical\nmake hard links directly to symbolic links\n-r\n,\n--relative\nwith\n-s\n, create links relative to link location\n-s\n,\n--symbolic\nmake symbolic links instead of hard links\n-s\n,\n--suffix\n=\nsuffix\noverride the usual backup suffix\n-t\n,\n--target-directory\n=\ndirectory\nspecify the directory in which to create the links\n-t\n,\n--no-target-directory\ntreat link_name as a normal file always\n-v\n,\n--verbose\nprint name of each linked file\n--help\ndisplay this help and exit\n--version\noutput version information and exit\n\n       the backup suffix is '~', unless set with\n--suffix\nor\n       simple_backup_suffix.  the version control method may be selected\n       via the\n--backup\noption or through the version_control environment\n       variable.  here are the values:\n\n       none, off\n              never make backups (even if\n--backup\nis given)\n\n       numbered, t\n              make numbered backups\n\n       existing, nil\n              numbered if numbered backups exist, simple otherwise\n\n       simple, never\n              always make simple backups\n\n       using\n-s\nignores\n-l\nand\n-p\n.  otherwise, the last option specified\n       controls behavior when a target is a symbolic link, defaulting to\n-p\n.\nRelevant sections:\n- \n- \n\n---\n\nCommand: rmdir\nDescription: the\nrmdir\nutility shall remove the directory entry specified by\n       each\ndir\noperand.\n\n       for each\ndir\noperand, the\nrmdir\nutility shall perform actions\n       equivalent to the\nrmdir\n() function called with the\ndir\noperand as\n       its only argument.\n\n       directories shall be processed in the order specified. if a\n       directory and a subdirectory of that directory are specified in a\n       single invocation of the\nrmdir\nutility, the application shall\n       specify the subdirectory before the parent directory so that the\n       parent directory will be empty when the\nrmdir\nutility tries to\n       remove it.\n\n---\n\nCommand: mariadb-test\nDescription: the\nmariadb-test\nprogram runs a test case against a mariadb server\n       and optionally compares the output with a result file. this\n       program reads input written in a special test language. typically,\n       you invoke\nmariadb-test\nvia\nmariadb-test-run.pl\nrather than\n       invoking it directly.\nmariadb-test-embedded\nis similar but is built with support for the\n       libmariadbd embedded server.\n\n       features of\nmariadb-test\n:\n\n       \u00e2\u0080\u00a2   can send sql statements to mariadb servers for execution\n\n       \u00e2\u0080\u00a2   can execute external shell commands\n\n       \u00e2\u0080\u00a2   can test whether the result from an sql statement or shell\n           command is as expected\n\n       \u00e2\u0080\u00a2   can connect to one or more standalone\nmariadbd\nservers and\n           switch between connections\n\n       \u00e2\u0080\u00a2   can connect to an embedded server (libmariadbd), if mariadb is\n           compiled with support for libmariadbd. (in this case, the\n           executable is named\nmariadb-test-embedded\nrather than\nmariadb-\ntest\n.)\n\n       by default,\nmariadb-test\nreads the test case on the standard\n       input. to run\nmariadb-test\nthis way, you normally invoke it like\n       this:\n\n           shell>\nmariadb-test [\noptions\n] [\ndb_name\n] <\ntest_file\nyou can also name the test case file with a\n--test-file=\nfile_name\noption.\n\n       the exit value from\nmariadb-test\nis 0 for success, 1 for failure,\n       and 62 if it skips the test case (for example, if after checking\n       some preconditions it decides not to run the test).\nmariadb-test\nsupports the following options:\n\n       \u00e2\u0080\u00a2\n--help\n,\n-?\ndisplay a help message and exit.\n\n       \u00e2\u0080\u00a2\n--basedir=\ndir_name\n,\n-b\ndir_name\nthe base directory for tests.\n\n       \u00e2\u0080\u00a2\n--character-sets-dir=\npath\nthe directory where character sets are installed.\n\n       \u00e2\u0080\u00a2\n--compress\n,\n-c\ncompress all information sent between the client and the\n           server if both support compression.\n\n       \u00e2\u0080\u00a2\n--connect-timeout=\nnum\nthis can be used to set the mysql_opt_connect_timeout\n           parameter of mysql_options to change the number of seconds\n           before an unsuccessful connection attempt times out.\n\n       \u00e2\u0080\u00a2\n--continue-on-error\ncontinue test even if we got an error. this is mostly useful\n           when testing a storage engine to see what from a test file it\n           can execute, or to find all syntax errors in a newly created\n           big test file.\n\n       \u00e2\u0080\u00a2\n--cursor-protocol\nuse cursors for prepared statements.\n\n       \u00e2\u0080\u00a2\n--database=\ndb_name\n,\n-d\ndb_name\nthe default database to use.\n\n       \u00e2\u0080\u00a2\n--debug[=\ndebug_options\n]\n,\n-#[\ndebug_options\n]\nwrite a debugging log if mariadb is built with debugging\n           support. the default\ndebug_options\nvalue is\n           'd:t:s:i:o,/tmp/mariadb-test.trace'.\n\n       \u00e2\u0080\u00a2\n--debug-check\nprint some debugging information when the program exits.\n\n       \u00e2\u0080\u00a2\n--debug-info\nprint debugging information and memory and cpu usage\n           statistics when the program exits.\n\n       \u00e2\u0080\u00a2\n--host=\nhost_name\n,\n-h\nhost_name\nconnect to the mariadb server on the given host.\n\n       \u00e2\u0080\u00a2\n--logdir=\ndir_name\nthe directory to use for log files.\n\n       \u00e2\u0080\u00a2\n--mark-progress\nwrite the line number and elapsed time to\ntest_file\n.progress.\n\n       \u00e2\u0080\u00a2\n--max-connect-retries=\nnum\nthe maximum number of connection attempts when connecting to\n           server.\n\n       \u00e2\u0080\u00a2\n--max-connections=\nnum\nthe maximum number of simultaneous server connections per\n           client (that is, per test). if not set, the maximum is 128.\n           minimum allowed limit is 8, maximum is 5120.\n\n       \u00e2\u0080\u00a2\n--no-defaults\ndo not read default options from any option files. if used,\n           this must be the first option.\n\n       \u00e2\u0080\u00a2\n--non-blocking-api\nuse the non-blocking client api for communication.\n\n       \u00e2\u0080\u00a2\n--overlay-dir=\ndir_name\noverlay directory.\n\n       \u00e2\u0080\u00a2\n--password[=\npassword\n]\n,\n-p[\npassword\n]\nthe password to use when connecting to the server. if you use\n           the short option form (\n-p\n), you\ncannot\nhave a space between\n           the option and the password. if you omit the\npassword\nvalue\n           following the\n--password\nor\n-p\noption on the command line, you\n           are prompted for one.\n\n       \u00e2\u0080\u00a2\n--plugin-dir=\ndir_name\ndirectory for client-side plugins.\n\n       \u00e2\u0080\u00a2\n--port=\nport_num\n,\n-p\nport_num\nthe tcp/ip port number to use for the connection or 0 for\n           default to, in order of preference, my.cnf, $mysql_tcp_port,\n           /etc/services, built-in default (3306).\n\n       \u00e2\u0080\u00a2\n--prologue=\nname\ninclude the contents of the given file before processing the\n           contents of the test file. the included file should have the\n           same format as other\nmariadb-test\ntest files. this option has\n           the same effect as putting a --source\nfile_name\ncommand as the\n           first line of the test file.\n\n       \u00e2\u0080\u00a2\n--protocol={tcp|socket|pipe|memory}\nthe connection protocol to use for connecting to the server.\n           it is useful when the other connection parameters normally\n           would cause a protocol to be used other than the one you want.\n\n       \u00e2\u0080\u00a2\n--ps-protocol\nuse the prepared-statement protocol for communication.\n\n       \u00e2\u0080\u00a2\n--quiet\nsuppress all normal output. this is a synonym for\n--silent\n.\n\n       \u00e2\u0080\u00a2\n--record\n,\n-r\nrecord the output that results from running the test file into\n           the file named by the\n--result-file\noption, if that option is\n           given. it is an error to use this option without also using\n--result-file\n.\n\n       \u00e2\u0080\u00a2\n--result-file=\nfile_name\n,\n-r\nfile_name\nthis option specifies the file for test case expected results.\n--result-file\n, together with\n--record\n, determines how\nmariadb-\ntest\ntreats the test actual and expected results for a test\n           case:\n\n           \u00e2\u0080\u00a2   if the test produces no results,\nmariadb-test\nexits with\n               an error message to that effect, unless\n--result-file\nis\n               given and the named file is an empty file.\n\n           \u00e2\u0080\u00a2   otherwise, if\n--result-file\nis not given,\nmariadb-test\nsends test results to the standard output.\n\n           \u00e2\u0080\u00a2   with\n--result-file\nbut not\n--record\n,\nmariadb-test\nreads\n               the expected results from the given file and compares them\n               with the actual results. if the results do not match,\nmariadb-test\nwrites a .reject file in the same directory\n               as the result file, outputs a diff of the two files, and\n               exits with an error.\n\n           \u00e2\u0080\u00a2   with both\n--result-file\nand\n--record\n,\nmariadb-test\nupdates\n               the given file by writing the actual test results to it.\n\n       \u00e2\u0080\u00a2\n--result-format-version=\n#\nversion of the result file format to use.\n\n       \u00e2\u0080\u00a2\n--server-arg=\nvalue\n,\n-a\nvalue\npass the argument as an argument to the embedded server. for\n           example,\n--server-arg=--tmpdir=/tmp\nor\n--server-arg=--core\n. up\n           to 64 arguments can be given.\n\n       \u00e2\u0080\u00a2\n--server-file=\nfile_name\n,\n-f\nfile_name\nread arguments for the embedded server from the given file.\n           the file should contain one argument per line.\n\n       \u00e2\u0080\u00a2\n--silent\n,\n-s\nsuppress all normal output.\n\n       \u00e2\u0080\u00a2\n--sleep=\nnum\n,\n-t\nnum\ncause all sleep commands in the test case file to sleep\nnum\nseconds. this option does not affect real_sleep commands.\n\n           an option value of 0 can be used, which effectively disables\n           sleep commands in the test case.\n\n       \u00e2\u0080\u00a2\n--socket=\npath\n,\n-s\npath\nthe socket file to use when connecting to localhost (which is\n           the default host).\n\n       \u00e2\u0080\u00a2\n--sp-protocol\nexecute dml statements within a stored procedure. for every\n           dml statement,\nmariadb-test\ncreates and invokes a stored\n           procedure that executes the statement rather than executing\n           the statement directly.\n\n       \u00e2\u0080\u00a2\n--ssl\nenable ssl for connection (automatically enabled with other\n           flags). disable with\n--skip-ssl\n.\n\n       \u00e2\u0080\u00a2\n--ssl-ca=\nname\nca file in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-capath=\nname\nca directory (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-cert=\nname\nx509 cert in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-cipher=\nname\nssl cipher to use (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-key=\nname\nx509 key in pem format (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-crl=\nname\ncertificate revocation list (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-crlpath=\nname\ncertificate revocation list path (check openssl docs, implies\n--ssl\n).\n\n       \u00e2\u0080\u00a2\n--ssl-verify-server-cert\nverify server's \"common name\" in its cert against hostname\n           used when connecting. this option is disabled by default.\n\n       \u00e2\u0080\u00a2\n--suite-dir=\ndir_name\nsuite directory.\n\n       \u00e2\u0080\u00a2\n--tail-lines=\nnn\nspecify how many lines of the result to include in the output\n           if the test fails because an sql statement fails. the default\n           is 0, meaning no lines of result printed.\n\n       \u00e2\u0080\u00a2\n--test-file=\nfile_name\n,\n-x\nfile_name\nread test input from this file. the default is to read from\n           the standard input.\n\n       \u00e2\u0080\u00a2\n--timer-file=\nfile_name\n,\n-m\nfile_name\nif given, the number of microseconds spent running the test\n           will be written to this file. this is used by\nmariadb-test-run.pl\nfor its reporting.\n\n       \u00e2\u0080\u00a2\n--tmpdir=\ndir_name\n,\n-t\ndir_name\nthe temporary directory where socket files are created.\n\n       \u00e2\u0080\u00a2\n--user=\nuser_name\n,\n-u\nuser_name\nthe mariadb user name to use when connecting to the server.\n\n       \u00e2\u0080\u00a2\n--verbose\n,\n-v\nverbose mode. print out more information about what the\n           program does.\n\n       \u00e2\u0080\u00a2\n--version\n,\n-v\ndisplay version information and exit.\n\n       \u00e2\u0080\u00a2\n--view-protocol\nevery select statement is wrapped inside a view.\nRelevant sections:\n- \n\n---\n\n",
  "response": "To move up one directory level in UNIX, use the `cd` command followed by two dots:\n\n```bash\ncd ..\n```\n\n*   **Explanation:**\n    *   `cd` is the change directory command.\n    *   `..`  is a special shortcut that refers to the parent directory of the current directory.\n\n*   **Example:**\n\n    If your current directory is `/home/user/documents`, running `cd ..` will change your current directory to `/home/user`.\n",
  "analysis": {
    "query_analysis": {
      "intent": "The user wants to know how to navigate one level up in the directory structure using a UNIX command.",
      "keywords": [
        "relocation",
        "directory",
        "level",
        "up",
        "parent directory",
        "navigate",
        "UNIX"
      ],
      "reformulated_query": "What UNIX command is used to change the current directory to its parent directory (move one level up)?",
      "original_query": "how to move up a directory level?",
      "optimized_query": "how to relocation up a directory level?",
      "optimization_metrics": {
        "precision": 1.0,
        "recall": 0,
        "f1_score": 0,
        "retrieval_time": 0.03296303749084473,
        "command_count": 5,
        "diverse_categories": 0,
        "query_specificity": 0.65,
        "overall_score": 0.6583518481254578
      }
    },
    "command_relevance": [
      {
        "command": "pmlogger",
        "relevance_score": 0.2857142857142857
      },
      {
        "command": "quilt",
        "relevance_score": 0.2857142857142857
      },
      {
        "command": "ln",
        "relevance_score": 0.2571428571428572
      },
      {
        "command": "rmdir",
        "relevance_score": 0.2571428571428572
      },
      {
        "command": "mariadb-test",
        "relevance_score": 0.2571428571428572
      }
    ]
  },
  "command_chains": {
    "next_commands": [
      "dash",
      "aria_chk",
      "mariadb-binlog",
      "mariadb-slap",
      "mariadb-test"
    ],
    "command_chains": [
      ""
    ]
  }
}